/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHCTCRecognitionModel : CHRecurrentNeuralNetworkCoreML {
    long long  __activationsDomain;
    double  __distMean;
    double  __distStd;
    bool  __hasBatchFirstFeatureArrayShape;
    double  __interpointDistance;
    NSOrderedSet * __stringCodeMap;
    long long  _blankIndex;
    NSString * _characterProbabilityOutputName;
    struct CHCodeMap { char *x1; unsigned long long x2; unsigned int *x3; unsigned int x4; } * _codeMap;
    long long  _cosAlphaFeatureIndex;
    struct CVNLPTextDecodingPruningPolicy { 
        long long strategy; 
        bool shouldSort; 
        float threshold; 
        unsigned int maxNumberOfCandidates; 
    }  _decodingPruningPolicy;
    NSString * _directionalFeaturesInputName;
    long long  _distanceFeatureIndex;
    long long  _gapFeatureIndex;
    long long  _sequenceCompression;
    long long  _sinAlphaFeatureIndex;
    long long  _spaceIndex;
}

@property (readonly) long long _activationsDomain;
@property (readonly) double _distMean;
@property (readonly) double _distStd;
@property (readonly) bool _hasBatchFirstFeatureArrayShape;
@property (readonly) double _interpointDistance;
@property (readonly, retain) NSOrderedSet *_stringCodeMap;
@property (nonatomic, readonly) long long blankIndex;
@property (nonatomic, readonly, retain) NSString *characterProbabilityOutputName;
@property (nonatomic, readonly) struct CHCodeMap { char *x1; unsigned long long x2; unsigned int *x3; unsigned int x4; }*codeMap;
@property (nonatomic, readonly) long long cosAlphaFeatureIndex;
@property (nonatomic, readonly) struct CVNLPTextDecodingPruningPolicy { long long x1; bool x2; float x3; unsigned int x4; } decodingPruningPolicy;
@property (nonatomic, readonly, retain) NSString *directionalFeaturesInputName;
@property (nonatomic, readonly) long long distanceFeatureIndex;
@property (nonatomic, readonly) long long gapFeatureIndex;
@property (nonatomic, readonly) long long sequenceCompression;
@property (nonatomic, readonly) long long sinAlphaFeatureIndex;
@property (nonatomic, readonly) long long spaceIndex;

- (long long)_activationsDomain;
- (double)_distMean;
- (double)_distStd;
- (id)_extractFeaturesFromDrawing:(id)arg1 inputName:(id)arg2 interpointDistance:(double)arg3 error:(id*)arg4;
- (id)_extractFeaturesFromDrawing:(id)arg1 inputName:(id)arg2 interpointDistance:(double)arg3 initialVectorAnchorPoint:(struct CGPoint { double x1; double x2; })arg4 error:(id*)arg5;
- (bool)_hasBatchFirstFeatureArrayShape;
- (double)_interpointDistance;
- (id)_stringCodeMap;
- (long long)blankIndex;
- (id)characterProbabilityOutputName;
- (struct CHCodeMap { char *x1; unsigned long long x2; unsigned int *x3; unsigned int x4; }*)codeMap;
- (long long)cosAlphaFeatureIndex;
- (void)dealloc;
- (struct CVNLPTextDecodingPruningPolicy { long long x1; bool x2; float x3; unsigned int x4; })decodingPruningPolicy;
- (id)directionalFeaturesInputName;
- (long long)distanceFeatureIndex;
- (long long)gapFeatureIndex;
- (id)initWithModelName:(id)arg1 decodingPruningPolicy:(struct CVNLPTextDecodingPruningPolicy { long long x1; bool x2; float x3; unsigned int x4; })arg2;
- (id)recognizeDrawing:(id)arg1 minimumDrawingSize:(struct CGSize { double x1; double x2; })arg2 initialVectorAnchorPoint:(struct CGPoint { double x1; double x2; })arg3 activeCharacterSet:(id)arg4 outStrokeEndings:(struct vector<long, std::__1::allocator<long>> { long long *x1; long long *x2; struct __compressed_pair<long *, std::__1::allocator<long>> { long long *x_3_1_1; } x3; }*)arg5;
- (long long)sequenceCompression;
- (long long)sinAlphaFeatureIndex;
- (long long)spaceIndex;

@end
