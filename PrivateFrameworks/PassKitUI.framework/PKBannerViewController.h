/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI
 */

@interface PKBannerViewController : UIViewController <BNPresentable> {
    UIButton * _actionButton;
    PKBannerModel * _bannerModel;
    UIImageView * _cardArtImageView;
    <PKBannerViewControllerDelegate> * _delegate;
    long long  _destination;
    NSTimer * _dismissTimer;
    BNBannerSourceLayoutDescription * _layoutDescription;
    PKSecureElementPass * _pass;
    PLPlatterView * _platterView;
    NSString * _requestIdentifier;
    UILabel * _subTitleLabel;
    NSString * _subTitleText;
    UILabel * _titleLabel;
    NSString * _titleText;
}

@property (nonatomic, retain) UIButton *actionButton;
@property (nonatomic, readonly) PKBannerModel *bannerModel;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long destination;
@property (getter=isDraggingDismissalEnabled, nonatomic, readonly) bool draggingDismissalEnabled;
@property (getter=isDraggingInteractionEnabled, nonatomic, readonly) bool draggingInteractionEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) BNBannerSourceLayoutDescription *layoutDescription;
@property (nonatomic, readonly) PKSecureElementPass *pass;
@property (nonatomic, readonly) long long presentableType;
@property (nonatomic, readonly, copy) NSString *requestIdentifier;
@property (nonatomic, readonly, copy) NSString *requesterIdentifier;
@property (nonatomic, retain) NSString *subTitleText;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *titleText;
@property (getter=isTouchOutsideDismissalEnabled, nonatomic, readonly) bool touchOutsideDismissalEnabled;
@property (nonatomic, readonly) UIViewController *viewController;

- (void).cxx_destruct;
- (id)_newPlatterView;
- (void)_scheduleDismissTimerIfNecessary;
- (id)actionButton;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })bannerContentOutsets;
- (id)bannerModel;
- (long long)destination;
- (id)initWithSecureElementPass:(id)arg1 destination:(long long)arg2 layoutDescription:(id)arg3 bannerModel:(id)arg4 delegate:(id)arg5;
- (bool)isDraggingInteractionEnabled;
- (id)layoutDescription;
- (id)pass;
- (struct CGSize { double x1; double x2; })preferredContentSizeWithPresentationSize:(struct CGSize { double x1; double x2; })arg1 containerSize:(struct CGSize { double x1; double x2; })arg2;
- (void)presentableDidAppearAsBanner:(id)arg1;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (id)requestIdentifier;
- (id)requesterIdentifier;
- (void)setActionButton:(id)arg1;
- (void)setSubTitleText:(id)arg1;
- (void)setTitleText:(id)arg1;
- (bool)shouldShowActionButton;
- (id)subTitleText;
- (id)titleText;
- (id)viewController;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
