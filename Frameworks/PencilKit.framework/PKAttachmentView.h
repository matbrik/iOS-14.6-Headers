/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKAttachmentView : UIView <PKRecognitionSessionManagerDelegate, PKSelectionObserving, PKStrokeSpatialCacheDelegate> {
    NSArray * _additionalStrokes;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedBounds;
    bool  _contentHidden;
    PKDrawing * _drawing;
    NSUUID * _listenerID;
    NSMutableDictionary * _offscreenTiles;
    PKRecognitionSessionManager * _recognitionManager;
    PKStrokeSpatialCache * _strokeSpatialCache;
    UIView * _tileContainerView;
    NSMutableDictionary * _tiles;
    bool  _wantsDataDetection;
}

@property (nonatomic, retain) NSArray *additionalStrokes;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedBounds;
@property (nonatomic) bool contentHidden;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) PKDrawing *drawing;
@property (nonatomic, readonly) double drawingScale;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAtEndOfDocument;
@property (nonatomic, readonly) NSMutableDictionary *offscreenTiles;
@property (nonatomic, retain) PKRecognitionSessionManager *recognitionManager;
@property (nonatomic, readonly) PKStrokeSpatialCache *strokeSpatialCache;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView *tileContainerView;
@property (nonatomic, readonly) UIView *tileMaskView;
@property (nonatomic, readonly) NSMutableDictionary *tiles;
@property (nonatomic) bool wantsDataDetection;

- (void).cxx_destruct;
- (id)_firstStrokesInSelectedStrokes:(id)arg1;
- (void)_initializeRecognitionForDrawingIfNecessary:(id)arg1;
- (void)_initializeRecognitionForDrawingIfNecessary:(id)arg1 withVisibleOnscreenStrokes:(id)arg2;
- (id)_lastStrokesInSelectedStrokes:(id)arg1;
- (id)additionalStrokes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedBounds;
- (void)containingScrollViewDidScroll;
- (bool)contentHidden;
- (long long)contentTypeForIntersectedStrokes:(id)arg1;
- (id)dataDetectorViewAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)dealloc;
- (void)didBeginDrawing;
- (void)didBeginModifyDrawing;
- (void)didEndDrawing;
- (void)didEndModifyDrawing;
- (void)didFinishCalculatingVisibleOnscreenStrokes:(id)arg1;
- (void)didMoveToSuperview;
- (bool)disableTileAnimations;
- (id)drawing;
- (void)drawingDidChange;
- (void)drawingDidEraseStrokes;
- (double)drawingScale;
- (void)fetchIntersectedStrokesAtPoint:(struct CGPoint { double x1; double x2; })arg1 selectionType:(long long)arg2 inputType:(long long)arg3 visibleOnscreenStrokes:(id)arg4 completion:(id /* block */)arg5;
- (void)fetchIntersectedStrokesBetweenTopPoint:(struct CGPoint { double x1; double x2; })arg1 bottomPoint:(struct CGPoint { double x1; double x2; })arg2 liveScrollOffset:(struct CGPoint { double x1; double x2; })arg3 completion:(id /* block */)arg4;
- (void)fetchStrokesAmbiguouslyBelowAndAboveInsertSpaceHandleWithStrokes:(id)arg1 completion:(id /* block */)arg2;
- (void)fingerDrawingEnabledDidChange;
- (void)fullyRendered;
- (double)heightFromDrawing:(id)arg1 delta:(double)arg2;
- (bool)hitByTouchLocation:(struct CGPoint { double x1; double x2; })arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)hitChrome:(struct CGPoint { double x1; double x2; })arg1 isStylus:(bool)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 drawing:(id)arg2;
- (bool)isAtEndOfDocument;
- (bool)isRTL;
- (void)layoutSubviews;
- (id)offscreenTiles;
- (void)pixelAlignForContentScale:(double)arg1 enclosingScrollView:(id)arg2;
- (id)recognitionManager;
- (void)recognitionSessionManager:(id)arg1 foundDataDetectorItems:(id)arg2;
- (void)setAdditionalStrokes:(id)arg1;
- (void)setAttachmentChromeVisible:(bool)arg1 animated:(bool)arg2 highlightBackground:(bool)arg3;
- (void)setCachedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentHidden:(bool)arg1;
- (void)setDrawing:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRecognitionManager:(id)arg1;
- (void)setTileContainerView:(id)arg1;
- (void)setWantsDataDetection:(bool)arg1;
- (id)strokeSpatialCache;
- (id)tileContainerView;
- (id)tileMaskView;
- (id)tiles;
- (void)updateDataDetectorResults:(id)arg1;
- (void)updateDrawingHeight:(double)arg1;
- (void)updateDrawingHeight:(double)arg1 notifyDrawingDidChange:(bool)arg2;
- (void)updateFrameForTextContainer;
- (void)updateTileContainerViewFrame;
- (void)visibleOnscreenBoundsDidChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)wantsDataDetection;
- (bool)wantsFullyRendered;

@end
