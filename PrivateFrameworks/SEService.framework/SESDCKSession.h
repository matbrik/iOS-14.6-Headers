/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SEService.framework/SEService
 */

@interface SESDCKSession : NSObject <SESDCKSessionCallbacks, SESSession, SESSessionPrivate> {
    NSString * _activeKeyIdentifier;
    NSString * _aid;
    <SESDCKSessionDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _sessionQueue;
    id /* block */  _startCallback;
    bool  _supportsSecureRanging;
    unsigned long long  state;
}

@property (nonatomic, readonly) NSString *activeKeyIdentifier;
@property (nonatomic, readonly) NSString *aid;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SESDCKSessionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *sessionQueue;
@property (nonatomic, copy) id /* block */ startCallback;
@property (readonly) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsSecureRanging;
@property (readonly) NSDictionary *vehicleState;

- (void).cxx_destruct;
- (id)activeKeyIdentifier;
- (id)aid;
- (id)cancelRKEAction:(unsigned long long)arg1;
- (void)dealloc;
- (id)delegate;
- (void)didEndWithError:(id)arg1;
- (id)disableBluetooth:(bool)arg1;
- (id)endRemoteSession;
- (void)endSession;
- (id)getRKEActionsInProgress;
- (bool)getSignedMessage:(id)arg1 authorization:(id)arg2 reply:(id /* block */)arg3;
- (id)init;
- (void)sendEvent:(id)arg1;
- (bool)sendPassthroughMessage:(id)arg1 reply:(id /* block */)arg2;
- (id)sendRKEAction:(unsigned long long)arg1 authorization:(id)arg2;
- (bool)sendSignedPassthroughMessage:(id)arg1 authorization:(id)arg2 reply:(id /* block */)arg3;
- (id)sessionQueue;
- (id)setActiveKey:(id)arg1;
- (id)setAuthorization:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)setSecureElementToken:(id)arg1;
- (void)setSessionQueue:(id)arg1;
- (void)setStartCallback:(id /* block */)arg1;
- (id /* block */)startCallback;
- (void)startSession;
- (unsigned long long)state;
- (bool)supportsSecureRanging;
- (id)vehicleState;

@end
