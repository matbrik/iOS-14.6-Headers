/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TipsCore.framework/TipsCore
 */

@interface TPSTip : TPSDocument <NSCopying, NSSecureCoding> {
    NSArray * _collectionIdentifiers;
    TPSActionableContent * _fullContent;
    TPSActionableContent * _miniContent;
    bool  _siriSuggestion;
    long long  _subContentType;
    long long  _type;
    TPSWidgetContent * _widgetContent;
}

@property (nonatomic, copy) NSArray *collectionIdentifiers;
@property (nonatomic, copy) TPSActionableContent *fullContent;
@property (nonatomic, readonly, copy) TPSAssets *fullContentAssets;
@property (getter=isHardwareWelcome, nonatomic, readonly) bool hardwareWelcome;
@property (getter=isIntro, nonatomic, readonly) bool intro;
@property (nonatomic, copy) TPSActionableContent *miniContent;
@property (getter=isOutro, nonatomic, readonly) bool outro;
@property (getter=isSiriSuggestion, nonatomic) bool siriSuggestion;
@property (getter=isSoftwareWelcome, nonatomic, readonly) bool softwareWelcome;
@property (nonatomic) long long subContentType;
@property (getter=isTip, nonatomic, readonly) bool tip;
@property (nonatomic) long long type;
@property (getter=isWelcome, nonatomic, readonly) bool welcome;
@property (nonatomic, copy) TPSWidgetContent *widgetContent;

+ (id)URLSchemeWithTipIdentifier:(id)arg1 collectionIdentifier:(id)arg2 referrer:(id)arg3;
+ (long long)contentTypeForDictionary:(id)arg1;
+ (void)getValuesFromOpenURLSchemeQueryItems:(id)arg1 tipIdentifier:(id*)arg2 collectionIdentifier:(id*)arg3 referrer:(id*)arg4;
+ (bool)supportsSecureCoding;
+ (id)tipIdFromDictionary:(id)arg1;

- (void).cxx_destruct;
- (id)URLSchemeWithReferrer:(id)arg1;
- (id)actions;
- (void)addCollectionIdentifier:(id)arg1;
- (id)bodyContent;
- (id)bodyText;
- (id)collectionIdentifiers;
- (bool)containsLinks;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)fullContent;
- (id)fullContentAssets;
- (bool)hasImage;
- (bool)hasVideo;
- (bool)hasWidgetContent;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1 metadata:(id)arg2;
- (bool)isHardwareWelcome;
- (bool)isIntro;
- (bool)isOutro;
- (bool)isSiriSuggestion;
- (bool)isSoftwareWelcome;
- (bool)isTip;
- (bool)isWelcome;
- (id)miniContent;
- (void)setCollectionIdentifiers:(id)arg1;
- (void)setFullContent:(id)arg1;
- (void)setMiniContent:(id)arg1;
- (void)setSiriSuggestion:(bool)arg1;
- (void)setSubContentType:(long long)arg1;
- (void)setType:(long long)arg1;
- (void)setWidgetContent:(id)arg1;
- (id)shareText;
- (id)shortTitle;
- (long long)subContentType;
- (id)summary;
- (bool)textContainsHTML;
- (id)title;
- (long long)type;
- (void)updateWithContentDictionary:(id)arg1 metadata:(id)arg2;
- (id)webURLPath;
- (id)widgetContent;

@end
