/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBIsolatedSceneOrientationFollowingWrapperViewController : UIViewController <SBDeviceApplicationSceneHandleObserver, SBDeviceApplicationSceneOverlayViewController> {
    SBWindowSelfHostWrapper * _appOverlayHostWrapper;
    SBIsolatedSceneOrientationFollowingWindow * _appOverlayWindow;
    UIApplicationSceneClientSettingsDiffInspector * _clientSettingsDiffInspector;
    SBIsolatedSceneOrientationFollowingContainerView * _containerView;
    UIViewController * _contentViewController;
    bool  _needsDeferredOverlayWindowRotation;
    <SBIsolatedSceneOrientationFollowingWrapperOrientationDelegate> * _orientationDelegate;
    bool  _rendersWhileLocked;
    SBDeviceApplicationSceneHandle * _sceneHandle;
    UIApplicationSceneSettingsDiffInspector * _sceneSettingsDiffInspector;
    bool  _sceneWantsDeviceOrientationEvents;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView<SBDeviceApplicationSceneOverlayView> *overlayView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForOverlayRootView;
- (bool)_canShowWhileLocked;
- (void)_containerViewDidSetBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_containerViewDidSetCenter:(struct CGPoint { double x1; double x2; })arg1;
- (long long)_effectiveSceneOrientation;
- (bool)_isSceneStatusBarHidden;
- (long long)_orientationBasedOnScene;
- (void)dealloc;
- (id)initWithContentViewController:(id)arg1 sceneHandle:(id)arg2 orientationDelegate:(id)arg3 rendersWhileLocked:(bool)arg4;
- (void)loadView;
- (id)overlayView;
- (void)sceneHandle:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 transitionContext:(id)arg3;
- (void)sceneHandle:(id)arg1 didUpdateSettingsWithDiff:(id)arg2 previousSettings:(id)arg3;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
