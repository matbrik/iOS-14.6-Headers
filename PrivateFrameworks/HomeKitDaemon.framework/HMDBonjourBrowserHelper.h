/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDBonjourBrowserHelper : HMFObject <HMFTimerDelegate, NSNetServiceBrowserDelegate> {
    NSMapTable * _browsers;
    double  _browsingInterval;
    double  _browsingPeriodicity;
    HMFTimer * _browsingTimer;
    NSMutableSet * _discoveredServices;
    HMFUnfairLock * _lock;
    HMFTimer * _periodicityTimer;
    bool  _started;
}

@property (nonatomic, retain) NSMapTable *browsers;
@property (nonatomic) double browsingInterval;
@property (nonatomic) double browsingPeriodicity;
@property (nonatomic, retain) HMFTimer *browsingTimer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *discoveredServices;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMFUnfairLock *lock;
@property (nonatomic, retain) HMFTimer *periodicityTimer;
@property (getter=isStarted, nonatomic, readonly) bool started;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)browsers;
- (double)browsingInterval;
- (double)browsingPeriodicity;
- (id)browsingTimer;
- (id)discoveredServices;
- (unsigned long long)discoveredServicesCount;
- (unsigned long long)discoveredServicesCountForServiceType:(id)arg1;
- (id)initWithServicesOfTypes:(id)arg1 browsingTimeInterval:(double)arg2 browsingPeriodicity:(double)arg3;
- (bool)isStarted;
- (id)lock;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowserDidStopSearch:(id)arg1;
- (void)netServiceBrowserWillSearch:(id)arg1;
- (id)periodicityTimer;
- (void)setBrowsers:(id)arg1;
- (void)setBrowsingInterval:(double)arg1;
- (void)setBrowsingPeriodicity:(double)arg1;
- (void)setBrowsingTimer:(id)arg1;
- (void)setDiscoveredServices:(id)arg1;
- (void)setLock:(id)arg1;
- (void)setPeriodicityTimer:(id)arg1;
- (void)setStarted:(bool)arg1;
- (void)start;
- (void)stop;
- (void)stopBrowsers;
- (void)timerDidFire:(id)arg1;

@end
