/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMIVideoAnalyzerConfiguration : HMFObject <HMFLogging, NSSecureCoding> {
    HMICamera * _camera;
    double  _maxFragmentAnalysisDuration;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxFragmentDuration;
    double  _minFrameQuality;
    double  _minFrameScale;
    bool  _recognizeFaces;
    unsigned long long  _thumbnailHeight;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _thumbnailInterval;
    bool  _transcode;
}

@property (retain) HMICamera *camera;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property double maxFragmentAnalysisDuration;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } maxFragmentDuration;
@property double minFrameQuality;
@property double minFrameScale;
@property bool recognizeFaces;
@property (readonly) Class superclass;
@property unsigned long long thumbnailHeight;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } thumbnailInterval;
@property bool transcode;

+ (id)logCategory;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)attributeDescriptions;
- (id)camera;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (double)maxFragmentAnalysisDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxFragmentDuration;
- (double)minFrameQuality;
- (double)minFrameScale;
- (bool)recognizeFaces;
- (void)setCamera:(id)arg1;
- (void)setMaxFragmentAnalysisDuration:(double)arg1;
- (void)setMaxFragmentDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMinFrameQuality:(double)arg1;
- (void)setMinFrameScale:(double)arg1;
- (void)setRecognizeFaces:(bool)arg1;
- (void)setThumbnailHeight:(unsigned long long)arg1;
- (void)setThumbnailInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setTranscode:(bool)arg1;
- (unsigned long long)thumbnailHeight;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })thumbnailInterval;
- (bool)transcode;

@end
