/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Sleep.framework/Sleep
 */

@interface HKSPPersistentStateMachineState : HKSPStateMachineState <HKSPDictionarySerializable, NSCoding, NSCopying> {
    NSDateInterval * _lifetimeInterval;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDate *expirationDate;
@property (nonatomic, readonly) bool hasExpirationDate;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSDateInterval *lifetimeInterval;
@property (nonatomic, readonly) HKSPPersistentStateMachine *stateMachine;
@property (readonly) Class superclass;

+ (id)infiniteInterval;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)determineExpirationDateForCurrentDate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)equalsBuilderWithObject:(id)arg1;
- (id)expirationDate;
- (bool)hasExpirationDate;
- (id)initWithCoder:(id)arg1;
- (id)initWithStateMachine:(id)arg1;
- (id)initWithStateMachine:(id)arg1 lifetimeInterval:(id)arg2;
- (bool)isExpiredForDate:(id)arg1;
- (id)lifetimeInterval;
- (void)setExpirationDate:(id)arg1;
- (void)setLifetimeInterval:(id)arg1;
- (id)succinctDescriptionBuilder;
- (void)updateLifetimeIntervalForCurrentDate:(id)arg1 expirationBlock:(id /* block */)arg2;
- (void)willEnterWithPreviousState:(id)arg1 context:(id)arg2;
- (void)willExitWithNextState:(id)arg1 context:(id)arg2;

@end
