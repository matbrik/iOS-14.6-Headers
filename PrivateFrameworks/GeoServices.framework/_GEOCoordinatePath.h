/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface _GEOCoordinatePath : NSObject <NSSecureCoding> {
    union { 
        struct ControlPoint {} *zilch; 
        struct { /* ? */ } *basic; 
        void *data; 
    }  _coordinates;
    unsigned long long  _count;
    double * _pointLengths;
    bool  _usesZilch;
}

@property (nonatomic, readonly) unsigned long long count;
@property (nonatomic, readonly) double length;
@property (nonatomic, readonly) double*pointLengths;
@property (nonatomic, readonly) struct ControlPoint { int x1; struct GeoCoordinates { struct Longitude { unsigned int x_1_2_1; } x_2_1_1; struct Latitude { unsigned int x_2_2_1; } x_2_1_2; int x_2_1_3; } x2; struct Angle { unsigned short x_3_1_1; } x3; struct FormOfWay { int x_4_1_1; } x4; struct FunctionalClass { int x_5_1_1; } x5; int x6; }*zilchControlPoints;

+ (bool)supportsSecureCoding;

- (struct { double x1; double x2; double x3; })coordinateAt:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (double)length;
- (double*)pointLengths;
- (void)setBasicCoordinates:(struct { double x1; double x2; double x3; }*)arg1 count:(unsigned long long)arg2;
- (void)setPointLengths:(double*)arg1;
- (void)setZilchCoordinates:(struct ControlPoint { int x1; struct GeoCoordinates { struct Longitude { unsigned int x_1_2_1; } x_2_1_1; struct Latitude { unsigned int x_2_2_1; } x_2_1_2; int x_2_1_3; } x2; struct Angle { unsigned short x_3_1_1; } x3; struct FormOfWay { int x_4_1_1; } x4; struct FunctionalClass { int x_5_1_1; } x5; int x6; }*)arg1 count:(unsigned long long)arg2;
- (struct ControlPoint { int x1; struct GeoCoordinates { struct Longitude { unsigned int x_1_2_1; } x_2_1_1; struct Latitude { unsigned int x_2_2_1; } x_2_1_2; int x_2_1_3; } x2; struct Angle { unsigned short x_3_1_1; } x3; struct FormOfWay { int x_4_1_1; } x4; struct FunctionalClass { int x_5_1_1; } x5; int x6; }*)zilchControlPoints;

@end
