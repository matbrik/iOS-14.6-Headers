/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWFigCaptureStream : NSObject {
    NSMutableDictionary * _cachedProperties;
    bool  _invalidated;
    unsigned int  _ktraceCodePrefix;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSString * _portType;
    NSString * _portTypeShortString;
    <BWFigCaptureStreamStartStopDelegate> * _startStopDelegate;
    struct OpaqueFigCaptureStream { } * _stream;
    bool  _streaming;
    NSDictionary * _supportedProperties;
    NSString * _uniqueID;
}

@property (readonly) NSString *portType;
@property (nonatomic) <BWFigCaptureStreamStartStopDelegate> *startStopDelegate;
@property (getter=isStreaming, readonly) bool streaming;
@property (readonly) NSDictionary *supportedProperties;
@property (readonly) NSString *uniqueID;

+ (void)initialize;

- (id)_copyProperty:(struct __CFString { }*)arg1 requireSupported:(bool)arg2 error:(int*)arg3;
- (int)_setProperty:(struct __CFString { }*)arg1 value:(id)arg2 requireSupportedProperty:(bool)arg3;
- (int)addAttachmentsToSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 options:(id)arg2;
- (id)copyProperty:(struct __CFString { }*)arg1 error:(int*)arg2;
- (id)copyPropertyIfSupported:(struct __CFString { }*)arg1 error:(int*)arg2;
- (void)dealloc;
- (id)description;
- (struct OpaqueFigCaptureStream { }*)figCaptureStream;
- (void)flushPropertyCache;
- (id)getProperty:(struct __CFString { }*)arg1 error:(int*)arg2;
- (id)getPropertyIfSupported:(struct __CFString { }*)arg1 error:(int*)arg2;
- (id)initWithFigCaptureStream:(struct OpaqueFigCaptureStream { }*)arg1;
- (void)invalidate;
- (bool)isStreaming;
- (id)portType;
- (int)registerForNotification:(struct __CFString { }*)arg1 listener:(const void*)arg2 callback:(int (*)arg3;
- (int)sendCommandProperty:(struct __CFString { }*)arg1;
- (int)setProperty:(struct __CFString { }*)arg1 value:(id)arg2;
- (int)setPropertyIfSupported:(struct __CFString { }*)arg1 value:(id)arg2;
- (void)setStartStopDelegate:(id)arg1;
- (int)start;
- (id)startStopDelegate;
- (int)stop;
- (id)supportedProperties;
- (void)synchronizedStreamsGroupDidStop;
- (void)synchronizedStreamsGroupWillStop;
- (id)uniqueID;
- (int)unregisterForNotification:(struct __CFString { }*)arg1 listener:(const void*)arg2;

@end
