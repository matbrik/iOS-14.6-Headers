/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CinematicFraming.framework/CinematicFraming
 */

@interface BaseTrack : NSObject {
    struct KalmanTrack2D { struct KalmanTrack2DParams { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; float x_1_1_5; float x_1_1_6; float x_1_1_7; } x1; struct KalmanFilter<float, 4, 2> { struct Matrix<float, 4, 4, false> { float x_1_2_1[16]; } x_2_1_1; struct Matrix<float, 4, 4, false> { float x_2_2_1[16]; } x_2_1_2; struct Matrix<float, 2, 2, false> { float x_3_2_1[4]; } x_2_1_3; struct Matrix<float, 2, 4, false> { float x_4_2_1[8]; } x_2_1_4; struct Gaussian<float, 4> { struct Matrix<float, 4, 1, false> { float x_1_3_1[4]; } x_5_2_1; struct Matrix<float, 4, 4, false> { float x_2_3_1[16]; } x_5_2_2; } x_2_1_5; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; bool x4; float x5; } * _boxSizeTrack;
    long long  _identifier;
    Detection * _lastObservation;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastTimestamp;
    struct KalmanTrack2D { struct KalmanTrack2DParams { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; float x_1_1_5; float x_1_1_6; float x_1_1_7; } x1; struct KalmanFilter<float, 4, 2> { struct Matrix<float, 4, 4, false> { float x_1_2_1[16]; } x_2_1_1; struct Matrix<float, 4, 4, false> { float x_2_2_1[16]; } x_2_1_2; struct Matrix<float, 2, 2, false> { float x_3_2_1[4]; } x_2_1_3; struct Matrix<float, 2, 4, false> { float x_4_2_1[8]; } x_2_1_4; struct Gaussian<float, 4> { struct Matrix<float, 4, 1, false> { float x_1_3_1[4]; } x_5_2_1; struct Matrix<float, 4, 4, false> { float x_2_3_1[16]; } x_5_2_2; } x_2_1_5; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; bool x4; float x5; } * _topMidBoxPointTrack;
    long long  _type;
    BaseTrack * pairTrack;
}

@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } estimatedBoundingBox;
@property (nonatomic, readonly) long long identifier;
@property (nonatomic, readonly) Detection *lastObservation;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } lastTimestamp;
@property (nonatomic) BaseTrack *pairTrack;
@property (nonatomic, readonly) long long type;

- (void).cxx_destruct;
- (void)addObservation:(id)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })estimatedBoundingBox;
- (long long)identifier;
- (id)initWithObservation:(id)arg1 identifier:(long long)arg2 type:(long long)arg3 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4;
- (id)lastObservation;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastTimestamp;
- (id)pairTrack;
- (void)setPairTrack:(id)arg1;
- (long long)type;

@end
