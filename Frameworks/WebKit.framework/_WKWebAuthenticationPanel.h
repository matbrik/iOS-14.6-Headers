/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface _WKWebAuthenticationPanel : NSObject <WKObject> {
    struct WeakPtr<WebKit::WebAuthenticationPanelClient, WTF::EmptyCounter> { 
        struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { 
            struct WeakPtrImpl<WTF::EmptyCounter> {} *m_ptr; 
        } m_impl; 
    }  _client;
    struct ObjectStorage<API::WebAuthenticationPanel> { 
        struct type { 
            unsigned char __lx[80]; 
        } data; 
    }  _panel;
    struct RetainPtr<NSMutableSet> { 
        void *m_ptr; 
    }  _transports;
}

@property (readonly) struct Object { int (**x1)(); id x2; }*_apiObject;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_WKWebAuthenticationPanelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *relyingPartyID;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSSet *transports;
@property (nonatomic, readonly) long long type;

+ (void)clearAllLocalAuthenticatorCredentials;
+ (struct PublicKeyCredentialCreationOptions { struct RpEntity { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_1_1_1; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl {} *x_1_3_1; } x_3_2_1; } x_1_1_3; } x1; struct UserEntity { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_2_1_1; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl {} *x_1_3_1; } x_2_2_1; } x_2_1_2; struct BufferSource { struct Variant<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>, WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { union __variant_data<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>, WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { union __variant_data<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>> { struct __storage_wrapper<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>> { struct type { unsigned char x_1_7_1[8]; } x_1_6_1; } x_1_5_1; struct __dummy_type { } x_1_5_2; } x_1_4_1; union __variant_data<WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { struct __storage_wrapper<WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { struct type { unsigned char x_1_7_1[8]; } x_1_6_1; } x_2_5_1; struct __dummy_type { } x_2_5_2; } x_1_4_2; } x_1_3_1; } x_3_2_1; } x_2_1_3; } x2; })convertToCoreCreationOptionsWithOptions:(id)arg1;
+ (struct PublicKeyCredentialRequestOptions { struct BufferSource { struct Variant<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>, WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { union __variant_data<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>, WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { union __variant_data<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>> { struct __storage_wrapper<WTF::RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>> { struct type { unsigned char x_1_6_1[8]; } x_1_5_1; } x_1_4_1; struct __dummy_type { } x_1_4_2; } x_1_3_1; union __variant_data<WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { struct __storage_wrapper<WTF::RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>> { struct type { unsigned char x_1_6_1[8]; } x_1_5_1; } x_2_4_1; struct __dummy_type { } x_2_4_2; } x_1_3_2; } x_1_2_1; } x_1_1_1; } x1; })convertToCoreRequestOptionsWithOptions:(id)arg1;
+ (bool)isUserVerifyingPlatformAuthenticatorAvailable;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct Object { int (**x1)(); id x2; }*)_apiObject;
- (void)cancel;
- (void)dealloc;
- (id)delegate;
- (void)getAssertionWithHash:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)init;
- (void)makeCredentialWithHash:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)relyingPartyID;
- (void)setDelegate:(id)arg1;
- (void)setMockConfiguration:(id)arg1;
- (id)transports;
- (long long)type;

@end
