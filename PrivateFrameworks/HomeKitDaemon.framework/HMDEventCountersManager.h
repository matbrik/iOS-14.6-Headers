/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDEventCountersManager : HMFObject {
    <HMDEventCountersStoring> * _counterStorage;
    NSMutableDictionary * _eventCounters;
    NSDate * _lastSaveTime;
    HMFUnfairLock * _lock;
    double  _saveInterval;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly) <HMDEventCountersStoring> *counterStorage;
@property (nonatomic, retain) NSMutableDictionary *eventCounters;
@property (nonatomic, retain) NSDate *lastSaveTime;
@property (nonatomic) double saveInterval;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)sharedEventCountersManager;

- (void).cxx_destruct;
- (id)_fetchAllEventCounters;
- (unsigned long long)_fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)_fetchEventCountersForRequestGroup:(id)arg1;
- (id)_getOrCreateEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)_incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;
- (void)_performOnUpdate;
- (void)_resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)_save;
- (void)addObserver:(id)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;
- (void)archiveEventCountersWithEventCountersSnapshot:(id)arg1;
- (id)counterStorage;
- (id)dumpState;
- (id)eventCounters;
- (unsigned long long)fetchAggregatedEventCountersForRequestGroup:(id)arg1;
- (id)fetchAllEventCounters;
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)fetchEventCountersForRequestGroup:(id)arg1;
- (void)forceSave;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;
- (id)init;
- (id)initWithPersistentStore:(id)arg1 saveInterval:(double)arg2;
- (id)lastSaveTime;
- (void)resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)resetEventCountersForRequestGroup:(id)arg1;
- (double)saveInterval;
- (void)setEventCounters:(id)arg1;
- (void)setLastSaveTime:(id)arg1;
- (void)setSaveInterval:(double)arg1;
- (id)unarchivedEventCounters;
- (id)workQueue;

@end
