/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BusinessChatService.framework/BusinessChatService
 */

@interface BCSConfigPrefetcher : NSObject {
    <BCSConfigRemoteFetching> * _businessLinkConfigRemoteFetcher;
    <BCSConfigRemoteFetching> * _chatSuggestConfigRemoteFetcher;
    <BCSConfigCaching> * _configCache;
    <BCSConfigCacheSkipping> * _configCacheSkipper;
    <BCSFeatureFlagArbitrating> * _featureFlagArbiter;
    <BCSMetricFactoryProtocol> * _metricFactory;
    NSMutableSet * _triggers;
    <BCSUserDefaultsProviding> * _userDefaults;
}

@property (nonatomic, retain) <BCSConfigRemoteFetching> *businessLinkConfigRemoteFetcher;
@property (nonatomic, retain) <BCSConfigRemoteFetching> *chatSuggestConfigRemoteFetcher;
@property (nonatomic, retain) <BCSConfigCaching> *configCache;
@property (nonatomic, retain) <BCSConfigCacheSkipping> *configCacheSkipper;
@property (nonatomic, retain) <BCSFeatureFlagArbitrating> *featureFlagArbiter;
@property (nonatomic, retain) <BCSMetricFactoryProtocol> *metricFactory;
@property (nonatomic, retain) NSMutableSet *triggers;
@property (nonatomic, retain) <BCSUserDefaultsProviding> *userDefaults;

- (void).cxx_destruct;
- (long long)_hoursSinceLastSuccessfulPrefetchForType:(long long)arg1;
- (void)_notePrefetchForType:(long long)arg1 finishedSuccessfully:(bool)arg2;
- (void)_prefetchConfigsIfNecessaryWithXCPActivity:(id)arg1 completion:(id /* block */)arg2;
- (bool)_shouldPrefetchType:(long long)arg1;
- (void)addPrefetchTrigger:(id)arg1;
- (id)businessLinkConfigRemoteFetcher;
- (id)chatSuggestConfigRemoteFetcher;
- (id)configCache;
- (id)configCacheSkipper;
- (id)featureFlagArbiter;
- (id)initWithConfigCache:(id)arg1 configCacheSkipper:(id)arg2 featureFlagArbiter:(id)arg3 chatSuggestConfigRemoteFetcher:(id)arg4 businessLinkConfigRemoteFetcher:(id)arg5 userDefaults:(id)arg6 metricFactory:(id)arg7;
- (id)metricFactory;
- (void)setBusinessLinkConfigRemoteFetcher:(id)arg1;
- (void)setChatSuggestConfigRemoteFetcher:(id)arg1;
- (void)setConfigCache:(id)arg1;
- (void)setConfigCacheSkipper:(id)arg1;
- (void)setFeatureFlagArbiter:(id)arg1;
- (void)setMetricFactory:(id)arg1;
- (void)setTriggers:(id)arg1;
- (void)setUserDefaults:(id)arg1;
- (id)triggers;
- (id)userDefaults;

@end
