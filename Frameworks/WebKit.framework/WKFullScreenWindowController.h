/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKFullScreenWindowController : NSObject <UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate> {
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    }  _EVOrganizationName;
    bool  _EVOrganizationNameIsValid;
    WKWebView * __webView;
    bool  _blocksReturnToFullscreenFromPictureInPicture;
    bool  _enterFullscreenNeedsExitPictureInPicture;
    bool  _enterRequested;
    bool  _exitRequested;
    bool  _exitingFullScreen;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _finalFrame;
    long long  _fullScreenState;
    struct RetainPtr<WKFullScreenViewController> { 
        void *m_ptr; 
    }  _fullscreenViewController;
    bool  _inInteractiveDismiss;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _initialFrame;
    struct RetainPtr<WKFullScreenInteractiveTransition> { 
        void *m_ptr; 
    }  _interactiveDismissTransitionCoordinator;
    struct RetainPtr<UIPanGestureRecognizer> { 
        void *m_ptr; 
    }  _interactivePanDismissGestureRecognizer;
    struct RetainPtr<UIPinchGestureRecognizer> { 
        void *m_ptr; 
    }  _interactivePinchDismissGestureRecognizer;
    struct RetainPtr<id> { 
        void *m_ptr; 
    }  _notificationListener;
    bool  _returnToFullscreenFromPictureInPicture;
    struct RetainPtr<UIViewController> { 
        void *m_ptr; 
    }  _rootViewController;
    bool  _shouldReturnToFullscreenFromPictureInPicture;
    struct RetainPtr<UISwipeGestureRecognizer> { 
        void *m_ptr; 
    }  _startDismissGestureRecognizer;
    struct WKFullScreenWindowControllerVideoFullscreenManagerProxyClient { 
        int (**_vptr$VideoFullscreenManagerProxyClient)(); 
        struct WeakPtrFactory<WebKit::VideoFullscreenManagerProxyClient, WTF::EmptyCounter> { 
            struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { 
                struct WeakPtrImpl<WTF::EmptyCounter> {} *m_ptr; 
            } m_impl; 
        } m_weakPtrFactory; 
        WKFullScreenWindowController *m_parent; 
    }  _videoFullscreenManagerProxyClient;
    struct RetainPtr<UIViewController> { 
        void *m_ptr; 
    }  _viewControllerForPresentation;
    struct WKWebViewState { 
        float _savedTopContentInset; 
        double _savedPageScale; 
        double _savedViewScale; 
        double _savedZoomScale; 
        struct UIEdgeInsets { 
            double top; 
            double left; 
            double bottom; 
            double right; 
        } _savedEdgeInset; 
        struct UIEdgeInsets { 
            double top; 
            double left; 
            double bottom; 
            double right; 
        } _savedObscuredInsets; 
        struct UIEdgeInsets { 
            double top; 
            double left; 
            double bottom; 
            double right; 
        } _savedScrollIndicatorInsets; 
        struct CGPoint { 
            double x; 
            double y; 
        } _savedContentOffset; 
        double _savedMinimumZoomScale; 
        double _savedMaximumZoomScale; 
        bool _savedBouncesZoom; 
        bool _savedForceAlwaysUserScalable; 
    }  _viewState;
    struct RetainPtr<WKFullScreenPlaceholderView> { 
        void *m_ptr; 
    }  _webViewPlaceholder;
    struct RetainPtr<UIWindow> { 
        void *m_ptr; 
    }  _window;
}

@property (nonatomic) WKWebView *_webView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isFullScreen;
@property (readonly) Class superclass;
@property (nonatomic, readonly, retain) UIView *webViewPlaceholder;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_EVOrganizationName;
- (void)_completedExitFullScreen;
- (void)_dismissFullscreenViewController;
- (void)_exitFullscreenImmediately;
- (void)_interactiveDismissChanged:(id)arg1;
- (void)_interactivePinchDismissChanged:(id)arg1;
- (void)_invalidateEVOrganizationName;
- (bool)_isSecure;
- (struct WebFullScreenManagerProxy { int (**x1)(); struct WebPageProxy {} *x2; struct WebFullScreenManagerProxyClient {} *x3; bool x4; }*)_manager;
- (struct __SecTrust { }*)_serverTrust;
- (void)_startToDismissFullscreenChanged:(id)arg1;
- (void)_updateLocationInfo;
- (struct VideoFullscreenManagerProxy { int (**x1)(); unsigned int x2; bool x3; struct FloatSize { float x_4_1_1; float x_4_1_2; } x4; struct WebPageProxy {} *x5; struct Ref<WebKit::PlaybackSessionManagerProxy, WTF::RawPtrTraits<WebKit::PlaybackSessionManagerProxy>> { struct PlaybackSessionManagerProxy {} *x_6_1_1; } x6; struct HashMap<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>, WTF::HashTraits<std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>>> { struct HashTable<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>>>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>, WTF::HashMap<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>, WTF::HashTraits<std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>>>::KeyValuePairTraits, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>>> { struct KeyValuePair<WTF::ObjectIdentifier<WebKit::PlaybackSessionContextIdentifierType>, std::__1::tuple<WTF::RefPtr<WebKit::VideoFullscreenModelContext, WTF::RawPtrTraits<WebKit::VideoFullscreenModelContext>, WTF::DefaultRefDerefTraits<WebKit::VideoFullscreenModelContext>>, WTF::RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::RawPtrTraits<WebCore::VideoFullscreenInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::VideoFullscreenInterfaceAVKit>>>> {} *x_1_2_1; } x_7_1_1; } x7; }*)_videoFullscreenManager;
- (id)_webView;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)beganEnterFullScreenWithInitialFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 finalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)beganExitFullScreenWithInitialFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 finalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)close;
- (void)dealloc;
- (void)didEnterPictureInPicture;
- (void)didExitPictureInPicture;
- (void)enterFullScreen;
- (void)exitFullScreen;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithWebView:(id)arg1;
- (id)interactionControllerForDismissal:(id)arg1;
- (bool)isFullScreen;
- (void)placeholderWillMoveToSuperview:(id)arg1;
- (void)requestEnterFullScreen;
- (void)requestExitFullScreen;
- (void)set_webView:(id)arg1;
- (void)videoControlsManagerDidChange;
- (void)webViewDidRemoveFromSuperviewWhileInFullscreen;
- (id)webViewPlaceholder;

@end
