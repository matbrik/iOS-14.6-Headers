/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents
 */

@interface ASCLockupContentView : UIControl <ASCLockupPresenterView, ASCOfferButtonDelegate, ASCOfferPresenterView> {
    UILabel * _headingLabelIfLoaded;
    ASCArtworkView * _iconArtworkView;
    ASCOfferButton * _offerButton;
    UILabel * _offerStatusLabelIfLoaded;
    ASCOfferTheme * _offerTheme;
    NSString * _size;
    ASCSkeletonLabel * _subtitleLabel;
    ASCSkeletonLabel * _titleLabel;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UILabel *headingLabel;
@property (nonatomic, readonly) UILabel *headingLabelIfLoaded;
@property (nonatomic, readonly) ASCArtworkView *iconArtworkView;
@property (nonatomic, copy) UIColor *loadingColor;
@property (nonatomic, readonly) ASCOfferButton *offerButton;
@property (nonatomic, readonly) UILabel *offerStatusLabel;
@property (nonatomic, readonly) UILabel *offerStatusLabelIfLoaded;
@property (nonatomic, copy) ASCOfferTheme *offerTheme;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } preferredIconSize;
@property (nonatomic, retain) NSString *size;
@property (nonatomic, readonly) ASCSkeletonLabel *subtitleLabel;
@property (readonly) Class superclass;
@property (nonatomic, readonly) ASCSkeletonLabel *titleLabel;

+ (bool)isOfferButtonOnlyLockupForSize:(id)arg1;

- (void).cxx_destruct;
- (void)addOfferTarget:(id)arg1 action:(SEL)arg2;
- (void)beginOfferModalStateWithCancelBlock:(id /* block */)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)endOfferModalState;
- (id)headingLabel;
- (id)headingLabelIfLoaded;
- (id)iconArtworkView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (void)layoutSubviews;
- (id)loadingColor;
- (id)makeLayout;
- (id)offerButton;
- (void)offerButton:(id)arg1 willTransitionToMetadata:(id)arg2 usingAnimator:(id)arg3;
- (id)offerStatusLabel;
- (id)offerStatusLabelIfLoaded;
- (id)offerTheme;
- (struct CGSize { double x1; double x2; })preferredIconSize;
- (void)removeOfferTarget:(id)arg1 action:(SEL)arg2;
- (id)saveOfferState;
- (void)setHeading:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setIconImage:(id)arg1 withDecoration:(id)arg2;
- (void)setLoading:(bool)arg1;
- (void)setLoadingColor:(id)arg1;
- (void)setOfferEnabled:(bool)arg1;
- (void)setOfferInteractive:(bool)arg1;
- (void)setOfferMetadata:(id)arg1;
- (void)setOfferStatus:(id)arg1;
- (void)setOfferTheme:(id)arg1;
- (void)setPrefersRightToLeftLayout:(bool)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setSize:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)size;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)subtitleLabel;
- (id)titleLabel;
- (void)traitCollectionDidChange:(id)arg1;

@end
