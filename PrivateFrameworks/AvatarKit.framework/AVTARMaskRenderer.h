/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
 */

@interface AVTARMaskRenderer : NSObject {
    ARFrame * _arFrame;
    <MTLRenderPipelineState> * _blurMaskPipeline;
    <MTLTexture> * _capturedDepth;
    <MTLRenderPipelineState> * _dbgCamDepthPipeline;
    bool  _debugMode;
    <MTLDevice> * _device;
    bool  _flipDepth;
    float  _headZ;
    <MTLTexture> * _lastRawDepthTexture;
    <MTLLibrary> * _library;
    <MTLRenderPipelineState> * _maskPipeline;
    long long  _orientation;
    <MTLTexture> * _rawMaskTexture;
    MTLRenderPassDescriptor * _renderPassDescriptor;
    struct CGSize { 
        double width; 
        double height; 
    }  _renderSize;
    float  _smoothDepth;
    struct __CVMetalTextureCache { } * _textureCache;
    <MTLTexture> * _tmpMaskBlurTexture;
    bool  _writeID;
}

@property (retain) <MTLTexture> *capturedDepth;
@property (nonatomic) bool flipDepth;
@property (nonatomic) float headZ;
@property (nonatomic) long long orientation;
@property (nonatomic) float smoothDepth;

+ (id)renderer;
+ (id)techniqueForDevice:(id)arg1 clearWithCamera:(bool)arg2 antialiasingMode:(unsigned long long)arg3 avatar:(id)arg4 passExecutionBlock:(id /* block */)arg5;

- (void).cxx_destruct;
- (id)capturedDepth;
- (void)dealloc;
- (bool)flipDepth;
- (float)headZ;
- (id)init;
- (id)initWithOwner:(id)arg1;
- (long long)orientation;
- (void)reloadDepthShaders;
- (void)render:(id)arg1;
- (void)setARFrame:(id)arg1;
- (void)setCapturedDepth:(id)arg1;
- (void)setFlipDepth:(bool)arg1;
- (void)setHeadZ:(float)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setSmoothDepth:(float)arg1;
- (void)setup:(struct CGSize { double x1; double x2; })arg1 context:(id)arg2 colorPixelFormat:(unsigned long long)arg3;
- (float)smoothDepth;

@end
