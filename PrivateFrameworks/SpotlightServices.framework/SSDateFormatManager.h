/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpotlightServices.framework/SpotlightServices
 */

@interface SSDateFormatManager : NSObject {
    NSDateIntervalFormatter * _allDayDateFormatter;
    NSCalendar * _calendar;
    NSDateFormatter * _dateFormatter;
    NSDateIntervalFormatter * _dateIntervalFormatter;
    NSDateFormatter * _dayOfWeekFormatter;
    NSDateIntervalFormatter * _mediumDayOfWeekDateIntervalFormatter;
    NSDateIntervalFormatter * _mediumDayOfWeekDateTimeIntervalFormatter;
    NSDateIntervalFormatter * _shortDateIntervalFormatter;
    NSDateFormatter * _shortDateTimeFormatter;
    NSDateIntervalFormatter * _shortDateTimeIntervalFormatter;
    NSDateFormatter * _shortRelativeDateFormatter;
    NSDateFormatter * _shortTimeFormatter;
}

@property (retain) NSDateIntervalFormatter *allDayDateFormatter;
@property (retain) NSCalendar *calendar;
@property (retain) NSDateFormatter *dateFormatter;
@property (retain) NSDateIntervalFormatter *dateIntervalFormatter;
@property (retain) NSDateFormatter *dayOfWeekFormatter;
@property (retain) NSDateIntervalFormatter *mediumDayOfWeekDateIntervalFormatter;
@property (retain) NSDateIntervalFormatter *mediumDayOfWeekDateTimeIntervalFormatter;
@property (retain) NSDateIntervalFormatter *shortDateIntervalFormatter;
@property (retain) NSDateFormatter *shortDateTimeFormatter;
@property (retain) NSDateIntervalFormatter *shortDateTimeIntervalFormatter;
@property (retain) NSDateFormatter *shortRelativeDateFormatter;
@property (retain) NSDateFormatter *shortTimeFormatter;

+ (id)allDayDateFormatter;
+ (id)calendar;
+ (bool)date:(id)arg1 isBetweenDate:(id)arg2 andDate:(id)arg3;
+ (id)dateFormatter;
+ (id)dateIntervalFormatter;
+ (id)dyanmicStringFromDate:(id)arg1;
+ (id)dynamicCompactStringFromDate:(id)arg1;
+ (id)dynamicDateTimeStringsFromDate:(id)arg1;
+ (bool)hasRelativeFormatForDate:(id)arg1;
+ (void)initialize;
+ (bool)isDate:(id)arg1 withinTimeInterval:(double)arg2;
+ (bool)isDateWithinMonthsTime:(id)arg1;
+ (bool)isDateWithinWeeksTime:(id)arg1;
+ (id)shortDateTimeFormatter;
+ (id)shortDateTimeStringFromDate:(id)arg1;
+ (id)stringFromDate:(id)arg1 toDate:(id)arg2 isAllDay:(bool)arg3;

- (void).cxx_destruct;
- (id)allDayDateFormatter;
- (id)calendar;
- (id)dateFormatter;
- (id)dateIntervalFormatter;
- (id)dayOfWeekFormatter;
- (id)init;
- (id)mediumDayOfWeekDateIntervalFormatter;
- (id)mediumDayOfWeekDateTimeIntervalFormatter;
- (void)setAllDayDateFormatter:(id)arg1;
- (void)setCalendar:(id)arg1;
- (void)setDateFormatter:(id)arg1;
- (void)setDateIntervalFormatter:(id)arg1;
- (void)setDayOfWeekFormatter:(id)arg1;
- (void)setMediumDayOfWeekDateIntervalFormatter:(id)arg1;
- (void)setMediumDayOfWeekDateTimeIntervalFormatter:(id)arg1;
- (void)setShortDateIntervalFormatter:(id)arg1;
- (void)setShortDateTimeFormatter:(id)arg1;
- (void)setShortDateTimeIntervalFormatter:(id)arg1;
- (void)setShortRelativeDateFormatter:(id)arg1;
- (void)setShortTimeFormatter:(id)arg1;
- (void)setupFormatters;
- (void)setupFormattersWithTemplate;
- (id)shortDateIntervalFormatter;
- (id)shortDateTimeFormatter;
- (id)shortDateTimeIntervalFormatter;
- (id)shortRelativeDateFormatter;
- (id)shortTimeFormatter;

@end
