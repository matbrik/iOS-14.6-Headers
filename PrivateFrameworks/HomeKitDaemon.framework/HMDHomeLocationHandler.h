/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDHomeLocationHandler : HMFObject <HMDBatchLocationDelegate, HMDHomeMessageReceiver, HMFLogging, HMFTimerDelegate, NSSecureCoding> {
    double  _coalesceRegionUpdateIntervalInSeconds;
    HMDHome * _home;
    HMFTimer * _homeRegionUpdateTimer;
    NSString * _isoCountryCode;
    CLLocation * _location;
    int  _locationAuthorization;
    NSDate * _locationUpdateTimestamp;
    HMFUnfairLock * _lock;
    HMFMessageDispatcher * _msgDispatcher;
    _HMDPendingRegionUpdate * _pendingAtHomeRegionUpdate;
    _HMDPendingRegionUpdate * _pendingNearbyHomeRegionUpdate;
    CLRegion * _regionAtHome;
    CLRegion * _regionNearbyHome;
    int  _regionStateAtHome;
    int  _regionStateNearbyHome;
    NSTimeZone * _timeZone;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic) double coalesceRegionUpdateIntervalInSeconds;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) HMDHome *home;
@property (nonatomic, retain) HMFTimer *homeRegionUpdateTimer;
@property (nonatomic, retain) NSString *isoCountryCode;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic) int locationAuthorization;
@property (nonatomic, readonly) HMDHomeLocationData *locationData;
@property (nonatomic, retain) NSDate *locationUpdateTimestamp;
@property (nonatomic, retain) HMFUnfairLock *lock;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, retain) HMFMessageDispatcher *msgDispatcher;
@property (nonatomic, retain) _HMDPendingRegionUpdate *pendingAtHomeRegionUpdate;
@property (nonatomic, retain) _HMDPendingRegionUpdate *pendingNearbyHomeRegionUpdate;
@property (nonatomic, retain) CLRegion *regionAtHome;
@property (nonatomic, retain) CLRegion *regionNearbyHome;
@property (nonatomic) int regionStateAtHome;
@property (nonatomic) int regionStateNearbyHome;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimeZone *timeZone;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (bool)hasMessageReceiverChildren;
+ (id)logCategory;
+ (bool)mergeLocationDataForLocalHome:(id)arg1 withCloudHome:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (int)__getAtHomeCalculatedState;
- (int)__getNearByHomeCalcuatedState;
- (id)__initForUnitTesting:(double)arg1 home:(id)arg2 queue:(id)arg3 messageDispatcher:(id)arg4 location:(id)arg5;
- (void)__simulateAtHomeRegionState:(long long)arg1;
- (void)__simulateNearByHomeRegionState:(long long)arg1;
- (bool)_canExtractBatchLocations;
- (void)_evaluateHomeRegionStateForCurrentDeviceLocation:(id)arg1;
- (id)_handleHomeLocationData:(id)arg1 message:(id)arg2;
- (void)_handleLocationAuthorization:(int)arg1;
- (void)_handleLocationAuthorizationChangedNotification:(id)arg1;
- (void)_handleRetrieveLocation:(id)arg1;
- (bool)_needToExtractBatchLocations;
- (void)_processPendingRegionStateUpdates;
- (void)_registerForMessages;
- (void)_registerForRegionUpdate;
- (void)_sendLocationUpdate;
- (void)_updateTimeZone:(id)arg1;
- (void)accessoriesBecomeReachable;
- (void)accessoriesBecomeUnreachable;
- (bool)calculateAndUpdateRegionState:(int)arg1;
- (double)coalesceRegionUpdateIntervalInSeconds;
- (void)coalesceRegionUpdateState:(int)arg1 forRegion:(id)arg2;
- (void)configure:(id)arg1 queue:(id)arg2 messageDispatcher:(id)arg3;
- (void)dealloc;
- (id)description;
- (void)didDetermineBatchLocation:(id)arg1;
- (void)didDetermineLocation:(id)arg1;
- (void)didDetermineState:(long long)arg1 forRegion:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)getReachableIPAccessory:(unsigned long long*)arg1 btleAccessory:(unsigned long long*)arg2 mediaAccessory:(unsigned long long*)arg3;
- (id)home;
- (id)homeRegionUpdateTimer;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isDate:(id)arg1 laterThanDate:(id)arg2;
- (bool)isLocation:(id)arg1 closeToLocation:(id)arg2;
- (id)isoCountryCode;
- (id)location;
- (int)locationAuthorization;
- (id)locationData;
- (id)locationUpdateTimestamp;
- (id)lock;
- (id)messageDestination;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)msgDispatcher;
- (id)pendingAtHomeRegionUpdate;
- (id)pendingNearbyHomeRegionUpdate;
- (id)regionAtHome;
- (id)regionNearbyHome;
- (int)regionStateAtHome;
- (int)regionStateNearbyHome;
- (void)runTransactionWithLocation:(id)arg1 updateTime:(id)arg2;
- (void)setCoalesceRegionUpdateIntervalInSeconds:(double)arg1;
- (void)setHome:(id)arg1;
- (void)setHomeRegionUpdateTimer:(id)arg1;
- (void)setIsoCountryCode:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setLocationAuthorization:(int)arg1;
- (void)setLocationUpdateTimestamp:(id)arg1;
- (void)setLock:(id)arg1;
- (void)setMsgDispatcher:(id)arg1;
- (void)setPendingAtHomeRegionUpdate:(id)arg1;
- (void)setPendingNearbyHomeRegionUpdate:(id)arg1;
- (void)setRegionAtHome:(id)arg1;
- (void)setRegionNearbyHome:(id)arg1;
- (void)setRegionStateAtHome:(int)arg1;
- (void)setRegionStateNearbyHome:(int)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)timeZone;
- (void)timerDidFire:(id)arg1;
- (bool)updatRegionStateFromLocation:(id)arg1;
- (void)updateHomeLocation;
- (id)workQueue;

@end
