/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBHIconModel : NSObject <SBFolderObserver, SBIconDelegate, SBIconObserver> {
    bool  _allowsDownloadingIcons;
    NSMutableDictionary * _alternateListLayouts;
    NSSet * _archivedLeafIdentifiers;
    NSMutableSet * _autosaveDisableAssertions;
    NSTimer * _autosaveTimer;
    bool  _checkingModelConsistency;
    <SBHIconModelDelegate> * _delegate;
    NSDictionary * _desiredIconState;
    NSOrderedSet * _desiredIconStateFlattened;
    NSHashTable * _folders;
    NSSet * _hiddenIconTags;
    bool  _iconStateDirty;
    bool  _ignoresIconsNotInIconState;
    bool  _layingOut;
    NSMutableDictionary * _leafIconsByIdentifier;
    bool  _restoring;
    SBRootFolder * _rootFolder;
    SBIcon * _rootFolderIcon;
    bool  _sortsIconsAlphabetically;
    <SBIconModelStore> * _store;
    bool  _tagsHaveBeenSet;
    <SBIconModelStore> * _todayListsStore;
    NSSet * _visibleIconTags;
    NSMutableDictionary * _widgetIconsByIdentifier;
}

@property (nonatomic) bool allowsDownloadingIcons;
@property (nonatomic, copy) NSSet *archivedLeafIdentifiers;
@property (nonatomic, retain) NSTimer *autosaveTimer;
@property (getter=isCheckingModelConsistency, nonatomic) bool checkingModelConsistency;
@property (nonatomic, readonly, copy) NSSet *currentLeafIdentifiers;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly, copy) NSDictionary *defaultIconState;
@property (nonatomic) <SBHIconModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSDictionary *desiredIconState;
@property (nonatomic, copy) NSOrderedSet *desiredIconStateFlattened;
@property (nonatomic, readonly, copy) NSSet *firstPageLeafIdentifiers;
@property (nonatomic, readonly) struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; } gridSizeClassSizes;
@property (nonatomic, readonly) bool hasDesiredIconState;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSSet *hiddenIconTags;
@property (getter=isIconStateDirty, nonatomic) bool iconStateDirty;
@property (nonatomic) bool ignoresIconsNotInIconState;
@property (getter=isLayingOut, nonatomic) bool layingOut;
@property (nonatomic, readonly, copy) NSSet *leafIconIdentifiers;
@property (nonatomic, readonly, copy) NSSet *leafIcons;
@property (nonatomic, readonly, copy) NSString *localizedDefaultFolderName;
@property (nonatomic, readonly) unsigned long long maxIconCountForDock;
@property (nonatomic, readonly) unsigned long long maxListCountForFolders;
@property (nonatomic, readonly, copy) NSSet *missingDesiredIconIdentifiers;
@property (getter=isRestoring, nonatomic) bool restoring;
@property (nonatomic, readonly) SBRootFolder *rootFolder;
@property (nonatomic, retain) SBIcon *rootFolderIcon;
@property (nonatomic) bool sortsIconsAlphabetically;
@property (nonatomic, retain) <SBIconModelStore> *store;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsDock;
@property (nonatomic, retain) <SBIconModelStore> *todayListsStore;
@property (nonatomic, readonly, copy) NSString *unlocalizedDefaultFolderName;
@property (nonatomic, readonly, copy) NSSet *visibleIconIdentifiers;
@property (nonatomic, readonly, copy) NSSet *visibleIconTags;

+ (id)migratedIdentifierForLeafIdentifier:(id)arg1;

- (void).cxx_destruct;
- (id)_adjustedDesiredIndexPathInRootFolder:(id)arg1 forIconWithIdentifier:(id)arg2;
- (id)_adjustedIndexPathInRootFolder:(id)arg1 withinIconState:(id)arg2 forIconWithIdentifier:(id)arg3;
- (id)_adjustedPlatformIndexPathInRootFolder:(id)arg1 forIcon:(id)arg2;
- (bool)_canAddDownloadingIconForBundleID:(id)arg1;
- (id)_iconState;
- (void)_removeIconStateAutosaveDisableAssertion:(id)arg1;
- (void)_rootFolder:(id)arg1 moveIconsToFirstPage:(id)arg2 placeBumpedIconsSomewhereNice:(id)arg3;
- (void)_saveIconState;
- (bool)_saveIconStateWithError:(id*)arg1;
- (bool)_shouldSkipAddingIcon:(id)arg1 toRootFolder:(id)arg2;
- (id)_unarchiveRootFolder;
- (id)addDownloadingIconForBundleID:(id)arg1 withIdentifier:(id)arg2;
- (id)addDownloadingIconWithDataSource:(id)arg1;
- (void)addIcon:(id)arg1;
- (void)addIconsOfClass:(Class)arg1 toSet:(id)arg2;
- (void)adjustIconsToShow:(id)arg1 iconsToHide:(id)arg2 afterChangeToVisibleIconTags:(id)arg3 hiddenIconTags:(id)arg4;
- (bool)allowsDownloadingIcons;
- (id)archivedLeafIdentifiers;
- (id)autosaveTimer;
- (void)autosaveTimerDidFire:(id)arg1;
- (void)checkModelConsistency;
- (void)checkModelConsistencyInRootFolder:(id)arg1;
- (void)clearDesiredIconState;
- (void)clearDesiredIconStateIfPossible;
- (void)clearDesiredIconStateWithOptions:(unsigned long long)arg1;
- (id)currentLeafIdentifiers;
- (id)defaultIconState;
- (id)delegate;
- (bool)deleteIconState;
- (bool)deleteIconStateWithOptions:(unsigned long long)arg1;
- (id)desiredFolderCreationActionsForInsertingNewIcon:(id)arg1;
- (id)desiredIconState;
- (id)desiredIconStateFlattened;
- (id)desiredIndexPathForIconWithIdentifier:(id)arg1;
- (void)didAddIcon:(id)arg1;
- (void)didUnarchiveMetadata:(id)arg1;
- (id)disableIconStateAutosaveForReason:(id)arg1;
- (id)downloadingIconForBundleIdentifier:(id)arg1;
- (void)enumerateDownloadingIconsUsingBlock:(id /* block */)arg1;
- (void)enumerateLeafIconsUsingBlock:(id /* block */)arg1;
- (id)firstPageLeafIdentifiers;
- (void)folder:(id)arg1 didAddIcons:(id)arg2 removedIcons:(id)arg3;
- (void)folder:(id)arg1 didAddList:(id)arg2;
- (void)folder:(id)arg1 didReplaceIcon:(id)arg2 withIcon:(id)arg3;
- (void)folder:(id)arg1 willAddIcon:(id)arg2;
- (void)folderIconStateDidDirty:(id)arg1;
- (struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; })gridSizeClassSizes;
- (bool)hasDesiredIconState;
- (id)hiddenIconTags;
- (void)icon:(id)arg1 launchFromLocation:(id)arg2 context:(id)arg3;
- (void)iconArchivableStateDidChange:(id)arg1;
- (id)iconModelMetadata;
- (id)iconState;
- (id)iconsOfClass:(Class)arg1;
- (bool)ignoresIconsNotInIconState;
- (void)importDesiredIconState:(id)arg1;
- (id)indexPathForIconInPlatformState:(id)arg1;
- (id)indexPathForNewIcon:(id)arg1 isDesignatedLocation:(bool*)arg2 replaceExistingIconAtIndexPath:(id*)arg3;
- (id)indexPathInRootFolder:(id)arg1 forNewIcon:(id)arg2 isDesignatedLocation:(bool*)arg3 replaceExistingIconAtIndexPath:(id*)arg4;
- (id)init;
- (id)initWithStore:(id)arg1;
- (bool)isCheckingModelConsistency;
- (bool)isIconStateDirty;
- (bool)isIconVisible:(id)arg1;
- (bool)isLayingOut;
- (bool)isRestoring;
- (bool)isTrackingIcon:(id)arg1;
- (void)layout;
- (void)layoutIfNeeded;
- (id)leafIconForIdentifier:(id)arg1;
- (id)leafIconIdentifiers;
- (id)leafIcons;
- (id)leafIconsForIdentifiers:(id)arg1;
- (struct SBHIconGridSize { unsigned short x1; unsigned short x2; })listGridSizeForFolderClass:(Class)arg1;
- (void)loadAllIcons;
- (id)localizedDefaultFolderName;
- (id)localizedFolderNameForDefaultDisplayName:(id)arg1;
- (id)makeFolderWithDisplayName:(id)arg1;
- (id)makeFolderWithDisplayName:(id)arg1 uniqueIdentifier:(id)arg2;
- (void)markIconStateClean;
- (void)markIconStateDirty;
- (unsigned long long)maxColumnCountForListInRootFolderWithInterfaceOrientation:(long long)arg1;
- (unsigned long long)maxIconCountForDock;
- (unsigned long long)maxListCountForFolders;
- (unsigned long long)maxRowCountForListInRootFolderWithInterfaceOrientation:(long long)arg1;
- (id)missingDesiredIconIdentifiers;
- (id)modernizeRootArchive:(id)arg1;
- (void)reloadIcons;
- (void)removeAllIcons;
- (void)removeIcon:(id)arg1;
- (void)removeIconForIdentifier:(id)arg1;
- (void)removeIcons:(id)arg1;
- (id)rootFolder;
- (id)rootFolderIcon;
- (void)saveDesiredIconState;
- (bool)saveIconStateIfNeeded;
- (void)scheduleIconStateAutosave;
- (void)setAllowsDownloadingIcons:(bool)arg1;
- (void)setArchivedLeafIdentifiers:(id)arg1;
- (void)setAutosaveTimer:(id)arg1;
- (void)setCheckingModelConsistency:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDesiredIconState:(id)arg1;
- (void)setDesiredIconStateFlattened:(id)arg1;
- (void)setForecastedLeavesOnIconModel:(id)arg1 includingMissingIcons:(id)arg2;
- (void)setIconStateDirty:(bool)arg1;
- (void)setIgnoresIconsNotInIconState:(bool)arg1;
- (void)setLayingOut:(bool)arg1;
- (void)setLeafIconsByIdentifier:(id)arg1;
- (void)setRestoring:(bool)arg1;
- (void)setRootFolderIcon:(id)arg1;
- (void)setSortsIconsAlphabetically:(bool)arg1;
- (void)setStore:(id)arg1;
- (void)setTodayListsStore:(id)arg1;
- (void)setVisibilityOfIconsWithVisibleTags:(id)arg1 hiddenTags:(id)arg2;
- (bool)shouldAvoidPlacingIconOnFirstPage:(id)arg1;
- (bool)shouldPlaceIconOnIgnoredList:(id)arg1;
- (bool)sortsIconsAlphabetically;
- (id)store;
- (bool)supportsDock;
- (id)todayListsStore;
- (id)unlocalizedDefaultFolderName;
- (id)visibleIconIdentifiers;
- (id)visibleIconTags;
- (id)widgetIcons;
- (id)widgetIconsContainingWidgetsMatchingExtensionBundleIdentifier:(id)arg1 kind:(id)arg2 sizeClass:(long long)arg3;
- (id)widgetIconsContainingWidgetsMatchingUniqueIdentifier:(id)arg1;
- (void)willLayout;

@end
