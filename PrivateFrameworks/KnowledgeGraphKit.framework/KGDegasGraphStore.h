/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/KnowledgeGraphKit.framework/KnowledgeGraphKit
 */

@interface KGDegasGraphStore : NSObject <KGGraphStore> {
    KGDatabase * _database;
    KGEntityDescription * _entityDescription;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    long long  _transactionCounter;
    NSURL * _url;
}

@property (nonatomic, readonly) KGDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) KGEntityDescription *entityDescription;
@property (nonatomic, readonly) NSUUID *graphIdentifier;
@property (nonatomic) unsigned long long graphVersion;
@property (nonatomic, readonly) bool hasMarker;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (readonly) Class superclass;
@property (nonatomic) long long transactionCounter;
@property (nonatomic, retain) NSURL *url;

+ (id)_markerFilePathForPersistentStoreFileURL:(id)arg1;
+ (bool)copyFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (void)deleteMarkerForDiskRepresentationAtURL:(id)arg1;
+ (bool)destroyAtURL:(id)arg1 error:(id*)arg2;
+ (bool)hasMarkerForDiskRepresentationAtURL:(id)arg1;
+ (bool)migrateFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (id)persistentStoreFileExtension;
+ (bool)setMarkerForDiskRepresentationAtURL:(id)arg1;

- (void).cxx_destruct;
- (id)_lock_edgeForIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 sourceNode:(id)arg4 targetNode:(id)arg5 properties:(id)arg6 error:(id*)arg7;
- (id)_lock_edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)_lock_edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (bool)_lock_enumerateEdgesWithIdentifiers:(id)arg1 error:(id*)arg2 block:(id /* block */)arg3;
- (void)_lock_enumerateNodesWithIdentifiers:(id)arg1 block:(id /* block */)arg2;
- (bool)_lock_filterEdgesWithLabels:(id)arg1 edgeIdentifiers:(inout id*)arg2 error:(id*)arg3;
- (bool)_lock_filterEdgesWithProperties:(id)arg1 edgeIdentifiers:(inout id*)arg2 error:(id*)arg3;
- (bool)_lock_filterNodesWithLabels:(id)arg1 nodeIdentifiers:(inout id*)arg2 error:(id*)arg3;
- (bool)_lock_filterNodesWithProperties:(id)arg1 nodeIdentifiers:(inout id*)arg2 error:(id*)arg3;
- (id)_lock_neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (id)_lock_nodeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (id)_lock_nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)_markerFilePath;
- (unsigned long long)addEdgeWithLabels:(id)arg1 weight:(float)arg2 properties:(id)arg3 sourceNodeIdentifier:(unsigned long long)arg4 targetNodeIdentifier:(unsigned long long)arg5 error:(id*)arg6;
- (unsigned long long)addNodeWithLabels:(id)arg1 weight:(float)arg2 properties:(id)arg3 error:(id*)arg4;
- (id)arrayOfEdgesWithIdentifiers:(id)arg1 error:(id*)arg2;
- (id)arrayOfNodesWithIdentifiers:(id)arg1 error:(id*)arg2;
- (void)beginTransaction;
- (void)close;
- (void)commitTransaction;
- (bool)copyToURL:(id)arg1 error:(id*)arg2;
- (id)database;
- (void)deleteMarker;
- (id)edgeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (id)edgeIdentifiersForNodeIdentifier:(unsigned long long)arg1 withLabels:(id)arg2 edgeDirection:(unsigned long long)arg3 error:(id*)arg4;
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (id)edgeLabels;
- (id)edgesForIdentifiers:(id)arg1 error:(id*)arg2;
- (id)entityDescription;
- (id)graphIdentifier;
- (unsigned long long)graphVersion;
- (bool)hasMarker;
- (id)initWithURL:(id)arg1;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (id)nodeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (id)nodeForIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)nodeLabels;
- (id)nodesForIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)openWithMode:(unsigned long long)arg1 error:(id*)arg2;
- (bool)removeEdgeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (bool)removeEdgesForIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)removeNodeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (bool)removeNodesForIdentifiers:(id)arg1 error:(id*)arg2;
- (void)setGraphVersion:(unsigned long long)arg1;
- (void)setMarker;
- (void)setTransactionCounter:(long long)arg1;
- (void)setUrl:(id)arg1;
- (long long)transactionCounter;
- (bool)updateEdgeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;
- (bool)updateEdgeForIdentifier:(unsigned long long)arg1 withWeight:(float)arg2 error:(id*)arg3;
- (bool)updateNodeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;
- (bool)updateNodeForIdentifier:(unsigned long long)arg1 withWeight:(float)arg2 error:(id*)arg3;
- (id)url;

@end
