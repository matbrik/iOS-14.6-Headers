/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared
 */

@interface ICInlineAttachment : ICBaseAttachment <ICCloudObject>

@property (nonatomic, copy) NSString *altText;
@property (nonatomic, readonly) short attachmentType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *nonNilAltText;
@property (nonatomic, retain) ICNote *note;
@property (nonatomic, retain) ICAttachment *parentAttachment;
@property (nonatomic, readonly) NSAttributedString *searchableTextContentInNote;
@property (readonly) Class superclass;

+ (id)allInlineAttachmentsInContext:(id)arg1;
+ (id)existingCloudObjectForRecordID:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)newAttachmentWithIdentifier:(id)arg1 altText:(id)arg2 typeUTI:(id)arg3 note:(id)arg4;
+ (id)newCloudObjectForRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)noteFromAttachmentRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)predicateForUnsupportedAttachmentsInContext:(id)arg1;
+ (void)purgeAttachment:(id)arg1;

- (short)attachmentType;
- (void)deleteFromLocalDatabase;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })displayTextRangeForSearchRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inSearchableString:(id)arg2;
- (bool)hasAllMandatoryFields;
- (long long)intrinsicNotesVersion;
- (bool)isInICloudAccount;
- (void)loadFromArchive:(const struct Attachment { int (**x1)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; unsigned int x3[2]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x5; float x6; float x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x8; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x9; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x10; }*)arg1 dataPersister:(id)arg2 withIdentifierMap:(id)arg3;
- (void)mergeDataFromRecord:(id)arg1 accountID:(id)arg2;
- (bool)needsToBePushedToCloud;
- (id)newlyCreatedRecord;
- (id)nonNilAltText;
- (void)objectWasFetchedFromCloudWithRecord:(id)arg1 accountID:(id)arg2;
- (id)parentAttachmentFromRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
- (id)parentCloudObject;
- (id)recordType;
- (id)recordZoneName;
- (void)saveToArchive:(struct Attachment { int (**x1)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; unsigned int x3[2]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x5; float x6; float x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x8; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x9; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {} *x10; }*)arg1 dataPersister:(id)arg2;
- (id)searchableTextContentInNote;
- (bool)supportsDeletionByTTL;
- (void)updateMarkedForDeletionStateInlineAttachmentIsInUse:(bool)arg1;

@end
