/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBWallpaperController : NSObject <BSDescriptionProviding, CSWallpaperOverlayHosting, SBFLegibilitySettingsProviderDelegate, SBFWallpaperViewDelegate, SBFWallpaperViewInternalObserver, SBUIActiveOrientationObserver, SBWallpaperLegibilityProviding, SBWallpaperPresenting, SBWallpaperPresentingDelegate, SBWallpaperReachabilityCoordinating, SBWallpaperServerDelegate, UIWindowDelegate, _UISettingsKeyObserver> {
    NSMutableSet * _activeOrientationSources;
    <BSInvalidatable> * _batterySaverAnimationAssertion;
    NSString * _cachingIdentifier;
    long long  _displayedVariant;
    UITraitCollection * _fakeBlurViewOverrideTraitCollection;
    PTSingleTestRecipe * _migrationTestRecipe;
    long long  _orientation;
    NSMapTable * _orientationProviders;
    PTSingleTestRecipe * _reloadTestRecipe;
    UIScreen * _screen;
    SBWallpaperAggdLogger * _wallpaperAggdLogger;
    SBFWallpaperConfigurationManager * _wallpaperConfigurationManager;
    UIView * _wallpaperContainerView;
    <SBWallpaperLegibilityProviding> * _wallpaperLegibilityProvider;
    UIView<SBUIWallpaperOverlay> * _wallpaperOverlay;
    UIView * _wallpaperOverlayContainerView;
    <SBWallpaperPresenting> * _wallpaperPresenter;
    <SBWallpaperPresentingDelegate> * _wallpaperPresentingDelegate;
    <BSInvalidatable> * _wallpaperStyleAnimationAssertion;
    SBWallpaperViewController * _wallpaperViewController;
    UIWindow * _wallpaperWindow;
}

@property (getter=_WallpaperOrientationNotForYou, nonatomic, readonly) long long _orientation;
@property (nonatomic, readonly) long long activeOrientationSource;
@property (nonatomic, retain) <BSInvalidatable> *batterySaverAnimationAssertion;
@property (nonatomic, readonly, copy) NSString *cachingIdentifier;
@property (nonatomic, readonly) struct { long long x1; long long x2; double x3; } currentHomescreenStyleTransitionState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double effectiveReachabilityYOffset;
@property (nonatomic, retain) UITraitCollection *fakeBlurViewOverrideTraitCollection;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double homescreenWallpaperScale;
@property (nonatomic, readonly) <SBFIrisWallpaperView> *irisWallpaperView;
@property (nonatomic, readonly) <SBWallpaperLegibilityProviding> *legibilityProvider;
@property (nonatomic) double lockscreenWallpaperScale;
@property (nonatomic, readonly) double minimumHomescreenWallpaperScale;
@property (nonatomic, readonly) double minimumLockscreenWallpaperScale;
@property (nonatomic, readonly) <SBWallpaperPresenting> *presenter;
@property (nonatomic, readonly) UIScreen *screen;
@property (readonly) Class superclass;
@property (nonatomic) long long variant;
@property (nonatomic, retain) SBWallpaperAggdLogger *wallpaperAggdLogger;
@property (nonatomic, readonly) SBFWallpaperConfigurationManager *wallpaperConfigurationManager;
@property (nonatomic, readonly) UIGestureRecognizer *wallpaperGestureRecognizer;
@property (nonatomic) <SBWallpaperPresentingDelegate> *wallpaperPresentingDelegate;
@property (nonatomic, retain) <BSInvalidatable> *wallpaperStyleAnimationAssertion;
@property (nonatomic) double windowLevel;

+ (id)accessAuthenticator;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (long long)_WallpaperOrientationNotForYou;
- (void)_batterySaverModeChanged:(id)arg1;
- (void)_forceUpdateToSpringBoardInterfaceOrientationWithAnimationDuration:(double)arg1;
- (bool)_isAcceptingOrientationChangesFromSource:(long long)arg1;
- (void)_motionEffectsChanged;
- (void)_noteSignificantTimeChanged:(id)arg1;
- (void)_reloadWallpaperAndFlushCaches:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_saveWallpaperAggdKeysForLocations:(long long)arg1 withConfiguration:(id)arg2;
- (void)_updateScreenBlanked;
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 wallpaperMode:(long long)arg3 withCompletion:(id /* block */)arg4;
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 withCompletion:(id /* block */)arg3;
- (id)_wallpaperViewForVariant:(long long)arg1;
- (id)_window;
- (void)activateOrientationSource:(long long)arg1;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(long long)arg3;
- (id)activeInterfaceOrientationSourcesDescriptions;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)arg1;
- (long long)activeOrientationSource;
- (void)addObserver:(id)arg1 forVariant:(long long)arg2;
- (void)addReachabilityObserver:(id)arg1;
- (id)averageColorForVariant:(long long)arg1;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forVariant:(long long)arg2;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forVariant:(long long)arg2 withSmudgeRadius:(double)arg3;
- (id)batterySaverAnimationAssertion;
- (void)beginDelayingHomescreenStyleChangesForReason:(id)arg1;
- (id)beginRequiringWithReason:(id)arg1;
- (id)cachingIdentifier;
- (void)cancelInProcessAnimations;
- (double)contrastForVariant:(long long)arg1;
- (double)contrastInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forVariant:(long long)arg2;
- (struct { long long x1; long long x2; double x3; })currentHomescreenStyleTransitionState;
- (void)deactivateOrientationSource:(long long)arg1;
- (void)dealloc;
- (long long)defaultInterfaceOrientationForSource:(long long)arg1;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (double)effectiveReachabilityYOffset;
- (void)endDelayingHomescreenStyleChangesForReason:(id)arg1 animationFactory:(id)arg2;
- (id)fakeBlurViewOverrideTraitCollection;
- (double)homescreenWallpaperScale;
- (id)init;
- (id)initWithScreen:(id)arg1 orientation:(long long)arg2 variant:(long long)arg3 wallpaperConfigurationManager:(id)arg4 cachingIdentifier:(id)arg5;
- (id)initWithWallpaperConfigurationManager:(id)arg1;
- (id)initWithWallpaperConfigurationManager:(id)arg1 cachingIdentifier:(id)arg2;
- (id)irisWallpaperView;
- (bool)isWindowIgnoredForReachability:(id)arg1;
- (id)legibilityProvider;
- (id)legibilitySettingsForVariant:(long long)arg1;
- (double)lockscreenWallpaperScale;
- (double)minimumHomescreenWallpaperScale;
- (double)minimumLockscreenWallpaperScale;
- (id)newFakeBlurViewForVariant:(long long)arg1 style:(long long)arg2 transformOptions:(unsigned long long)arg3;
- (void)orientationSource:(long long)arg1 didRotateFromInterfaceOrientation:(long long)arg2;
- (void)orientationSource:(long long)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)orientationSource:(long long)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)preheatWallpaperForVariant:(long long)arg1;
- (id)presenter;
- (void)providerLegibilitySettingsChanged:(id)arg1;
- (id)relinquishHostingOfWallpaperOverlay;
- (void)removeObserver:(id)arg1 forVariant:(long long)arg2;
- (void)removeReachabilityObserver:(id)arg1;
- (bool)removeWallpaperStyleForPriority:(long long)arg1 forVariant:(long long)arg2 withAnimationFactory:(id)arg3;
- (id)screen;
- (void)setAlpha:(double)arg1 forWallpaperVariant:(long long)arg2;
- (void)setBatterySaverAnimationAssertion:(id)arg1;
- (void)setDisallowsRasterization:(bool)arg1 forVariant:(long long)arg2 withReason:(id)arg3;
- (void)setFakeBlurViewOverrideTraitCollection:(id)arg1;
- (id)setHomescreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;
- (void)setLockscreenOnlyWallpaperAlpha:(double)arg1;
- (void)setLockscreenWallpaperContentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLockscreenWallpaperScale:(double)arg1;
- (void)setLockscreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;
- (void)setOrientationProvider:(id)arg1 forSource:(long long)arg2;
- (void)setVariant:(long long)arg1;
- (void)setVariant:(long long)arg1 withOutAnimationFactory:(id)arg2 inAnimationFactory:(id)arg3 completion:(id /* block */)arg4;
- (void)setWallpaperAggdLogger:(id)arg1;
- (void)setWallpaperHidden:(bool)arg1 variant:(long long)arg2 reason:(id)arg3;
- (void)setWallpaperPresentingDelegate:(id)arg1;
- (bool)setWallpaperStyle:(long long)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;
- (void)setWallpaperStyleAnimationAssertion:(id)arg1;
- (bool)setWallpaperStyleTransitionState:(struct { long long x1; long long x2; double x3; })arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;
- (void)setWindowLevel:(double)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)startHostingWallpaperOverlay:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)suspendColorSamplingForReason:(id)arg1;
- (id)suspendWallpaperAnimationForReason:(id)arg1;
- (void)updateIrisWallpaperForInteractiveMode;
- (bool)updateIrisWallpaperForStaticMode;
- (void)updateOrientationAfterSourceChange;
- (void)updateWallpaperForLocations:(long long)arg1 wallpaperMode:(long long)arg2 withCompletion:(id /* block */)arg3;
- (void)updateWallpaperForLocations:(long long)arg1 withCompletion:(id /* block */)arg2;
- (long long)variant;
- (id)wallpaperAggdLogger;
- (id)wallpaperConfigurationManager;
- (id)wallpaperGestureRecognizer;
- (void)wallpaperPresenter:(id)arg1 didChangeWallpaperForLocations:(long long)arg2 withConfiguration:(id)arg3;
- (long long)wallpaperPresenter:(id)arg1 requestsOrientationWithRefresh:(bool)arg2;
- (id)wallpaperPresentingDelegate;
- (void)wallpaperServer:(id)arg1 fetchContentCutoutBoundsForVariant:(long long)arg2 orientation:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)wallpaperServer:(id)arg1 fetchOriginalImageDataForVariant:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)wallpaperServer:(id)arg1 fetchOriginalVideoURLDataForVariant:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)wallpaperServer:(id)arg1 fetchThumbnailDataForVariant:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)wallpaperServer:(id)arg1 restoreDefaultWallpaperWithCompletionHandler:(id /* block */)arg2;
- (void)wallpaperServer:(id)arg1 setWallpaperColor:(id)arg2 darkColor:(id)arg3 forVariants:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)wallpaperServer:(id)arg1 setWallpaperColorName:(id)arg2 forVariants:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)wallpaperServer:(id)arg1 setWallpaperGradient:(id)arg2 forVariants:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)wallpaperServer:(id)arg1 setWallpaperVideoWithWallpaperMode:(id)arg2 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 wallpaperMode:(long long)arg4 completionHandler:(id /* block */)arg5;
- (id)wallpaperStyleAnimationAssertion;
- (void)wallpaperView:(id)arg1 didChangeZoomFactor:(double)arg2;
- (id)wallpaperView:(id)arg1 wallpaperConfigurationIncludingValueTypes:(unsigned long long)arg2;
- (void)wallpaperViewDidChangeWantsRasterization:(id)arg1;
- (void)wallpaperViewDidInvalidateBlurs:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (double)windowLevel;

@end
