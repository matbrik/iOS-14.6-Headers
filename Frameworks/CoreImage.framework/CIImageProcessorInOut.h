/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface CIImageProcessorInOut : NSObject {
    struct Context { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct CGColorSpace {} *x3; struct CGColorSpace {} *x4; int x5; float x6; bool x7; bool x8; bool x9; bool x10; bool x11; struct CGContext {} *x12; float x13; bool x14; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_15_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_15_1_2; } x15; struct CGAffineTransform { double x_16_1_1; double x_16_1_2; double x_16_1_3; double x_16_1_4; double x_16_1_5; double x_16_1_6; } x16; unsigned int x17; unsigned long long x18; unsigned long long x19; int x20; BOOL x21[64]; bool x22; struct ObjectCache<CI::MainProgram, false> {} *x23; struct ObjectCache<CI::Node, false> {} *x24; struct ObjectCache<CI::Node, false> {} *x25; double x26; double x27; struct RenderTask {} *x28; int x29; int x30; struct Context {} *x31; unsigned long long x32; } * _context;
    <MTLTexture> * _mtlTexture;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _region;
    struct __IOSurface { } * _surface;
    bool  _surfaceLocked;
    bool  _usesSRGB;
}

@property (nonatomic, readonly) unsigned long long bytesPerRow;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic, readonly) int format;
@property (nonatomic, readonly) struct __CVBuffer { }*pixelBuffer;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } region;
@property (nonatomic, readonly) struct __IOSurface { }*surface;
@property (nonatomic, readonly) bool usesSRGBTransferFunction;

- (unsigned long long)bytesPerRow;
- (void)dealloc;
- (id)description;
- (id)device;
- (int)format;
- (id)initWithSurface:(struct __IOSurface { }*)arg1 texture:(struct Texture { union { unsigned long long x_1_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; } x_1_1_2; void *x_1_1_3; } x1; })arg2 allowSRGB:(bool)arg3 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 context:(struct Context { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct CGColorSpace {} *x3; struct CGColorSpace {} *x4; int x5; float x6; bool x7; bool x8; bool x9; bool x10; bool x11; struct CGContext {} *x12; float x13; bool x14; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_15_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_15_1_2; } x15; struct CGAffineTransform { double x_16_1_1; double x_16_1_2; double x_16_1_3; double x_16_1_4; double x_16_1_5; double x_16_1_6; } x16; unsigned int x17; unsigned long long x18; unsigned long long x19; int x20; BOOL x21[64]; bool x22; struct ObjectCache<CI::MainProgram, false> {} *x23; struct ObjectCache<CI::Node, false> {} *x24; struct ObjectCache<CI::Node, false> {} *x25; double x26; double x27; struct RenderTask {} *x28; int x29; int x30; struct Context {} *x31; unsigned long long x32; }*)arg5;
- (struct __CVBuffer { }*)pixelBuffer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })region;
- (struct __IOSurface { }*)surface;
- (bool)usesSRGBTransferFunction;

@end
