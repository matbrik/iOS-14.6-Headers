/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPPlaybackUserDefaults : NSObject {
    NSObject<OS_dispatch_queue> * _accountsQueue;
    NSUserDefaults * _airplayUserDefaults;
    NSNumber * _devicePrivateListeningEnabled;
    NSUserDefaults * _iPodUserDefaults;
    NSUserDefaults * _mediaPlaybackCoreUserDefaults;
    MPPlaybackEQSetting * _musicEQSetting;
    struct { 
        int mobileiPodPrefsChanged; 
        int mobileiPodPlaybackPrefsChangedAllowCellularData; 
        int videoPrefsChanged; 
        int airplayPrefsChanged; 
    }  _notifyTokens;
    long long  _preferredVideoDownloadResolution;
    bool  _showLosslessAudio;
    NSUserDefaults * _videoUserDefaults;
}

@property (nonatomic, readonly) bool allowsHighQualityMusicStreamingOnCellular;
@property (nonatomic, readonly) double assetURLExpirationDuration;
@property (getter=isDevicePrivateListeningEnabled, nonatomic, copy) NSNumber *devicePrivateListeningEnabled;
@property (nonatomic, readonly) bool disableAssetCaching;
@property (nonatomic, readonly) bool disableAudioAnalysis;
@property (nonatomic, readonly) bool disableMiniSINF;
@property (nonatomic, readonly) bool disablePeriodicStateRestore;
@property (nonatomic, readonly) bool disableQHO;
@property (nonatomic, readonly) bool forceLibrarySupplementalContexts;
@property (nonatomic, readonly) bool forceMusicResolution;
@property (nonatomic, readonly) bool forceMusicStreaming;
@property (nonatomic, readonly) long long forcedMusicResolution;
@property (nonatomic, readonly) bool includeContentItemDebugFields;
@property (nonatomic, readonly) long long maximumQueueHandOffSize;
@property (nonatomic, retain) MPPlaybackEQSetting *musicEQSetting;
@property (nonatomic) long long musicRepeatType;
@property (nonatomic) long long musicShuffleType;
@property (nonatomic) long long preferredMusicDownloadResolution;
@property (nonatomic) long long preferredMusicHighBandwidthResolution;
@property (nonatomic) long long preferredMusicLowBandwidthResolution;
@property (nonatomic, readonly) long long preferredVideoDownloadResolution;
@property (nonatomic, readonly) long long preferredVideoHighBandwidthResolution;
@property (nonatomic, readonly) long long preferredVideoLowBandwidthResolution;
@property (nonatomic) bool prefersSpatialAudio;
@property (nonatomic) bool prefersSpatialDownloads;
@property (getter=isPrivateListeningEnabled, nonatomic, copy) NSNumber *privateListeningEnabled;
@property (nonatomic, readonly) float progressiveDownloadAssetRatio;
@property (nonatomic) bool showLosslessAudio;
@property (nonatomic, readonly) bool showResolutionDebugUI;
@property (nonatomic, readonly) bool soundCheckEnabled;
@property (nonatomic) long long spatialAudioPreference;
@property (nonatomic, readonly) bool speakerRouteEnabled;

+ (id)standardUserDefaults;

- (void).cxx_destruct;
- (void)_accountStoreChangedNotification:(id)arg1;
- (id)_init;
- (void)_loadAccountProperties;
- (void)_migrateUserDefaults;
- (bool)allowsHighQualityMusicStreamingOnCellular;
- (double)assetURLExpirationDuration;
- (bool)autoPlayEnabledForUserIdentity:(id)arg1;
- (void)dealloc;
- (bool)disableAssetCaching;
- (bool)disableAudioAnalysis;
- (bool)disableMiniSINF;
- (bool)disablePeriodicStateRestore;
- (bool)disableQHO;
- (bool)forceLibrarySupplementalContexts;
- (bool)forceMusicResolution;
- (bool)forceMusicStreaming;
- (long long)forcedMusicResolution;
- (bool)includeContentItemDebugFields;
- (id)isDevicePrivateListeningEnabled;
- (id)isPrivateListeningEnabled;
- (long long)maximumQueueHandOffSize;
- (id)musicEQSetting;
- (long long)musicRepeatType;
- (long long)musicShuffleType;
- (long long)preferredMusicDownloadResolution;
- (long long)preferredMusicHighBandwidthResolution;
- (long long)preferredMusicLowBandwidthResolution;
- (long long)preferredVideoDownloadResolution;
- (long long)preferredVideoHighBandwidthResolution;
- (long long)preferredVideoLowBandwidthResolution;
- (bool)prefersSpatialAudio;
- (bool)prefersSpatialDownloads;
- (bool)privateListeningEnabledForHomeUserIdentifier:(id)arg1 error:(id*)arg2;
- (float)progressiveDownloadAssetRatio;
- (void)resetAllInternalSettings;
- (void)setAutoPlayEnabled:(bool)arg1 forUserIdentity:(id)arg2;
- (void)setDevicePrivateListeningEnabled:(id)arg1;
- (void)setMusicEQSetting:(id)arg1;
- (void)setMusicRepeatType:(long long)arg1;
- (void)setMusicShuffleType:(long long)arg1;
- (void)setPreferredMusicDownloadResolution:(long long)arg1;
- (void)setPreferredMusicHighBandwidthResolution:(long long)arg1;
- (void)setPreferredMusicLowBandwidthResolution:(long long)arg1;
- (void)setPrefersSpatialAudio:(bool)arg1;
- (void)setPrefersSpatialDownloads:(bool)arg1;
- (void)setPrivateListeningEnabled:(id)arg1;
- (void)setPrivateListeningEnabled:(bool)arg1 forHomeUserIdentifier:(id)arg2 error:(id*)arg3;
- (void)setShowLosslessAudio:(bool)arg1;
- (void)setSpatialAudioPreference:(long long)arg1;
- (bool)showLosslessAudio;
- (bool)showResolutionDebugUI;
- (bool)soundCheckEnabled;
- (long long)spatialAudioPreference;
- (bool)speakerRouteEnabled;

@end
