/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerUI.framework/PowerUI
 */

@interface PowerUIMLTwoStageModelPredictor : NSObject <PowerUIPredictor> {
    double  _adjustedDuration;
    <_CDLocalContext> * _context;
    NSDate * _deadline;
    NSString * _defaultsDomain;
    MLModel * _durationModel;
    MLModel * _engageModel;
    double  _lastDurationResult;
    double  _lastEngagementResult;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _loadModelLock;
    NSObject<OS_os_log> * _log;
    double  _minInputChargeDuration;
    double  _pluginBatteryLevel;
    NSDate * _pluginDate;
    NSObject<OS_os_log> * _statusLog;
    <_DKKnowledgeQuerying> * _store;
    double  _threshold;
    PowerUITrialManager * _trialManager;
}

@property (nonatomic) double adjustedDuration;
@property (nonatomic, retain) <_CDLocalContext> *context;
@property (nonatomic, retain) NSDate *deadline;
@property (nonatomic, retain) NSString *defaultsDomain;
@property (nonatomic, readonly, retain) MLModel *durationModel;
@property (nonatomic, readonly, retain) MLModel *engageModel;
@property (nonatomic) double lastDurationResult;
@property (nonatomic) double lastEngagementResult;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } loadModelLock;
@property (nonatomic, retain) NSObject<OS_os_log> *log;
@property (nonatomic) double minInputChargeDuration;
@property (nonatomic) double pluginBatteryLevel;
@property (nonatomic, retain) NSDate *pluginDate;
@property (nonatomic, retain) NSObject<OS_os_log> *statusLog;
@property (nonatomic, retain) <_DKKnowledgeQuerying> *store;
@property (nonatomic) double threshold;
@property (nonatomic, retain) PowerUITrialManager *trialManager;

- (void).cxx_destruct;
- (double)adjustedChargingDecision:(unsigned long long)arg1 withPluginDate:(id)arg2 withPluginBatteryLevel:(double)arg3 forDate:(id)arg4 forStatus:(bool)arg5;
- (double)adjustedDuration;
- (id)arrayWithShape:(id)arg1 values:(id)arg2 type:(long long)arg3;
- (double)chargingDecision:(unsigned long long)arg1 withPluginDate:(id)arg2 withPluginBatteryLevel:(double)arg3 forDate:(id)arg4 withLog:(id)arg5;
- (id)context;
- (id)deadline;
- (id)defaultsDomain;
- (void)deleteCompiledModels;
- (id)durationModel;
- (id)durationModelBoltID;
- (unsigned long long)durationModelVersion;
- (id)engageModel;
- (id)engagementModelBoltID;
- (unsigned long long)engagementModelVersion;
- (double)getHourBinID:(id)arg1 forHourBin:(unsigned long long)arg2;
- (id)getMacRoutineModelInputFeatures:(double)arg1 events:(id)arg2 pluginBatteryLevel:(unsigned long long)arg3 timeFromPlugin:(double)arg4 pluginDate:(id)arg5 pluginHour:(double)arg6 withLog:(id)arg7;
- (id)getPhoneInputFeatures:(double)arg1 events:(id)arg2 pluginBatteryLevel:(unsigned long long)arg3 timeFromPlugin:(double)arg4 pluginDate:(id)arg5 withLog:(id)arg6;
- (id)getPluginEventsBefore:(id)arg1 withMinimumDuration:(double)arg2;
- (id)getPluginEventsBefore:(id)arg1 withMinimumDuration:(double)arg2 withMinimumPlugoutBatteryLevel:(double)arg3;
- (id)getWatchInputFeatures:(double)arg1 events:(id)arg2 pluginBatteryLevel:(unsigned long long)arg3 timeFromPlugin:(double)arg4 pluginDate:(id)arg5 pluginHour:(double)arg6 withLog:(id)arg7;
- (id)initWithDefaultsDomain:(id)arg1 withContextStore:(id)arg2 withKnowledgeStore:(id)arg3 withTrialManager:(id)arg4;
- (double)lastDurationResult;
- (double)lastEngagementResult;
- (double)loadAdjustedHours;
- (double)loadMinInputChargeDuration;
- (struct os_unfair_lock_s { unsigned int x1; })loadModelLock;
- (double)loadThreshold;
- (void)loadTrial;
- (id)log;
- (double)minInputChargeDuration;
- (unsigned long long)modelVersion;
- (double)pluginBatteryLevel;
- (id)pluginDate;
- (id)predictFullChargeDateWithBatteryLevel:(unsigned long long)arg1;
- (void)resetSavedDeadline;
- (void)setAdjustedDuration:(double)arg1;
- (void)setContext:(id)arg1;
- (void)setDeadline:(id)arg1;
- (void)setDefaultsDomain:(id)arg1;
- (void)setLastDurationResult:(double)arg1;
- (void)setLastEngagementResult:(double)arg1;
- (void)setLoadModelLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setLog:(id)arg1;
- (void)setMinInputChargeDuration:(double)arg1;
- (void)setPluginBatteryLevel:(double)arg1;
- (void)setPluginDate:(id)arg1;
- (void)setStatusLog:(id)arg1;
- (void)setStore:(id)arg1;
- (void)setThreshold:(double)arg1;
- (void)setTrialManager:(id)arg1;
- (id)statusLog;
- (id)store;
- (double)threshold;
- (id)timeStringFromDate:(id)arg1;
- (id)trialManager;

@end
