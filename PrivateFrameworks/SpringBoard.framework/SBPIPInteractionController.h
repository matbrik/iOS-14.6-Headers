/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBPIPInteractionController : NSObject <PTSettingsKeyPathObserver, UIGestureRecognizerDelegate> {
    unsigned long long  _allLayoutSessionUpdateReasons;
    struct CGPoint { 
        double x; 
        double y; 
    }  _anchorPoint;
    struct CGSize { 
        double width; 
        double height; 
    }  _containerSize;
    <SBPIPInteractionControllerDelegate> * _delegate;
    bool  _didHandleGestureEndState;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _edgeInsets;
    bool  _enabled;
    unsigned long long  _gesturesEndedLayoutReason;
    bool  _gesturesWereCancelled;
    unsigned long long  _inFlightAnimatedLayouts;
    UIView * _interactionTargetView;
    bool  _isChangingSize;
    double  _lastStashedProgress;
    UIViewFloatAnimatableProperty * _layoutProgressProperty;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _minimumPadding;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _nonoperationalFrame;
    long long  _orientation;
    UIPanGestureRecognizer * _panGestureRecognizer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _panInitialLocationInView;
    double  _pinchGestureBaselineScale;
    UIPinchGestureRecognizer * _pinchGestureRecognizer;
    double  _pinchGestureScaleFactor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _positionAnchorPointOffset;
    _UIHyperInteractor * _positionInteractor;
    struct CGSize { 
        double width; 
        double height; 
    }  _preferredContentSize;
    double  _preferredScale;
    UIRotationGestureRecognizer * _rotationGestureRecognizer;
    _UIHyperInteractor * _rotationInteractor;
    _UIHyperInteractor * _scaleInteractor;
    SBPIPInteractionSettings * _settings;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _stashTabCompensationTransform;
    bool  _stashed;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _stashedMinimumPadding;
    <BSInvalidatable> * _stateCaptureInvalidatable;
    NSArray * _steadyStateCorners;
    _UIHyperregionUnion * _steadyStateStashedRegions;
    bool  _threeTouchesPanDetected;
    struct CGSize { 
        double width; 
        double height; 
    }  _toBeAppliedPreferredContentSize;
}

@property (nonatomic, readonly) struct CGSize { double x1; double x2; } containerSize;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } edgeInsets;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long orientation;
@property (nonatomic) struct CGSize { double x1; double x2; } preferredContentSize;
@property (nonatomic) double preferredScale;
@property (nonatomic, readonly) double stashProgress;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)__cornersForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)__handleGesturesEndedState:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })__insetRectForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1 pipSize:(struct CGSize { double x1; double x2; })arg2;
- (id)__interactivePositionHyperregionForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)__moveToAnchorPoint:(struct CGPoint { double x1; double x2; })arg1 reason:(id)arg2;
- (id)__stashedRegionsForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)__steadyPositionHyperregionWithCorners:(id)arg1 stashedRegions:(id)arg2;
- (unsigned long long)__traitsForGesturesReasons:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })__validatedInteractiveOrStashedInsetRectForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })__validatedSteadyOnScreenInsetRectForEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_adjustContentViewAnchorPointForGestureRecognizer:(id)arg1;
- (void)_applyPreferredScale;
- (void)_cancelAllGestures;
- (unsigned long long)_canonicalPositionForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })_currentCornerPosition;
- (struct CGPoint { double x1; double x2; })_currentPosition;
- (struct CGPoint { double x1; double x2; })_currentPositionForLayoutReason:(unsigned long long)arg1;
- (double)_currentRotation;
- (double)_currentScale;
- (struct CGSize { double x1; double x2; })_currentSizeForLayoutReason:(unsigned long long)arg1;
- (void)_handleGestureBeganState:(id)arg1;
- (void)_handleGestureEndedState:(id)arg1;
- (bool)_hasInFlightLayoutAnimations;
- (bool)_hasValidInteractionTargetView;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_inFlightHitTestPadding;
- (bool)_isGestureRecognizerRecognizing:(id)arg1;
- (bool)_isGesturing;
- (bool)_isInteractive;
- (bool)_isPanning;
- (bool)_isPinching;
- (bool)_isPreferredContentSizeDirty;
- (bool)_isRotating;
- (bool)_isSizeAffectedByLayoutReasons:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })_lastSteadySize;
- (void)_noteStashProgress:(double)arg1 withReason:(unsigned long long)arg2;
- (void)_performInitialLayoutIfNeeded;
- (id)_positionHyperregionUnion;
- (void)_removeGestureRecognizers;
- (void)_resetAnchorPoint;
- (id)_rotationHyperregion;
- (struct CGPoint { double x1; double x2; })_roundPosition:(struct CGPoint { double x1; double x2; })arg1 forSize:(struct CGSize { double x1; double x2; })arg2;
- (id)_scaleHyperregion;
- (void)_setDefaults;
- (void)_setNeedsLayoutForTraits:(unsigned long long)arg1 withReason:(unsigned long long)arg2 behavior:(int)arg3;
- (void)_setNeedsLayoutForTraits:(unsigned long long)arg1 withReason:(unsigned long long)arg2 behavior:(int)arg3 completion:(id /* block */)arg4;
- (void)_setNeedsLayoutForTraits:(unsigned long long)arg1 withReason:(unsigned long long)arg2 behavior:(int)arg3 layoutCompletion:(id /* block */)arg4 interactionCompletion:(id /* block */)arg5;
- (void)_setPreferredNormalizedScale:(double)arg1 animationBehavior:(int)arg2;
- (void)_setPreferredScale:(double)arg1 animationBehavior:(int)arg2;
- (void)_setupDefaultInteractorsAndHyperRegions;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_setupForInitialFrame;
- (void)_setupGestureRecognizers;
- (void)_setupStateCapture;
- (void)_sizeChangeBeganWithBehavior:(int)arg1;
- (void)_sizeChangeEnded;
- (double)_stashProgressForPosition:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_stashTabCompensationTransformForStashProgress:(double)arg1 reason:(unsigned long long)arg2;
- (void)_updateInteractorsAndCommit:(bool)arg1;
- (void)_updatePreferredContentSize;
- (void)_updateSettingsDrivenParameters;
- (unsigned long long)canonicalPosition;
- (struct CGSize { double x1; double x2; })containerSize;
- (double)currentScale;
- (void)dealloc;
- (id)description;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsets;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handlePanGesture:(id)arg1;
- (void)handlePinchGesture:(id)arg1;
- (void)handleRotationGesture:(id)arg1;
- (id)initWithInteractionTargetView:(id)arg1 delegate:(id)arg2 preferredContentSize:(struct CGSize { double x1; double x2; })arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })initialFrame;
- (bool)isEnabled;
- (void)layoutInteractedTraits:(unsigned long long)arg1 withReason:(unsigned long long)arg2 source:(id)arg3;
- (void)layoutWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 reason:(id)arg2 source:(id)arg3;
- (long long)orientation;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (double)preferredScale;
- (void)setContainerSize:(struct CGSize { double x1; double x2; })arg1 withOrientation:(long long)arg2;
- (void)setEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setEnabled:(bool)arg1;
- (void)setPreferredContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreferredScale:(double)arg1;
- (void)setStashed:(bool)arg1;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (double)stashProgress;
- (void)toggleUserPreferredScale;

@end
