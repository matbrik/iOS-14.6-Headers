/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBWorkspace : NSObject <FBSceneClient, FBSceneClientProvider> {
    BSCompoundAssertion * _compoundAssertion;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    unsigned char  _lock_activeAssertionState;
    long long  _lock_activeInterruptionPolicy;
    RBSAssertion * _lock_afterlifeAssertion;
    RBSAssertion * _lock_connectAssertion;
    BSServiceConnection<BSServiceConnectionHost> * _lock_connection;
    bool  _lock_didReceiveHandshake;
    FBWorkspaceEventDispatcherRegistration * _lock_eventDispatcher;
    NSMutableDictionary * _lock_identifierToRemnantsMap;
    NSMutableDictionary * _lock_identifierToSceneMap;
    bool  _lock_invalidated;
    FBSceneClientProviderInvalidationAction * _lock_invalidationAction;
    RBSAssertion * _lock_lifeAssertion;
    NSMutableArray * _lock_pendedRequests;
    NSMutableArray * _lock_waitForConnectBlocks;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _shouldInjectEndpoint;
    <FBWorkspaceDelegate> * _weak_delegate;
    FBProcess * _weak_process;
    FBSSerialQueue * _workspaceQueue;
    BSServiceConnectionEndpointInjector * _workspaceServiceInjector;
}

@property (nonatomic, readonly) BSAuditToken *auditToken;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <FBWorkspaceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) FBProcess *process;
@property (readonly) Class superclass;

+ (long long)_resolveInterruptionPolicy:(long long)arg1;

- (void).cxx_destruct;
- (id)_acquireAssertionForReason:(id)arg1 withState:(unsigned char)arg2;
- (void)_lock_enqueueConnectBlock:(id /* block */)arg1;
- (void)_lock_fireInvalidationAction;
- (void)_resolveSceneLifecycleStateAndInterruptionPolicy;
- (id)_sceneForIdentifier:(id)arg1;
- (void)_terminateWithReason:(id)arg1;
- (id)_unregisterSceneForIdentifier:(id)arg1;
- (void)_updateProcessAssertionState;
- (id)auditToken;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (oneway void)handshakeWithRemnants:(id)arg1;
- (void)host:(id)arg1 didInvalidateWithTransitionContext:(id)arg2 completion:(id /* block */)arg3;
- (void)host:(id)arg1 didReceiveActions:(id)arg2;
- (void)host:(id)arg1 didUpdateSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4 completion:(id /* block */)arg5;
- (id)init;
- (id)process;
- (id)registerHost:(id)arg1 withSpecification:(id)arg2 settings:(id)arg3 initialClientSettings:(id)arg4 fromRemnant:(id)arg5;
- (void)registerInvalidationAction:(id)arg1;
- (oneway void)requestSceneWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)sceneID:(id)arg1 didReceiveActions:(id)arg2;
- (oneway void)sceneID:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 transitionContext:(id)arg3;
- (oneway void)sceneID:(id)arg1 sendMessage:(id)arg2 withResponse:(id /* block */)arg3;
- (void)sendActions:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)unregisterHost:(id)arg1;

@end
