/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowEditor.framework/WorkflowEditor
 */

@interface CKComponentScopeRoot : NSObject {
    NSHashTable * _boundsAnimationComponents;
    struct unordered_multimap<CKComponentAnnouncedEvent, CKComponentController *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const CKComponentAnnouncedEvent, CKComponentController *>>> { 
        struct __hash_table<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _eventRegistration;
    int  _globalIdentifier;
    <CKComponentStateListener> * _listener;
    CKComponentScopeFrame * _rootFrame;
}

@property (nonatomic, readonly) int globalIdentifier;
@property (nonatomic, readonly) <CKComponentStateListener> *listener;
@property (nonatomic, readonly) CKComponentScopeFrame *rootFrame;

+ (id)rootWithListener:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)announceEventToControllers:(unsigned long long)arg1;
- (id)boundsAnimationComponents;
- (struct CKComponentBoundsAnimation { double x1; double x2; unsigned long long x3; unsigned long long x4; double x5; double x6; })boundsAnimationFromPreviousScopeRoot:(id)arg1;
- (int)globalIdentifier;
- (id)initWithListener:(id)arg1 globalIdentifier:(int)arg2;
- (id)listener;
- (id)newRoot;
- (void)registerAnnounceableEventsForController:(id)arg1;
- (void)registerBoundsAnimationComponent:(id)arg1;
- (id)rootFrame;

@end
