/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WiFiPolicy.framework/WiFiPolicy
 */

@interface WiFiUsageLQMWindowAnalysis : NSObject {
    NSObject<OS_dispatch_queue> * _analysisQueue;
    NSObject<OS_dispatch_source> * _analysisTimer;
    id /* block */  _completionHandler;
    NSString * _fgApp;
    bool  _isDone;
    NSMutableDictionary * _lqmWindowsFeatures;
    NSString * _metricNameCDF;
    NSString * _metricNameSankey;
    NSArray * _preceedingTriggers;
    NSString * _reason;
    NSMutableArray * _subsequentTriggers;
    NSDictionary * _summary;
    NSDate * _timestamp;
    WiFiUsageLQMRollingWindow * _windowAfterTrigger;
    WiFiUsageLQMRollingWindow * _windowBeforeTrigger;
    NSMutableDictionary * dimensions;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *analysisQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *analysisTimer;
@property (nonatomic, copy) id /* block */ completionHandler;
@property (nonatomic, retain) NSString *fgApp;
@property (nonatomic) bool isDone;
@property (nonatomic, retain) NSMutableDictionary *lqmWindowsFeatures;
@property (nonatomic, retain) NSString *metricNameCDF;
@property (nonatomic, retain) NSString *metricNameSankey;
@property (nonatomic, retain) NSArray *preceedingTriggers;
@property (nonatomic, copy) NSString *reason;
@property (nonatomic, retain) NSMutableArray *subsequentTriggers;
@property (nonatomic, retain) NSDictionary *summary;
@property (nonatomic, copy) NSDate *timestamp;
@property (nonatomic, retain) WiFiUsageLQMRollingWindow *windowAfterTrigger;
@property (nonatomic, retain) WiFiUsageLQMRollingWindow *windowBeforeTrigger;

+ (void)initialize;
+ (void)updateConfig;

- (void).cxx_destruct;
- (id)addDimensionsTo:(id)arg1;
- (id)analysisQueue;
- (id)analysisTimer;
- (id /* block */)completionHandler;
- (void)computeBins:(id)arg1 WithSampleKind:(id)arg2;
- (void)computeFeatures:(id)arg1 For:(id)arg2 WithLogLabel:(id)arg3;
- (void)dealloc;
- (id)description;
- (id)dumpAnalysis:(id)arg1;
- (id)dumpDimensions:(id)arg1;
- (id)fgApp;
- (id)initWithRollingWindow:(id)arg1 andReason:(id)arg2 onQueue:(id)arg3;
- (bool)isAnalysisTodo;
- (bool)isDone;
- (id)lqmWindowsFeatures;
- (id)metricCallbackForMetric:(id)arg1 AndField:(id)arg2;
- (id)metricNameCDF;
- (id)metricNameSankey;
- (void)performAnalysis;
- (id)preceedingTriggers;
- (id)reason;
- (void)setAnalysisQueue:(id)arg1;
- (void)setAnalysisTimer:(id)arg1;
- (void)setCompletionHandler:(id /* block */)arg1;
- (void)setFgApp:(id)arg1;
- (void)setIsDone:(bool)arg1;
- (void)setLqmWindowsFeatures:(id)arg1;
- (void)setMetricNameCDF:(id)arg1;
- (void)setMetricNameSankey:(id)arg1;
- (void)setPreceedingTriggers:(id)arg1;
- (void)setReason:(id)arg1;
- (void)setSubsequentTriggers:(id)arg1;
- (void)setSummary:(id)arg1;
- (void)setTimestamp:(id)arg1;
- (void)setWindowAfterTrigger:(id)arg1;
- (void)setWindowBeforeTrigger:(id)arg1;
- (id)subsequentTriggers;
- (id)summary;
- (id)timestamp;
- (void)updateWithLQMSample:(id)arg1;
- (void)updateWithSubsequentTrigger:(id)arg1;
- (id)windowAfterTrigger;
- (id)windowBeforeTrigger;

@end
