/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCImageQueue : NSObject {
    struct _CAImageQueue { } * _caQueue;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _enqueueLock;
    unsigned int  _enqueuedFrameCount;
    struct OpaqueFigImageQueue { } * _figQueue;
    NSMutableArray * _frameCountHistory;
    unsigned int  _frameRate;
    bool  _imageQueueProtected;
    bool  _isLowLatencyEnabled;
    VCPixelBufferOverlay * _pixelBufferOverlay;
    struct opaqueVCRemoteImageQueue { } * _remoteQueue;
    unsigned int  _slot;
    struct __CFDictionary { } * _storedAttributes;
    long long  _streamToken;
    bool  _usingRemoteQueue;
}

@property unsigned int frameRate;
@property bool imageQueueProtected;
@property (getter=isLowLatencyEnabled, nonatomic) bool lowLatencyEnabled;
@property long long streamToken;
@property (readonly) bool usingRemoteQueue;

+ (id)drawingContext;

- (float)averageFrameRate;
- (void)createAndCopyLatencyStatsDictionary:(const struct __CFDictionary {}**)arg1;
- (void)createAndCopyPerformanceDictionary:(const struct __CFDictionary {}**)arg1;
- (void)createRemoteQueueWithClientPid:(int)arg1;
- (void)dealloc;
- (id)description;
- (void)emitFrameEnqueuedSignposts:(unsigned long long)arg1 withTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forFrame:(struct __CVBuffer { }*)arg3;
- (void)enqueueAttributes:(struct __CFDictionary { }*)arg1;
- (bool)enqueueFrame:(struct __CVBuffer { }*)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (unsigned int)frameRate;
- (void)getQueueRepresentation:(void*)arg1;
- (id)getXPCObjectFromRemoteQueue;
- (bool)imageQueueProtected;
- (id)initWithFrameRate:(unsigned char)arg1;
- (id)initWithFrameRate:(unsigned char)arg1 imageQueueProtected:(bool)arg2;
- (bool)isLowLatencyEnabled;
- (void)pause;
- (void)removeExpiredFrameCounts:(double)arg1;
- (void)setFrameRate:(unsigned int)arg1;
- (void)setImageQueueProtected:(bool)arg1;
- (void)setLowLatencyEnabled:(bool)arg1;
- (void)setStreamToken:(long long)arg1;
- (unsigned int)setVideoDestination:(id)arg1;
- (void)start;
- (void)stop;
- (long long)streamToken;
- (void)updateFrameCountHistory;
- (bool)usingRemoteQueue;

@end
