/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBPIPController : NSObject <PGPictureInPictureControllerDelegate, SBAlertItemsControllerObserver, SBAssistantObserver, SBIdleTimerProviding, SBPIPContainerViewControllerObserver, SBPIPMorphAnimatorControllerDelegate, SBSensorActivityObserver, SBWorkspaceKeyboardFocusControllerObserver> {
    SBPIPAnalytics * _analyticsHelper;
    NSMutableDictionary * _cameraInterruptionAssertions;
    bool  _defaultToStashed;
    FBSDisplayLayoutMonitor * _displayLayoutMonitor;
    bool  _expectKeyboardVisible;
    <BSInvalidatable> * _fullscreenModalElementInsetOverrideAssertion;
    bool  _hasIdleTimerBehaviors;
    <SBIdleTimerCoordinating> * _idleTimerCoordinator;
    SBIdleTimerCoordinatorHelper * _idleTimerCoordinatorHelper;
    BSCompoundAssertion * _insetsOverrideAssertions;
    NSHashTable * _interruptionAssertions;
    SBPIPInterruptionDebouncingTimer * _interruptionEndDebouncingTimer;
    bool  _isReducingResourcesUsage;
    UIView * _keyboardInsetsVisualizerView;
    PGPictureInPictureController * _pictureInPictureController;
    NSMutableDictionary * _pictureInPictureInsetsForSource;
    NSMutableSet * _pictureInPictureMorphAnimatorControllers;
    SBPIPWindow * _pictureInPictureWindow;
    NSMutableSet * _pictureInPictureWindowHiddenReasons;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _pictureInPictureWindowMargin;
    BSTimer * _pipDefaultContentSizeResetTimer;
    NSMutableArray * _stashAssertions;
    SBPIPStashAssertion * _stashForInterruptionAssertion;
    <BSInvalidatable> * _stateCaptureInvalidatable;
    long long  _unlockedEnvironmentModeWhenKeyboardFocusChanged;
    NSHashTable * _weakObservers;
    NSMutableArray * _windowLevelOverrideAssertions;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasIdleTimerBehaviors;
@property (readonly) unsigned long long hash;
@property (nonatomic) <SBIdleTimerCoordinating> *idleTimerCoordinator;
@property (readonly) Class superclass;

+ (bool)isAutoPictureInPictureSupported;
+ (bool)isPictureInPictureSupported;
+ (id)sharedInstance;
+ (id)sharedInstanceIfLoaded;

- (void).cxx_destruct;
- (void)_addPictureInPictureMorphAnimatorController:(id)arg1;
- (void)_adjustPIPInsetsForKeyboardFrameChangeNotification:(id)arg1;
- (void)_appSwitcherWillQuitApp:(id)arg1;
- (void)_cancelInterruptionDebouncingTimer;
- (void)_createWindowAndRootViewControllerIfNeeded;
- (id)_currentLayoutState;
- (void)_destroyWindowAndRootViewControllerIfPossible;
- (void)_floatingDockHeightWillChange:(id)arg1;
- (bool)_isContentViewAlignedLeftWithPosition:(unsigned long long)arg1 orientation:(long long)arg2;
- (bool)_isContentViewAlignedTopWithPosition:(unsigned long long)arg1 orientation:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_keyboardFrameInScreenSpaceFromNotification:(id)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_keyboardWillRotate:(id)arg1;
- (void)_keyboardWillShowOrHide:(id)arg1;
- (void)_lockStateDidChange:(id)arg1;
- (void)_managePictureInPictureWindowLevel;
- (void)_managePictureInPictureWindowVisibilityAnimated:(bool)arg1;
- (id)_morphAnimatorControllerForProcessIdentifier:(int)arg1;
- (void)_notifyObserversVisibilityMayHaveChangedForContainerViewController:(id)arg1;
- (id)_overrideInsetsForReason:(id)arg1 withIdentifier:(id)arg2;
- (id)_pictureInPictureApplicationForProcessIdentifier:(int)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_pictureInPictureWindowMargins;
- (id)_pipWindow;
- (bool)_pointInside:(struct CGPoint { double x1; double x2; })arg1;
- (long long)_reasonForAssertion:(id)arg1;
- (void)_removePictureInPictureMorphAnimatorController:(id)arg1;
- (void)_setContainersStashed:(bool)arg1;
- (void)_setPictureInPictureWindowMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_updateContainerViewControllersContentPadding;
- (void)_updateFloatingDockInsets;
- (void)_updateFloatingDockInsetsWithHeight:(double)arg1;
- (void)_updateHasIdleTimerBehaviors;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_updatePictureInPictureOverlayInsetsWithCurrentLayoutState:(bool)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_updatePictureInPictureOverlayInsetsWithCurrentLayoutState:(bool)arg1 shouldUpdate:(bool)arg2;
- (void)_visualizeKeyboardFrameIfNeeded:(id)arg1;
- (id)acquireInterruptionAssertionForReason:(long long)arg1 identifier:(id)arg2;
- (id)acquireInterruptionAssertionForReason:(long long)arg1 identifier:(id)arg2 cameraSensorBundleIdentifier:(id)arg3;
- (id)acquirePictureInPictureWindowLevelOverrideAssertionForWindowLevel:(unsigned long long)arg1 withReason:(long long)arg2 identifier:(id)arg3;
- (id)acquireStashAssertionForReason:(long long)arg1 identifier:(id)arg2;
- (void)activityDidChangeForSensorActivityDataProvider:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)alertItemsController:(id)arg1 didActivateAlertItem:(id)arg2;
- (void)alertItemsController:(id)arg1 didDeactivateAlertItem:(id)arg2 forReason:(int)arg3;
- (void)alertItemsController:(id)arg1 willActivateAlertItem:(id)arg2;
- (void)applyPictureInPictureInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1 forSource:(long long)arg2;
- (void)assistantDidDisappear:(id)arg1;
- (void)assistantWillAppear:(id)arg1;
- (void)beginPiPInterruptionForAssertion:(id)arg1;
- (void)cancelPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)arg1 scenePersistenceIdentifier:(id)arg2;
- (void)containerViewController:(id)arg1 didFinishStartAnimationWithInitialInterfaceOrientation:(long long)arg2;
- (void)containerViewController:(id)arg1 userDidUpdateStashState:(bool)arg2;
- (void)containerViewControllerStartReducingResourcesUsage:(id)arg1;
- (void)containerViewControllerStopReducingResourcesUsage:(id)arg1;
- (void)containerViewControllerUserMayUpdateStashState:(id)arg1;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)createAndRegisterPictureInPictureMorphAnimatorControllerWithTargetProcessIdentifier:(int)arg1 uuid:(id)arg2 scenePersistenceIdentifier:(id)arg3 direction:(long long)arg4 gestureInitiated:(bool)arg5;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })defaultHomeScreenInitialPiPFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withPreferredContentSize:(struct CGSize { double x1; double x2; })arg2 fromOrientation:(long long)arg3 toOrientation:(long long)arg4 shouldUpdate:(bool)arg5 gestureInitiated:(bool)arg6;
- (void)displayLayoutMonitor:(id)arg1 didUpdateDisplayLayout:(id)arg2 withContext:(id)arg3;
- (void)endPiPInterruptionForAssertion:(id)arg1;
- (void)forcePictureInPictureContainerWithView:(id)arg1 toFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)hasIdleTimerBehaviors;
- (id)idleTimerCoordinator;
- (id)init;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplicationWithProcessIdentifier:(int)arg1 scenePersistenceIdentifier:(id)arg2;
- (bool)isPictureInPictureWindowVisible;
- (bool)isShowingPictureInPictureForSceneWithPersistenceIdentifier:(id)arg1;
- (void)keyboardFocusController:(id)arg1 didUpdateFocusToPID:(int)arg2 sceneID:(id)arg3;
- (void)morphAnimatorControllerDidTerminate:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pictureInPictureController:(id)arg1 didCreatePictureInPictureViewController:(id)arg2;
- (void)pictureInPictureController:(id)arg1 didHidePictureInPictureViewController:(id)arg2;
- (void)pictureInPictureController:(id)arg1 didRequestStopForPictureInPictureViewController:(id)arg2 sourceSceneSessionIdentifier:(id)arg3 animated:(bool)arg4;
- (bool)pictureInPictureController:(id)arg1 shouldDenyNewConnection:(id)arg2;
- (void)pictureInPictureController:(id)arg1 willDestroyPictureInPictureViewController:(id)arg2;
- (void)pictureInPictureController:(id)arg1 willHidePictureInPictureViewController:(id)arg2;
- (id)pictureInPictureMorphAnimatorControllerForProcessIdentifier:(int)arg1;
- (struct CGSize { double x1; double x2; })preferredContentSizeForActivePictureInPictureWithApplicationWithProcessIdentifier:(int)arg1 scenePersistenceIdentifier:(id)arg2;
- (struct CGSize { double x1; double x2; })preferredContentSizeForInteractivelyEnteringBackgroundForApplicationWithProcessIdentifier:(int)arg1 scenePersistenceIdentifier:(id)arg2;
- (void)removeObserver:(id)arg1;
- (void)setIdleTimerCoordinator:(id)arg1;
- (void)setPictureInPictureWindowHidden:(bool)arg1 withReason:(id)arg2;
- (bool)shouldStartPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)arg1 scenePersistenceIdentifier:(id)arg2;
- (void)startPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)arg1 scenePersistenceIdentifier:(id)arg2 animated:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)updatePictureInPictureWindowLevel;

@end
