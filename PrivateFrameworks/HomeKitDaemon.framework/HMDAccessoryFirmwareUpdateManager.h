/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDAccessoryFirmwareUpdateManager : NSObject <HMFLogging, UARPControllerDelegateProtocol> {
    NSMutableDictionary * _accessoryRetries;
    NSMutableDictionary * _activeSessions;
    long long  _defaultUpdateAssetSource;
    NSURL * _documentationPath;
    HMDHomeManager * _homeManager;
    HMFUnfairLock * _lock;
    HMDAccessoryFirmwareUpdateConcurrencyLogEventManager * _logEventManager;
    NSMapTable * _registeredAccessories;
    <HMDAccessoryFirmwareUpdateManagerWingman> * _wingman;
}

@property (nonatomic, retain) NSMutableDictionary *accessoryRetries;
@property (nonatomic, retain) NSMutableDictionary *activeSessions;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) long long defaultUpdateAssetSource;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSURL *documentationPath;
@property (readonly) unsigned long long hash;
@property (readonly) HMDHomeManager *homeManager;
@property (nonatomic, readonly) HMFUnfairLock *lock;
@property (nonatomic, readonly) HMDAccessoryFirmwareUpdateConcurrencyLogEventManager *logEventManager;
@property (nonatomic, retain) NSMapTable *registeredAccessories;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UARPController *uarpController;
@property (readonly) <HMDAccessoryFirmwareUpdateManagerWingman> *wingman;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)UARPAccessoryForHMDAccessory:(id)arg1;
- (void)_handleAccessoryFirmwareVersionUpdateNotification:(id)arg1;
- (void)_handleHomeAccessoryRemovedNotification:(id)arg1;
- (id)accessoryRetries;
- (id)activeSessions;
- (id)addSessionForUARPAccessory:(id)arg1;
- (void)assetAvailablityUpdateForAccessoryID:(id)arg1 assetID:(id)arg2;
- (void)assetSolicitationComplete:(id)arg1 assetID:(id)arg2 withStatus:(unsigned long long)arg3;
- (void)assetSolicitationProgress:(id)arg1 assetID:(id)arg2 bytesReceived:(unsigned long long)arg3 bytesTotal:(unsigned long long)arg4;
- (void)changeAccessory:(id)arg1 source:(long long)arg2 path:(id)arg3 documentationPath:(id)arg4 userInitiatedStaging:(bool)arg5;
- (bool)checkForUpdateForAccessory:(id)arg1;
- (long long)defaultProductDataUpdateAssetSource;
- (long long)defaultUpdateAssetSource;
- (long long)defaultUpdateAssetSourceWithAccessory:(id)arg1;
- (bool)deviceSupportsFirmwareUpdate;
- (id)documentationPath;
- (id)findHMDHAPAccessoryWithUARPAccessory:(id)arg1;
- (void)firmwareStagingComplete:(id)arg1 assetID:(id)arg2 withStatus:(unsigned long long)arg3;
- (void)firmwareStagingProgress:(id)arg1 assetID:(id)arg2 bytesSent:(unsigned long long)arg3 bytesTotal:(unsigned long long)arg4;
- (void)firmwareUpdateResult:(id)arg1 vendorSpecificStatus:(unsigned int)arg2 error:(id)arg3;
- (void)handleAccessoryFirmwareVersionUpdateNotification:(id)arg1;
- (void)handleHomeAccessoryRemovedNotification:(id)arg1;
- (bool)hasAccessoryUsedAllFirmwareUpdateRetries:(id)arg1 forAsset:(id)arg2;
- (id)homeManager;
- (id)init;
- (id)initWithHomeManager:(id)arg1;
- (id)initWithHomeManager:(id)arg1 wingman:(id)arg2;
- (bool)isAccessoryRegistered:(id)arg1;
- (bool)isFirmwareUpdateRetryAllowedForAccessory:(id)arg1 forAsset:(id)arg2;
- (id)lock;
- (id)logEventManager;
- (void)registerAccessory:(id)arg1;
- (void)registerAccessory:(id)arg1 source:(long long)arg2 path:(id)arg3;
- (id)registeredAccessories;
- (void)removeSession:(id)arg1;
- (void)resetFirmwareUpdateAccessoryRetryTracking:(id)arg1 forAsset:(id)arg2;
- (bool)sendMessageToAccessory:(id)arg1 uarpMsg:(id)arg2 error:(id*)arg3;
- (id)sessionForAccessory:(id)arg1;
- (id)sessionForUARPAccessory:(id)arg1;
- (void)setAccessoryRetries:(id)arg1;
- (void)setActiveSessions:(id)arg1;
- (void)setRegisteredAccessories:(id)arg1;
- (bool)startUARPPacketCapture:(id)arg1;
- (void)stopUARPPacketCapture;
- (id)uarpController;
- (void)unregisterAccessory:(id)arg1;
- (id)wingman;

@end
