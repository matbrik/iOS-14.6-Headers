/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWInferenceNode : BWNode <BWInferenceFormatProvider, BWInferencePixelBufferPoolProvider> {
    bool  _applyRecommendedMasterPortType;
    bool  _awaitAsynchronousOutputs;
    BWFigVideoCaptureDevice * _captureDevice;
    BWInferenceEngine * _inferenceEngine;
    NSString * _recommendedMasterPortType;
}

@property (nonatomic) bool applyRecommendedMasterPortType;
@property (nonatomic) bool awaitAsynchronousOutputs;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) BWInferenceEngine *inferenceEngine;
@property (readonly) Class superclass;

+ (void)initialize;

- (int)addInferenceOfType:(int)arg1 version:(struct { unsigned short x1; unsigned short x2; unsigned short x3; })arg2;
- (int)addInferenceOfType:(int)arg1 version:(struct { unsigned short x1; unsigned short x2; unsigned short x3; })arg2 configuration:(id)arg3;
- (bool)applyRecommendedMasterPortType;
- (bool)awaitAsynchronousOutputs;
- (void)dealloc;
- (id)description;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2 forAttachedMediaKey:(id)arg3;
- (id)inferenceEngine;
- (id)initWithCaptureDevice:(id)arg1 scheduler:(id)arg2 priority:(unsigned int)arg3;
- (id)inputFormatForAttachedMediaKey:(id)arg1;
- (id)inputInferenceVideoFormatForAttachedMediaKey:(id)arg1;
- (id)inputVideoFormatForAttachedMediaKey:(id)arg1;
- (bool)intermediateResourceTrackingAllowedForAttachedMediaKey:(id)arg1;
- (id)liveOutputPixelBufferPoolForAttachedMediaKey:(id)arg1 format:(id)arg2;
- (id)nodeSubType;
- (id)nodeType;
- (id)outputFormatForAttachedMediaKey:(id)arg1;
- (id)outputVideoFormatForAttachedMediaKey:(id)arg1;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)preparedOutputPixelBufferPoolForAttachedMediaKey:(id)arg1 format:(id)arg2;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (void)setApplyRecommendedMasterPortType:(bool)arg1;
- (void)setAwaitAsynchronousOutputs:(bool)arg1;
- (void)willEmitSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;

@end
