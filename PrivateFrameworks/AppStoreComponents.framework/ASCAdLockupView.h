/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents
 */

@interface ASCAdLockupView : UIView <ASCLockupMediaPresenterObserver, ASCLockupPresenterObserver, ASCOfferPresenterObserver> {
    ASCAdLockupContentView * _adContentView;
    ASCAdLockupPresenter * _adLockupPresenter;
    bool  _automaticallyPresentsProductDetails;
    <ASCAdLockupViewDelegate> * _delegate;
    struct { 
        unsigned int adLockupViewDidBeginRequest : 1; 
        unsigned int adLockupViewDidFinishRequest : 1; 
        unsigned int adLockupViewDidFailRequestWithError : 1; 
        unsigned int adLockupViewAppStateDidChange : 1; 
        unsigned int metricsActivityForPresentingProductDetailsOfAdLockupViewInState : 1; 
        unsigned int metricsActivityForAdLockupViewToPerformActionOfOfferInState : 1; 
        unsigned int adLockupViewDidInvalidateIntrinsicContentSize : 1; 
        unsigned int adLockupViewDidPresentProductDetails : 1; 
        unsigned int adLockupViewDidSelectOfferWithState : 1; 
        unsigned int adLockupViewDidSelectAdMarker : 1; 
        unsigned int adLockupViewDidBeginScreenshotsFetchRequest : 1; 
        unsigned int adLockupViewDidCancelScreenshotsFetchRequest : 1; 
        unsigned int adLockupViewDidFinishScreenshotsFetchRequest : 1; 
    }  _delegateRespondsTo;
    ASCLockupMediaPresenter * _lockupMediaPresenter;
    ASCLockupPresenter * _lockupPresenter;
    ASCLockupMediaView * _mediaView;
    ASCAppearMetricsPresenter * _metricsPresenter;
    ASCOfferPresenter * _offerPresenter;
    NSString * _storeSheetHostBundleID;
    NSString * _storeSheetUsageContext;
}

@property (nonatomic, readonly) NSString *accessibilityAdvertisement;
@property (nonatomic, readonly) NSString *accessibilityUserRating;
@property (nonatomic, readonly) ASCAdLockupContentView *adContentView;
@property (nonatomic, readonly) ASCAdLockupPresenter *adLockupPresenter;
@property (getter=isAdMarkerHidden, nonatomic) bool adMarkerHidden;
@property (nonatomic) bool automaticallyPresentsProductDetails;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ASCAdLockupViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) ASCLockupViewGroup *group;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) ASCLockup *lockup;
@property (nonatomic, readonly) ASCLockupMediaPresenter *lockupMediaPresenter;
@property (nonatomic, readonly) ASCLockupPresenter *lockupPresenter;
@property (nonatomic, readonly) ASCLockupMediaView *mediaView;
@property (nonatomic, readonly) ASCAppearMetricsPresenter *metricsPresenter;
@property (nonatomic, readonly) ASCOfferPresenter *offerPresenter;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic, copy) ASCLockupRequest *request;
@property (nonatomic, retain) NSString *storeSheetHostBundleID;
@property (nonatomic, retain) NSString *storeSheetUsageContext;
@property (readonly) Class superclass;
@property (nonatomic, readonly) AVPlayer *videoPlayer;

- (void).cxx_destruct;
- (id)_accessibilitySupplementaryFooterViews;
- (bool)accessibilityActivate;
- (id)accessibilityAdvertisement;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityUserRating;
- (id)adContentView;
- (id)adLockupPresenter;
- (id)appearMetricsActivity;
- (bool)automaticallyGeneratesAppearMetrics;
- (bool)automaticallyPresentsProductDetails;
- (id)delegate;
- (id)description;
- (void)didMoveToWindow;
- (void)encodeWithCoder:(id)arg1;
- (id)group;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (bool)isAccessibilityElement;
- (bool)isAdMarkerHidden;
- (bool)isHighlighted;
- (void)layoutAdContentView;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (id)lockup;
- (id)lockupMediaPresenter;
- (void)lockupMediaPresenterDidBeginScreenshotsFetchRequest;
- (void)lockupMediaPresenterDidCancelScreenshotsFetchRequest;
- (void)lockupMediaPresenterDidFinishScreenshotsFetchRequest;
- (id)lockupPresenter;
- (void)lockupPresenterDidBeginRequest;
- (void)lockupPresenterDidFailRequestWithError:(id)arg1;
- (void)lockupPresenterDidFinishRequest;
- (id)mediaView;
- (id)metricsActivityForPresentingProductDetails;
- (id)metricsParametersForPresentingProductDetails;
- (id)metricsParametersFromMetricsActivity:(id)arg1;
- (id)metricsPresenter;
- (id)offerPresenter;
- (void)offerPresenterDidObserveChangeToState:(id)arg1;
- (void)offerPresenterWillPerformActionOfOffer:(id)arg1 inState:(id)arg2 withActivity:(inout id*)arg3;
- (id)offerTheme;
- (void)pauseVideo;
- (void)performAdTransparencyAction;
- (void)performLockupAction;
- (void)performOfferAction;
- (void)playVideo;
- (void)presentProductDetailsViewController;
- (id)presentingViewController;
- (id)request;
- (void)resetVideo;
- (void)setAdMarkerHidden:(bool)arg1;
- (void)setAppearMetricsActivity:(id)arg1;
- (void)setAutomaticallyGeneratesAppearMetrics:(bool)arg1;
- (void)setAutomaticallyPresentsProductDetails:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGroup:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLockup:(id)arg1;
- (void)setOfferTheme:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setStoreSheetHostBundleID:(id)arg1;
- (void)setStoreSheetUsageContext:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)storeSheetHostBundleID;
- (id)storeSheetUsageContext;
- (id)videoPlayer;

@end
