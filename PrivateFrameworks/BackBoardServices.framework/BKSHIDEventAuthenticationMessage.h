/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
 */

@interface BKSHIDEventAuthenticationMessage : NSObject <BSProtobufSerializable, NSCopying, NSSecureCoding> {
    unsigned long long  _context;
    unsigned int  _eventType;
    long long  _keyGeneration;
    unsigned long long  _originIdentifier;
    bool  _registrantEntitled;
    NSData * _signature;
    unsigned long long  _timestamp;
    long long  _versionedPID;
}

@property (nonatomic, readonly) unsigned long long context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) BSAuditToken *destinationAuditToken;
@property (nonatomic, readonly) unsigned int eventType;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long keyGeneration;
@property (nonatomic, readonly) unsigned long long originIdentifier;
@property (nonatomic, readonly) bool registrantEntitled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long timestamp;
@property (nonatomic, readonly) long long versionedPID;

+ (id)messageWithOriginIdentifier:(unsigned long long)arg1 context:(unsigned long long)arg2 destinationAuditToken:(id)arg3 signWithKey:(id)arg4;
+ (id)new;
+ (id)protobufSchema;
+ (bool)supportsSecureCoding;
+ (id)withKey:(id)arg1 buildMessage:(id /* block */)arg2;

- (void).cxx_destruct;
- (bool)_verifySignatureWithKey:(id)arg1;
- (unsigned long long)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)destinationAuditToken;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)eventType;
- (unsigned long long)hash;
- (id)init;
- (id)initForProtobufDecoding;
- (id)initWithCoder:(id)arg1;
- (id)initWithOriginIdentifier:(unsigned long long)arg1 context:(unsigned long long)arg2 destinationAuditToken:(id)arg3 signWithKey:(id)arg4;
- (bool)isEqual:(id)arg1;
- (long long)keyGeneration;
- (unsigned long long)originIdentifier;
- (bool)registrantEntitled;
- (unsigned long long)timestamp;
- (bool)verifySignatureWithKey:(id)arg1;
- (bool)verifySignatureWithKeys:(id)arg1;
- (long long)versionedPID;

@end
