/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface FigCaptureCameraSourcePipeline : FigCaptureSourcePipeline {
    BWFigVideoCaptureDevice * _captureDevice;
    struct OpaqueFigCaptureSource { } * _captureSource;
    FigCaptureSourceDepthDataFormat * _captureSourceDepthDataFormat;
    FigCaptureSourceVideoFormat * _captureSourceVideoFormat;
    NSMutableDictionary * _cinematicFramingNodesBySourceDeviceType;
    NSDictionary * _detectedObjectsOutputsBySourceDeviceType;
    int  _devicePosition;
    int  _deviceType;
    bool  _hardwareDepthFilteringEnabled;
    BWMultiStreamCameraSourceNode * _infraredSourceNode;
    BWMemoryPool * _memoryPool;
    unsigned int  _nextVideoCaptureOutputIndexBySourceDeviceType;
    bool  _overCapturePercentage;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _overscanRect;
    NSArray * _previewFilters;
    NSDictionary * _previewOutputsBySourceDeviceType;
    BWNodeOutput * _sourceFormatReferenceOutput;
    BWMultiStreamCameraSourceNode * _sourceNode;
    NSMutableArray * _sourceNodes;
    bool  _stillImageOutputDerivesFromVideoCaptureOutput;
    int  _stillImageOutputRetainedBufferCountOverride;
    NSDictionary * _stillImageOutputsByPortType;
    BWMultiStreamCameraSourceNode * _superWideSourceNode;
    NSMutableArray * _synchronizerNodes;
    BWMultiStreamCameraSourceNode * _telephotoSourceNode;
    bool  _useCaptureOutputForPreview;
    NSDictionary * _videoCaptureOutputsArrayBySourceDeviceType;
    NSDictionary * _visionDataOutputsBySourceDeviceType;
}

@property (nonatomic, readonly) BWFigVideoCaptureDevice *captureDevice;
@property (nonatomic, readonly) struct OpaqueFigCaptureSource { }*captureSource;
@property (nonatomic, readonly) FigCaptureSourceDepthDataFormat *captureSourceDepthDataFormat;
@property (nonatomic, readonly) FigCaptureSourceVideoFormat *captureSourceVideoFormat;
@property (nonatomic, readonly) struct OpaqueCMClock { }*clock;
@property (nonatomic) <BWDetectedFacesFilterDelegate> *faceFilteringDelegate;
@property (nonatomic, readonly) bool hardwareDepthFilteringEnabled;
@property (nonatomic) bool keepISPStreamingWhenStopping;
@property (nonatomic) struct OpaqueCMClock { }*masterClock;
@property (nonatomic, readonly) int motionAttachmentsSource;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } overscanRect;
@property (nonatomic, readonly) BWNodeOutput *pointCloudOutput;
@property (nonatomic, readonly) NSArray *portTypesWithGeometricDistortionCorrectionOnStillImageOutputEnabled;
@property (nonatomic, readonly) NSArray *portTypesWithGeometricDistortionCorrectionOnStreamingOutputsEnabled;
@property (nonatomic, readonly) bool requiresMasterClock;
@property (nonatomic, readonly) BWNodeOutput *sourceFormatReferenceOutput;
@property (nonatomic, readonly) BWMultiStreamCameraSourceNode *sourceNode;
@property (nonatomic, readonly) bool stillImageOutputDerivesFromVideoCaptureOutput;
@property (nonatomic) int stillImageOutputRetainedBufferCountOverride;
@property (nonatomic, readonly) NSDictionary *stillImageOutputsByPortType;
@property (nonatomic, readonly) struct FigCaptureVideoTransform { bool x1; int x2; struct { int x_3_1_1; int x_3_1_2; } x3; } videoCaptureOutputTransform;
@property (nonatomic, readonly) NSDictionary *videoOutputColorInfo;

+ (void)initialize;

- (id)_addCrossOverNodeToGraph:(id)arg1 inputs:(id)arg2 mediaType:(unsigned int)arg3 name:(id)arg4 outErr:(int*)arg5;
- (int)_addDepthFromInfraredSynchronizer:(id)arg1 previewOutputsBySourceDeviceType:(id)arg2 pipelineConfiguration:(id)arg3 graph:(id)arg4 sourceDeviceType:(int)arg5;
- (int)_addOverCaptureDepthSynchronizerForOutputs:(id*)arg1 pipelineConfiguration:(id)arg2 graph:(id)arg3;
- (id)_addOverCaptureSourcePipelineToGraph:(id)arg1 upstreamVideoCaptureOutputsBySourceDeviceType:(id)arg2 depthEnabled:(bool)arg3 forPreview:(bool)arg4 outErr:(int*)arg5;
- (int)_buildDetectedObjectsOutputNetwork:(id)arg1 pipelineConfiguration:(id)arg2 graph:(id)arg3;
- (int)_buildMultiStreamCameraSourcePipeline:(id)arg1 graph:(id)arg2 renderDelegate:(id)arg3;
- (int)_buildPreviewOutputNetwork:(id)arg1 pipelineConfiguration:(id)arg2 graph:(id)arg3;
- (int)_buildVideoCaptureOutputNetwork:(id)arg1 previewOutputsBySourceDeviceType:(id)arg2 stillImageOutputsByPortType:(id)arg3 pipelineConfiguration:(id)arg4 graph:(id)arg5;
- (int)_insertCrossOverAndOverCaptureNodesOnOutputsBySourceDeviceType:(id)arg1 connectionConfigurations:(id)arg2 pipelineConfiguration:(id)arg3 graph:(id)arg4 outputNetworkType:(int)arg5;
- (int)_rerouteDetectedObjectsOutputsForSourcesWithCinematicFramingEnabled:(id)arg1 graph:(id)arg2;
- (int)allocateSharedBufferPools;
- (id)captureDevice;
- (struct OpaqueFigCaptureSource { }*)captureSource;
- (id)captureSourceDepthDataFormat;
- (id)captureSourceVideoFormat;
- (struct OpaqueCMClock { }*)clock;
- (void)dealloc;
- (id)detectedObjectsOutputForSourceDeviceType:(int)arg1;
- (id)faceFilteringDelegate;
- (void)hackRetainedBufferCountsForDualStreamSources;
- (bool)hardwareDepthFilteringEnabled;
- (id)initWithConfiguration:(id)arg1 captureDevice:(id)arg2 graph:(id)arg3 name:(id)arg4 renderDelegate:(id)arg5;
- (bool)keepISPStreamingWhenStopping;
- (void)logCameraStreamingInformationToAggd:(long long)arg1 applicationID:(id)arg2;
- (struct OpaqueCMClock { }*)masterClock;
- (int)motionAttachmentsSource;
- (bool)newConfigurationRequiresStreamRestart:(id)arg1;
- (id)nextVideoCaptureOutputForSourceDeviceType:(int)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overscanRect;
- (id)pointCloudOutput;
- (id)portTypesWithGeometricDistortionCorrectionOnStillImageOutputEnabled;
- (id)portTypesWithGeometricDistortionCorrectionOnStreamingOutputsEnabled;
- (int)prepareForStillImageCaptureWithStillImageOutputRetainedBufferCountOverride:(int)arg1 clientBracketCount:(int)arg2 enableSushiRawAttachmentOption:(bool)arg3;
- (id)previewOutputForSourceDeviceType:(int)arg1;
- (bool)requiresMasterClock;
- (void)setFaceFilteringDelegate:(id)arg1;
- (void)setKeepISPStreamingWhenStopping:(bool)arg1;
- (void)setMasterClock:(struct OpaqueCMClock { }*)arg1;
- (void)setPreviewShift:(struct CGPoint { double x1; double x2; })arg1 previewScaleFactor:(float)arg2 forPortType:(id)arg3;
- (void)setStillImageOutputRetainedBufferCountOverride:(int)arg1;
- (void)setStreamsSuspendedBySourceDeviceType:(id)arg1;
- (id)sourceFormatReferenceOutput;
- (id)sourceNode;
- (bool)stillImageOutputDerivesFromVideoCaptureOutput;
- (int)stillImageOutputRetainedBufferCountOverride;
- (id)stillImageOutputsByPortType;
- (struct FigCaptureVideoTransform { bool x1; int x2; struct { int x_3_1_1; int x_3_1_2; } x3; })videoCaptureOutputTransform;
- (id)videoOutputColorInfo;
- (id)visionDataOutputForSourceDeviceType:(int)arg1;

@end
