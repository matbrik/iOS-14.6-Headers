/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebAVPlayerViewControllerDelegate : NSObject <AVPlayerViewControllerDelegate_WebKitOnly> {
    struct WeakPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::EmptyCounter> { 
        struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { 
            struct WeakPtrImpl<WTF::EmptyCounter> {} *m_ptr; 
        } m_impl; 
    }  _fullscreenInterface;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property /* Warning: unhandled struct encoding: '{VideoFullscreenInterfaceAVKit=^^?^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int' */ struct *fullscreenInterface; /* unknown property attribute:  WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}BBBBBBBBBBBBBBBBBBBBBBBBBBBB} */
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct VideoFullscreenInterfaceAVKit { int (**x1)(); int (**x2)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_3_1_1; } x3; struct WeakPtrFactory<WebCore::VideoFullscreenInterfaceAVKit, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { struct WeakPtrImpl<WTF::EmptyCounter> {} *x_1_2_1; } x_4_1_1; } x4; struct Mode { unsigned int x_5_1_1; } x5; struct Mode { unsigned int x_6_1_1; } x6; struct Ref<WebCore::PlaybackSessionInterfaceAVKit, WTF::RawPtrTraits<WebCore::PlaybackSessionInterfaceAVKit>> { struct PlaybackSessionInterfaceAVKit {} *x_7_1_1; } x7; struct RetainPtr<WebAVPlayerViewControllerDelegate> { void *x_8_1_1; } x8; struct RetainPtr<WebAVPlayerViewController> { void *x_9_1_1; } x9; struct VideoFullscreenModel {} *x10; struct VideoFullscreenChangeObserver {} *x11; struct RetainPtr<UIWindow> { void *x_12_1_1; } x12; }*)fullscreenInterface;
- (void)playerViewController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)playerViewController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg2;
- (bool)playerViewController:(id)arg1 shouldExitFullScreenWithReason:(long long)arg2;
- (void)playerViewControllerDidStartPictureInPicture:(id)arg1;
- (void)playerViewControllerDidStopPictureInPicture:(id)arg1;
- (bool)playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:(id)arg1;
- (bool)playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:(id)arg1;
- (void)playerViewControllerWillStartPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStopPictureInPicture:(id)arg1;
- (void)setFullscreenInterface:(struct VideoFullscreenInterfaceAVKit { int (**x1)(); int (**x2)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_3_1_1; } x3; struct WeakPtrFactory<WebCore::VideoFullscreenInterfaceAVKit, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { struct WeakPtrImpl<WTF::EmptyCounter> {} *x_1_2_1; } x_4_1_1; } x4; struct Mode { unsigned int x_5_1_1; } x5; struct Mode { unsigned int x_6_1_1; } x6; struct Ref<WebCore::PlaybackSessionInterfaceAVKit, WTF::RawPtrTraits<WebCore::PlaybackSessionInterfaceAVKit>> { struct PlaybackSessionInterfaceAVKit {} *x_7_1_1; } x7; struct RetainPtr<WebAVPlayerViewControllerDelegate> { void *x_8_1_1; } x8; struct RetainPtr<WebAVPlayerViewController> { void *x_9_1_1; } x9; struct VideoFullscreenModel {} *x10; struct VideoFullscreenChangeObserver {} *x11; struct RetainPtr<UIWindow> { void *x_12_1_1; } x12; }*)arg1;

@end
