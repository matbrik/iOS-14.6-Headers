/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/HealthKit.framework/HealthKit
 */

@interface HKOAuth2Credential : NSObject <NSCopying, NSSecureCoding> {
    NSString * _accessToken;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _accessTokenLock;
    NSDate * _expiration;
    NSUUID * _identifier;
    NSString * _requestedScopeString;
    NSArray * _scope;
}

@property (nonatomic, readonly, copy) NSDate *expiration;
@property (getter=isExpired, nonatomic, readonly) bool expired;
@property (nonatomic, readonly, copy) NSUUID *identifier;
@property (nonatomic, readonly, copy) NSString *requestedScopeString;
@property (nonatomic, readonly, copy) NSArray *scope;
@property (nonatomic, readonly, copy) NSString *scopeString;

+ (id)_scopeStringFromScope:(id)arg1;
+ (id)expirationFromTimeInterval:(double)arg1;
+ (id)scopeFromScopeString:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_accessTokenIdentifier;
- (id)_commonInitWithIdentifier:(id)arg1 requestedScopeString:(id)arg2 expiration:(id)arg3 scope:(id)arg4;
- (id)_refreshTokenIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)deleteTokensWithError:(id*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)expiration;
- (id)fetchAccessTokenWithError:(id*)arg1;
- (id)fetchRefreshTokenWithError:(id*)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 requestedScopeString:(id)arg2 expiration:(id)arg3 scope:(id)arg4;
- (id)initWithIdentifier:(id)arg1 requestedScopeString:(id)arg2 expiration:(id)arg3 scopeString:(id)arg4;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToCredential:(id)arg1 epsilonExpiration:(double)arg2;
- (bool)isExpired;
- (id)requestedScopeString;
- (id)scope;
- (id)scopeString;
- (bool)storeAccessToken:(id)arg1 error:(id*)arg2;
- (bool)storeRefreshToken:(id)arg1 error:(id*)arg2;

@end
