/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDUnassociatedAppleMediaAccessory : HMDUnassociatedMediaAccessory <HMFLogging> {
    bool  _currentAccessory;
    HMDDevice * _device;
    HMDHomeKitVersion * _minimumRequiredPairingSoftwareVersion;
    NSString * _model;
    HMDCapabilityFlags * _requiredPairingCapbilities;
    NSString * _serialNumber;
    HMFSoftwareVersion * _softwareVersion;
    unsigned long long  _supportedStereoPairVersions;
}

@property (getter=isCurrentAccessory, nonatomic) bool currentAccessory;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) HMDDevice *device;
@property (readonly) unsigned long long hash;
@property (retain) HMDHomeKitVersion *minimumRequiredPairingSoftwareVersion;
@property (copy) NSString *model;
@property (readonly) HMDCapabilityFlags *requiredPairingCapbilities;
@property (copy) NSString *serialNumber;
@property (copy) HMFSoftwareVersion *softwareVersion;
@property (readonly) Class superclass;
@property unsigned long long supportedStereoPairVersions;

+ (id)logCategory;
+ (id)modelForChangeType:(unsigned long long)arg1 uuid:(id)arg2 parentUUID:(id)arg3;
+ (id)namespace;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)addTransactionForHome:(id)arg1 configurationAppIdentifier:(id)arg2;
- (bool)canPairGivenCapabilities:(unsigned long long)arg1;
- (id)descriptionWithPointer:(bool)arg1 additionalDescription:(id)arg2;
- (id)device;
- (id)dumpDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 category:(id)arg3 messageDispatcher:(id)arg4;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 category:(id)arg3 requiredPairingCapabilities:(unsigned long long)arg4 messageDispatcher:(id)arg5;
- (bool)isCurrentAccessory;
- (id)logIdentifier;
- (id)minimumRequiredPairingSoftwareVersion;
- (id)model;
- (id)requiredPairingCapbilities;
- (id)serialNumber;
- (void)setCurrentAccessory:(bool)arg1;
- (void)setDevice:(id)arg1;
- (void)setMinimumRequiredPairingSoftwareVersion:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSoftwareVersion:(id)arg1;
- (void)setSupportedStereoPairVersions:(unsigned long long)arg1;
- (id)softwareVersion;
- (unsigned long long)supportedStereoPairVersions;

@end
