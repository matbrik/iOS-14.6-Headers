/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MediaControlsVolumeBackgroundViewController : CCUISliderModuleBackgroundViewController <MediaControlsVolumeControllerObserver, UIGestureRecognizerDelegate> {
    MediaControlsBluetoothListeningModeButton * _primaryBluetoothListeningModeButton;
    MediaControlsRouteView * _primaryRouteView;
    NSTimer * _primaryUpdateTimer;
    MediaControlsBluetoothListeningModeButton * _secondaryBluetoothListeningModeButton;
    MediaControlsRouteView * _secondaryRouteView;
    NSTimer * _secondaryUpdateTimer;
    MediaControlsExpandableButton * _spatialExpandableButton;
    MediaControlsVolumeController * _volumeController;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MediaControlsBluetoothListeningModeButton *primaryBluetoothListeningModeButton;
@property (nonatomic, retain) MediaControlsRouteView *primaryRouteView;
@property (nonatomic, retain) NSTimer *primaryUpdateTimer;
@property (nonatomic, retain) MediaControlsBluetoothListeningModeButton *secondaryBluetoothListeningModeButton;
@property (nonatomic, retain) MediaControlsRouteView *secondaryRouteView;
@property (nonatomic, retain) NSTimer *secondaryUpdateTimer;
@property (nonatomic, retain) MediaControlsExpandableButton *spatialExpandableButton;
@property (readonly) Class superclass;
@property (nonatomic, retain) MediaControlsVolumeController *volumeController;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_configureOptionsButton:(id)arg1 forRouteType:(long long)arg2;
- (void)_configurePrimaryOptionsButtonIfNeeded;
- (void)_configureRouteView:(id)arg1 forRouteType:(long long)arg2;
- (void)_configureRouteViews;
- (void)_configureSecondaryOptionsButtonIfNeeded;
- (void)_configureSpacialButtonIfNeeded;
- (double)_horizontalPadding;
- (void)_performLayoutWithAnimation:(id /* block */)arg1;
- (void)_springAnimate:(id /* block */)arg1;
- (void)_updateButton:(id)arg1 routeType:(long long)arg2;
- (void)_updateButtonAxis;
- (void)_updateVisibility;
- (double)_verticalPadding;
- (void)collapseBluetoothListeningModeButtons;
- (void)didTapPrimaryBluetoothListeningModeButton:(id)arg1;
- (void)didTapSecondaryBluetoothListeningModeButton:(id)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)mediaControlsVolumeController:(id)arg1 didChangeHeadTrackedSpatialAudioEnabled:(bool)arg2;
- (void)mediaControlsVolumeController:(id)arg1 didChangeVolumeAvailable:(bool)arg2 effectiveVolume:(float)arg3 forRoute:(long long)arg4;
- (void)mediaControlsVolumeController:(id)arg1 didUpdateSplitRoute:(bool)arg2;
- (id)primaryBluetoothListeningModeButton;
- (void)primaryBluetoothListeningModeButtonDidChangeValue:(id)arg1;
- (id)primaryRouteView;
- (id)primaryUpdateTimer;
- (id)secondaryBluetoothListeningModeButton;
- (void)secondaryBluetoothListeningModeButtonDidChangeValue:(id)arg1;
- (id)secondaryRouteView;
- (id)secondaryUpdateTimer;
- (void)setPrimaryBluetoothListeningModeButton:(id)arg1;
- (void)setPrimaryRouteView:(id)arg1;
- (void)setPrimaryUpdateTimer:(id)arg1;
- (void)setSecondaryBluetoothListeningModeButton:(id)arg1;
- (void)setSecondaryRouteView:(id)arg1;
- (void)setSecondaryUpdateTimer:(id)arg1;
- (void)setSpatialExpandableButton:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (id)spatialExpandableButton;
- (void)spatialExpandableButtonDidChangeValue:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)volumeController;

@end
