/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface JFXEffectEditingUtilities : NSObject

+ (void)JFX_ApplyTextFlipIfNeeded:(id)arg1 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 orientationState:(id)arg3;
+ (long long)JFX_adjustOrientationIfLandscapeIPadStreaming:(long long)arg1;
+ (unsigned long long)JFX_bestTrackedInsertionPointIndexForOverlay:(id)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 insertionPoints:(id)arg3 startingIndex:(unsigned long long)arg4 visibilityThreshold:(double)arg5 scaleRelativeToCenterSquare:(double)arg6 withARMetadata:(id)arg7 transformAnimation:(id)arg8 interfaceOrientation:(long long)arg9;
+ (struct CGPoint { double x1; double x2; })JFX_closeButtonInsetForEffect:(id)arg1 viewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })JFX_compositionBounds;
+ (struct CGPoint { double x1; double x2; })JFX_convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromSize:(struct CGSize { double x1; double x2; })arg2 toSize:(struct CGSize { double x1; double x2; })arg3 invertY:(bool)arg4;
+ (id)JFX_hitTestOverlays:(id)arg1 atNormalizedPoint:(struct CGPoint { double x1; double x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 forcePosterFrame:(bool)arg4 adjustForMinimumSize:(bool)arg5 normalizedMinimumSize:(struct { double x1; double x2; })arg6;
+ (struct CGPoint { double x1; double x2; })JFX_originAfterApplyingCenteredCropOnPoint:(struct CGPoint { double x1; double x2; })arg1 outerSize:(struct CGSize { double x1; double x2; })arg2 innerSize:(struct CGSize { double x1; double x2; })arg3;
+ (void)JFX_setImageSequencePathToDownloadedAssetsForOverlay:(id)arg1;
+ (void)JFX_setTextRenderingEnabledForEffect:(id)arg1 value:(bool)arg2;
+ (void)addTransformToEffect:(id)arg1 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 relativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 restrictToBounds:(bool)arg5 orientationState:(id)arg6;
+ (void)applyCameraTrackingTransformToOverlay:(id)arg1 withARMetadata:(id)arg2 forDisplayingMediaAtInterfaceOrientation:(long long)arg3;
+ (void)beginTextEditingForEffect:(id)arg1;
+ (bool)canEditTextForEffect:(id)arg1;
+ (void)configureOverlayForInsertion:(id)arg1 atNormalizedPoint:(struct CGPoint { double x1; double x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 isPositionRelativeToCenterSquare:(bool)arg4 isPositionRelativeToFace:(bool)arg5 scaleRelativeToCenterSquare:(double)arg6 rotationAngle:(double)arg7 applyTracking:(bool)arg8 autoDetectTrackingType:(bool)arg9 withARMetadata:(id)arg10 mediaInterfaceOrientationForDisplay:(long long)arg11 previewViewCorrectionTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg12 transformAnimation:(id)arg13 orientationState:(id)arg14;
+ (void)configureOverlayForInsertion:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 rotationAngle:(double)arg4 applyTracking:(bool)arg5 autoDetectTrackingType:(bool)arg6 withARMetadata:(id)arg7 mediaInterfaceOrientationForDisplay:(long long)arg8 previewViewCorrectionTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg9 transformAnimation:(id)arg10 orientationState:(id)arg11;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentFaceRectRelativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 orientationState:(id)arg3 transformAnimation:(id)arg4;
+ (void)disableAnimationForEffects:(id)arg1;
+ (void)enableAnimationForEffects:(id)arg1 animationStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
+ (void)endTextEditingForEffect:(id)arg1;
+ (id)hitTestOverlays:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 relativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 adjustForMinimumSize:(bool)arg5 normalizedMinimumSize:(struct { double x1; double x2; })arg6;
+ (id)hitTestOverlaysAtPosterFrame:(id)arg1 atNormalizedPoint:(struct CGPoint { double x1; double x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 adjustForMinimumSize:(bool)arg4 normalizedMinimumSize:(struct { double x1; double x2; })arg5;
+ (id)hitTestOverlaysAtPosterFrame:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 relativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 adjustForMinimumSize:(bool)arg5 normalizedMinimumSize:(struct { double x1; double x2; })arg6;
+ (unsigned long long)insertionPointIndex;
+ (bool)isFaceTrackingDataAvailable;
+ (bool)isStreamingMode;
+ (bool)makeOverlayTrackedMaintainingAppearance:(id)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 newTrackingType:(long long)arg3 arMetadata:(id)arg4 mediaInterfaceOrientationForDisplay:(long long)arg5 orientationState:(id)arg6;
+ (unsigned long long)maximumTextLengthForEffect:(id)arg1;
+ (id)newTextEditingPropertiesForEffect:(id)arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 withNewText:(id)arg4;
+ (id)newTextEditingPropertiesForEffect:(id)arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 withNewText:(id)arg4 moveBeforeScalingToAvoidKeyboard:(bool)arg5;
+ (unsigned long long)nextInsertionPointIndex;
+ (struct CGPoint { double x1; double x2; })nextNormalizedInsertionPointForOverlay:(id)arg1 scaleRelativeToCenterSquare:(double)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 applyTracking:(bool)arg4 withARMetadata:(id)arg5 transformAnimation:(id)arg6 interfaceOrientation:(long long)arg7;
+ (id)normalizedInsertionPoints;
+ (struct CGPoint { double x1; double x2; })removeButtonPositionForEffect:(id)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 atPosterFrameRelativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 viewCorrectionTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg4;
+ (void)setInsertionPointIndex:(unsigned long long)arg1;
+ (void)setStreamingMode:(bool)arg1;
+ (bool)shouldDisableTextOutlineWhileEditingTextForEffectID:(id)arg1;
+ (bool)shouldRenderTextWithMotionWhileEditingTextForEffectID:(id)arg1;
+ (bool)shouldUseFullTransformWhileEditingTextForEffectID:(id)arg1;
+ (struct CGPoint { double x1; double x2; })spacingBetweenCenterPointOfEffect:(id)arg1 point:(struct CGPoint { double x1; double x2; })arg2 relativeToBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4;
+ (void)suspendOverlayTrackingMaintainingAppearance:(id)arg1 forViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 arMetadata:(id)arg4 mediaInterfaceOrientationForDisplay:(long long)arg5;
+ (id)textForEffect:(id)arg1;
+ (id)trackedNormalizedInsertionPoints;
+ (long long)trackingTypeForOverlayPointIntersectionWithFaceRect:(struct CGPoint { double x1; double x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 defaultTrackingType:(long long)arg4 faceAnchor:(id)arg5 transformAnimation:(id)arg6 interfaceOrientation:(long long)arg7;
+ (void)updateEffectText:(id)arg1 newText:(id)arg2;
+ (void)updateEffectToDefaultTextIfEmpty:(id)arg1;

@end
