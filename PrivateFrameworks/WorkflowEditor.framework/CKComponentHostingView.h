/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowEditor.framework/WorkflowEditor
 */

@interface CKComponentHostingView : UIView <CKComponentDebugReflowListener, CKComponentStateListener> {
    struct CKComponentBoundsAnimation { 
        double duration; 
        double delay; 
        unsigned long long mode; 
        unsigned long long options; 
        double springDampingRatio; 
        double springInitialVelocity; 
    }  _boundsAnimation;
    CKComponent * _component;
    bool  _componentNeedsUpdate;
    Class  _componentProvider;
    UIView * _containerView;
    <CKComponentHostingViewDelegate> * _delegate;
    bool  _isMountingComponent;
    bool  _isSynchronouslyUpdatingComponent;
    NSSet * _mountedComponents;
    struct CKComponentLayout { 
        CKComponent *component; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
        struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> { 
            struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {} *__ptr_; 
            struct __shared_weak_count {} *__cntrl_; 
        } children; 
        NSDictionary *extra; 
    }  _mountedLayout;
    struct CKComponentHostingViewInputs { 
        CKComponentScopeRoot *scopeRoot; 
        <NSObject> *model; 
        <NSObject> *context; 
        struct unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>="__table_"{__hash_table<std::__1::__hash_value_type<int, id (^)(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id (^)(id)>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> {} stateUpdates; 
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *> *>>="__value_"Q {} __value_; 
    }  _pendingInputs;
    unsigned long long  _requestedUpdateMode;
    bool  _scheduledAsynchronousComponentUpdate;
    <CKComponentSizeRangeProviding> * _sizeRangeProvider;
}

@property (nonatomic, readonly) UIView *containerView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKComponentHostingViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_applyResult:(const struct CKBuildComponentResult { id x1; id x2; struct CKComponentBoundsAnimation { double x_3_1_1; double x_3_1_2; unsigned long long x_3_1_3; unsigned long long x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; }*)arg1;
- (void)_asynchronouslyUpdateComponentIfNeeded;
- (void)_scheduleAsynchronousUpdate;
- (void)_setNeedsUpdateWithMode:(unsigned long long)arg1;
- (void)_synchronouslyUpdateComponentIfNeeded;
- (void)componentScopeHandleWithIdentifier:(int)arg1 rootIdentifier:(int)arg2 didReceiveStateUpdate:(id /* block */)arg3 mode:(unsigned long long)arg4;
- (id)containerView;
- (void)dealloc;
- (id)delegate;
- (void)didReceiveReflowComponentsRequest;
- (id)initWithComponentProvider:(Class)arg1 sizeRangeProvider:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (const struct CKComponentLayout { id x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> { struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; }*)mountedLayout;
- (void)setDelegate:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)updateContext:(id)arg1 mode:(unsigned long long)arg2;
- (void)updateModel:(id)arg1 mode:(unsigned long long)arg2;

@end
