/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBInCallPresentationManager : NSObject <SBApplicationHosting, SBInCallPresentationRequestServerDelegate, SBInCallPresentationSessionDelegate> {
    SBApplicationController * _applicationController;
    SBInCallBannerAuthority * _bannerAuthority;
    NSMutableDictionary * _clientIdentifierToPresentationSession;
    <SBInCallPresentationManagerDelegate> * _delegate;
    NSMutableArray * _pendingInvalidationSessions;
    SBInCallPresentationRequestServer * _presentationRequestServer;
    SBMainDisplaySceneManager * _sceneManager;
    bool  _supportsHandlingUILockForWindowedAccessoryAttach;
}

@property (nonatomic, readonly) SBInCallPresentationSession *_lastPresentationSession;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBInCallPresentationManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool disallowsLockHardwareButtonDoublePress;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SBMainDisplaySceneManager *sceneManager;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsHandlingDeviceLock;
@property (nonatomic, readonly) bool supportsHandlingUILockForWindowedAccessoryAttach;

+ (bool)isSpecializedAPISupported;

- (void).cxx_destruct;
- (void)_dismissAllPresentations;
- (void)_dismissClientWithIdentifier:(id)arg1 animated:(bool)arg2 shouldFinalizeSceneDestruction:(bool)arg3 shouldInvalidate:(bool)arg4 analyticsSource:(id)arg5 completion:(id /* block */)arg6;
- (id)_hostedPresentationSessions;
- (id)_lastPresentationSession;
- (id)_newClientPresentationSessionWithSceneHandle:(id)arg1;
- (id)_sessionForSceneWithIdentifier:(id)arg1;
- (bool)canHostAnApp;
- (void)conformsToSBApplicationHosting;
- (id)delegate;
- (bool)disallowsLockHardwareButtonDoublePress;
- (void)handleAccessoryAttachWithCompletion:(id /* block */)arg1;
- (void)handleDeviceLockFromSource:(int)arg1;
- (void)handlePresentationForActivityContinuationIdentifier:(id)arg1;
- (id)hostedAppSceneHandle;
- (id)hostedAppSceneHandles;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;
- (void)inCallClientPresentationSession:(id)arg1 callConnectedStatusChangedForPresentableViewController:(id)arg2;
- (void)inCallClientPresentationSession:(id)arg1 handleDestroySceneActionWithReason:(long long)arg2 analyticsSource:(id)arg3 completion:(id /* block */)arg4;
- (long long)inCallClientPresentationSessionInterfaceOrientationForBannerPresentation:(id)arg1;
- (long long)inCallClientPresentationSessionInterfaceOrientationForTransientOverlayPresentation:(id)arg1;
- (void)inCallClientPresentationSessionSceneWasDestroyed:(id)arg1;
- (void)inCallPresentationRequestServer:(id)arg1 clientWithIdentifier:(id)arg2 requestsPresentationWithConfiguration:(id)arg3 completion:(id /* block */)arg4;
- (void)inCallPresentationRequestServer:(id)arg1 clientWithIdentifierDidInvalidate:(id)arg2;
- (id)initWithSceneManager:(id)arg1 applicationController:(id)arg2 bannerManager:(id)arg3;
- (bool)isHostingAnApp;
- (void)reactivateInCallForReason:(long long)arg1;
- (id)sceneManager;
- (void)setDelegate:(id)arg1;
- (bool)supportsBecomingVisibleWhenUnlockingFromSource:(int)arg1 wakingDisplay:(bool)arg2;
- (bool)supportsHandlingDeviceLock;
- (bool)supportsHandlingUILockForWindowedAccessoryAttach;

@end
