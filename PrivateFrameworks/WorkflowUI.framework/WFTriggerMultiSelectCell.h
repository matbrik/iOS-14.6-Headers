/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowUI.framework/WorkflowUI
 */

@interface WFTriggerMultiSelectCell : UITableViewCell {
    <WFTriggerMultiSelectCellDelegate> * _delegate;
    UIImpactFeedbackGenerator * _feedbackGenerator;
    WFTriggerOptionSelectionView * _leftView;
    bool  _leftViewSelected;
    WFTriggerOptionSelectionView * _rightView;
    bool  _rightViewSelected;
    UIStackView * _stackView;
}

@property (nonatomic) <WFTriggerMultiSelectCellDelegate> *delegate;
@property (nonatomic, readonly) UIImpactFeedbackGenerator *feedbackGenerator;
@property (nonatomic, readonly) WFTriggerOptionSelectionView *leftView;
@property (getter=isLeftViewSelected, nonatomic) bool leftViewSelected;
@property (nonatomic, readonly) WFTriggerOptionSelectionView *rightView;
@property (getter=isRightViewSelected, nonatomic) bool rightViewSelected;
@property (nonatomic, readonly) UIStackView *stackView;

- (void).cxx_destruct;
- (void)configureWithLeftGlyph:(id)arg1 leftTitle:(id)arg2 rightGlyph:(id)arg3 rightTitle:(id)arg4;
- (id)delegate;
- (id)feedbackGenerator;
- (void)handleMultiSelectViewPressWithRecognizer:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isLeftViewSelected;
- (bool)isRightViewSelected;
- (id)leftView;
- (bool)leftViewSelected;
- (void)prepareForReuse;
- (id)rightView;
- (bool)rightViewSelected;
- (void)setDelegate:(id)arg1;
- (void)setLeftViewSelected:(bool)arg1;
- (void)setRightViewSelected:(bool)arg1;
- (id)stackView;

@end
