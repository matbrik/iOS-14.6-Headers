/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreServices.framework/CoreServices
 */

@interface _LSCanOpenURLManager : NSObject {
    NSMutableDictionary * _canOpenURLsMap;
    NSObject<OS_dispatch_queue> * _canOpenURLsMapQueue;
    int  _saveFlag;
}

+ (struct BindingEvaluator { id x1; id x2; id x3; id x4; id x5; id x6; struct LSVersionNumber { unsigned char x_7_1_1[32]; } x7; id x8; bool x9; unsigned long long x10; unsigned int x11; unsigned int x12; struct vector<LSBundleClass, std::__1::allocator<LSBundleClass>> { unsigned int *x_13_1_1; unsigned int *x_13_1_2; struct __compressed_pair<LSBundleClass *, std::__1::allocator<LSBundleClass>> { unsigned int *x_3_2_1; } x_13_1_3; } x13; id /* block */ x14; id x15; id /* block */ x16; id x17; })bindingEvaluatorForScheme:(id)arg1;
+ (id)queryForApplicationsAvailableForOpeningURL:(id)arg1;
+ (id)sharedManager;

- (void).cxx_destruct;
- (bool)canOpenURL:(id)arg1 publicSchemes:(bool)arg2 privateSchemes:(bool)arg3 XPCConnection:(id)arg4 error:(id*)arg5;
- (id)copySchemesMap;
- (bool)findApplicationBundleID:(unsigned int*)arg1 bundleData:(const struct LSBundleData {}**)arg2 context:(struct LSContext { id x1; }*)arg3 forXPCConnection:(id)arg4;
- (void)getIsURL:(id)arg1 alwaysCheckable:(bool*)arg2 hasHandler:(bool*)arg3;
- (id)init;
- (bool)internalCanOpenURL:(id)arg1 publicSchemes:(bool)arg2 privateSchemes:(bool)arg3 XPCConnection:(id)arg4 error:(id*)arg5;
- (bool)isBundleID:(unsigned int)arg1 bundleData:(const struct LSBundleData { struct LSBundleBaseData { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; int x_1_1_6; struct LSVersionNumber { unsigned char x_7_2_1[32]; } x_1_1_7; struct LSVersionNumber { unsigned char x_8_2_1[32]; } x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; unsigned int x_1_1_16; unsigned int x_1_1_17; unsigned int x_1_1_18; unsigned int x_1_1_19; unsigned int x_1_1_20; unsigned char x_1_1_21; unsigned char x_1_1_22; unsigned int x_1_1_23; unsigned short x_1_1_24; unsigned int x_1_1_25; } x1; unsigned int x2; unsigned long long x3; unsigned int x4; unsigned int x5; unsigned char x6; struct LSBundleMoreFlags { unsigned int x_7_1_1 : 1; unsigned int x_7_1_2 : 1; unsigned int x_7_1_3 : 1; unsigned int x_7_1_4 : 1; unsigned int x_7_1_5 : 1; unsigned int x_7_1_6 : 1; unsigned int x_7_1_7 : 1; unsigned int x_7_1_8 : 1; } x7; unsigned int x8; }*)arg2 context:(struct LSContext { id x1; }*)arg3 allowedToCheckScheme:(id)arg4 error:(id*)arg5;
- (bool)isXPCConnection:(id)arg1 allowedToCheckScheme:(id)arg2 error:(id*)arg3;
- (bool)legacy_isBundleID:(unsigned int)arg1 bundleData:(const struct LSBundleData { struct LSBundleBaseData { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; int x_1_1_6; struct LSVersionNumber { unsigned char x_7_2_1[32]; } x_1_1_7; struct LSVersionNumber { unsigned char x_8_2_1[32]; } x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; unsigned int x_1_1_16; unsigned int x_1_1_17; unsigned int x_1_1_18; unsigned int x_1_1_19; unsigned int x_1_1_20; unsigned char x_1_1_21; unsigned char x_1_1_22; unsigned int x_1_1_23; unsigned short x_1_1_24; unsigned int x_1_1_25; } x1; unsigned int x2; unsigned long long x3; unsigned int x4; unsigned int x5; unsigned char x6; struct LSBundleMoreFlags { unsigned int x_7_1_1 : 1; unsigned int x_7_1_2 : 1; unsigned int x_7_1_3 : 1; unsigned int x_7_1_4 : 1; unsigned int x_7_1_5 : 1; unsigned int x_7_1_6 : 1; unsigned int x_7_1_7 : 1; unsigned int x_7_1_8 : 1; } x7; unsigned int x8; }*)arg2 context:(struct LSContext { id x1; }*)arg3 allowedToCheckScheme:(id)arg4 error:(id*)arg5;
- (void)resetSchemeQueryLimitForApplicationWithIdentifier:(id)arg1;
- (long long)schemeTypeOfScheme:(id)arg1;
- (void)writeSchemesMap;

@end
