/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKToolPicker : NSObject <PKPaletteViewDelegate, PKPaletteViewInteractionDelegate> {
    <PKPaletteViewDelegate> * __additionalPaletteViewDelegate;
    bool  __animatingToVisible;
    <PKPaletteViewAnnotationDelegate> * __annotationDelegate;
    <PKToolPickerPrivateDelegate> * __delegate;
    NSHashTable * __firstRespondersForVisibleUI;
    bool  __inputViewVisible;
    PKPaletteViewInteraction * __interaction;
    NSHashTable * __observers;
    bool  __paletteWasCompact;
    bool  __pencilInteractionEnabledWhenNotVisible;
    UIViewController * __presentationController;
    bool  __showsHandwritingTool;
    NSArray * __toolIdentifiers;
    NSArray * __toolProperties;
    bool  __wantsClearBackgroundColorInCompactSize;
    long long  _colorUserInterfaceStyle;
    bool  _didCalculateVisibleBeforeResponderChanges;
    long long  _overrideUserInterfaceStyle;
    bool  _rulerActive;
    PKTool * _selectedTool;
    bool  _showsDrawingPolicyControls;
    NSString * _stateAutosaveName;
    bool  _wasVisibleBeforeResponderChanges;
}

@property (setter=_setAdditionalPaletteViewDelegate:, nonatomic) <PKPaletteViewDelegate> *_additionalPaletteViewDelegate;
@property (getter=_isAnimatingToVisible, nonatomic, readonly) bool _animatingToVisible;
@property (setter=_setAnnotationDelegate:, nonatomic) <PKPaletteViewAnnotationDelegate> *_annotationDelegate;
@property (getter=_isBackgroundMaterialUpdatingPaused, setter=_setBackgroundMaterialUpdatingPaused:, nonatomic) bool _backgroundMaterialUpdatingPaused;
@property (nonatomic) <PKToolPickerPrivateDelegate> *_delegate;
@property (nonatomic) bool _didCalculateVisibleBeforeResponderChanges;
@property (nonatomic, retain) NSHashTable *_firstRespondersForVisibleUI;
@property (getter=_isHandwritingToolSelected, nonatomic, readonly) bool _handwritingToolSelected;
@property (getter=_isInputViewVisible, setter=_setInputViewVisible:, nonatomic) bool _inputViewVisible;
@property (setter=_setInteraction:, nonatomic, retain) PKPaletteViewInteraction *_interaction;
@property (nonatomic, readonly) bool _interactionIsValid;
@property (nonatomic, retain) NSHashTable *_observers;
@property (nonatomic, readonly) PKPaletteHostView *_paletteHostView;
@property (nonatomic, readonly) PKDrawingPaletteView *_paletteView;
@property (nonatomic, readonly) NSString *_paletteViewStateRestorationDefaultsKey;
@property (nonatomic) bool _paletteWasCompact;
@property (getter=_isPencilInteractionEnabledWhenNotVisible, nonatomic) bool _pencilInteractionEnabledWhenNotVisible;
@property (setter=_setPresentationController:, nonatomic) UIViewController *_presentationController;
@property (setter=_setShowsHandwritingTool:, nonatomic) bool _showsHandwritingTool;
@property (nonatomic, retain) NSArray *_toolIdentifiers;
@property (nonatomic, retain) NSArray *_toolProperties;
@property (setter=_setWantsClearBackgroundColorInCompactSize:, nonatomic) bool _wantsClearBackgroundColorInCompactSize;
@property (nonatomic) bool _wasVisibleBeforeResponderChanges;
@property (nonatomic) long long colorUserInterfaceStyle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isVisible;
@property (nonatomic) long long overrideUserInterfaceStyle;
@property (getter=isRulerActive, nonatomic) bool rulerActive;
@property (nonatomic, retain) PKTool *selectedTool;
@property (nonatomic) bool showsDrawingPolicyControls;
@property (nonatomic, copy) NSString *stateAutosaveName;
@property (readonly) Class superclass;

+ (bool)_canShowHandwritingTool;
+ (bool)_internalClassWantsToolPicker:(id)arg1 visibleForResponder:(id)arg2;
+ (void)_setPrefersPencilOnlyDrawingForiWork:(bool)arg1;
+ (bool)_textInputWantsToolPickerVisible:(id)arg1 forFirstResponder:(id)arg2;
+ (id)_toolPickerForWindow:(id)arg1;
+ (id)_windowForToolPicker:(id)arg1;
+ (id)_windowSceneForToolPicker:(id)arg1;
+ (id)activeToolPickerForWindow:(id)arg1;
+ (bool)isActiveToolPickerVisibleForWindow:(id)arg1;
+ (id)sharedToolPickerForWindow:(id)arg1;

- (void).cxx_destruct;
- (id)_additionalPaletteViewDelegate;
- (id)_annotationDelegate;
- (id)_configuredPaletteViewInteractionForWindow:(id)arg1;
- (id)_currentFirstResponder;
- (id)_delegate;
- (bool)_didCalculateVisibleBeforeResponderChanges;
- (void)_enableTapInteractionForWindow:(id)arg1;
- (id)_firstRespondersForVisibleUI;
- (void)_hasSeenPencilPairingUIDidChange:(id)arg1;
- (id)_interaction;
- (bool)_interactionIsValid;
- (id)_internalClassesAcceptingFirstResponder;
- (bool)_isAnimatingToVisible;
- (bool)_isBackgroundMaterialUpdatingPaused;
- (bool)_isHandwritingToolSelected;
- (bool)_isInputViewVisible;
- (bool)_isPencilInteractionEnabledWhenNotVisible;
- (id)_observers;
- (id)_paletteHostView;
- (id)_paletteView;
- (id)_paletteViewStateRestorationDefaultsKey;
- (bool)_paletteWasCompact;
- (id)_presentationController;
- (void)_recognitionLocaleIdentifierDidChange:(id)arg1;
- (void)_restoreToolPickerState;
- (void)_savePaletteViewState;
- (void)_saveStateIfNecessary;
- (void)_setAdditionalPaletteViewDelegate:(id)arg1;
- (void)_setAnnotationDelegate:(id)arg1;
- (void)_setBackgroundMaterialUpdatingPaused:(bool)arg1;
- (void)_setInputViewVisible:(bool)arg1;
- (void)_setInteraction:(id)arg1;
- (void)_setPresentationController:(id)arg1;
- (void)_setSelectedTool:(id)arg1 saveOptions:(bool)arg2 updateUI:(bool)arg3;
- (void)_setShowsHandwritingTool:(bool)arg1;
- (void)_setVisibleInWindow:(id)arg1;
- (void)_setWantsClearBackgroundColorInCompactSize:(bool)arg1;
- (bool)_showsHandwritingTool;
- (void)_tellDelegateToHideToolPicker;
- (id)_toolIdentifiers;
- (id)_toolProperties;
- (void)_updatePaletteTraitCollection:(id)arg1;
- (void)_updatePaletteUserInterfaceStyle:(long long)arg1;
- (void)_updateToolPickerVisibility;
- (void)_updateUI;
- (void)_updateVisibilityForFirstResponder:(id)arg1;
- (bool)_wantsClearBackgroundColorInCompactSize;
- (bool)_wasVisibleBeforeResponderChanges;
- (void)addObserver:(id)arg1;
- (void)calculateIsVisibleBeforeResponderChangesForCurrentRunLoopIfNecessary;
- (long long)colorUserInterfaceStyle;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameObscuredInView:(id)arg1;
- (id)init;
- (void)inputResponderController:(id)arg1 inputViewSetVisibilityDidChange:(bool)arg2 includedReset:(bool)arg3;
- (bool)isRulerActive;
- (bool)isVisible;
- (long long)overrideUserInterfaceStyle;
- (void)paletteView:(id)arg1 didChangeColor:(id)arg2;
- (bool)paletteView:(id)arg1 shouldSetSelectedToolColor:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })paletteViewColorPickerPopoverPresentationSourceRect:(id)arg1;
- (id)paletteViewColorPickerPopoverPresentationSourceView:(id)arg1;
- (id)paletteViewCurrentFirstResponder:(id)arg1;
- (void)paletteViewDidChangePosition:(id)arg1;
- (void)paletteViewDidToggleRuler:(id)arg1;
- (void)paletteViewFirstResponderDidUpdate:(id)arg1;
- (void)paletteViewInteractionDidActivate:(id)arg1;
- (void)paletteViewInteractionWillEnterForeground:(id)arg1;
- (void)paletteViewSelectedToolInkDidChange:(id)arg1;
- (id)paletteViewUndoManager:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)selectedTool;
- (void)setColorUserInterfaceStyle:(long long)arg1;
- (void)setIsEditingStrokeSelection:(bool)arg1;
- (void)setOverrideUserInterfaceStyle:(long long)arg1;
- (void)setRulerActive:(bool)arg1;
- (void)setSelectedTool:(id)arg1;
- (void)setShowsDrawingPolicyControls:(bool)arg1;
- (void)setStateAutosaveName:(id)arg1;
- (void)setVisible:(bool)arg1 forFirstResponder:(id)arg2;
- (void)set_delegate:(id)arg1;
- (void)set_didCalculateVisibleBeforeResponderChanges:(bool)arg1;
- (void)set_firstRespondersForVisibleUI:(id)arg1;
- (void)set_observers:(id)arg1;
- (void)set_paletteWasCompact:(bool)arg1;
- (void)set_pencilInteractionEnabledWhenNotVisible:(bool)arg1;
- (void)set_toolIdentifiers:(id)arg1;
- (void)set_toolProperties:(id)arg1;
- (void)set_wasVisibleBeforeResponderChanges:(bool)arg1;
- (bool)shouldHandlePencilInteractionWhenNotVisible:(id)arg1;
- (bool)showsDrawingPolicyControls;
- (id)stateAutosaveName;

@end
