/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
 */

@interface CKVMatchingSpan : NSObject <NSCopying, NSSecureCoding> {
    unsigned long long  _beginIndex;
    unsigned long long  _endIndex;
    NSString * _itemId;
    float  _matchScore;
    USOGraph * _ontologyGraph;
    NSString * _ontologyLabel;
    NSString * _originAppId;
    unsigned int  _priorOrdinality;
    float  _priorScore;
    float  _score;
    NSString * _semanticValue;
}

@property (nonatomic, readonly) unsigned long long beginIndex;
@property (nonatomic, readonly) unsigned long long endIndex;
@property (nonatomic, readonly) NSString *itemId;
@property (nonatomic, readonly) float matchScore;
@property (nonatomic, readonly) USOGraph *ontologyGraph;
@property (nonatomic, readonly) NSString *ontologyLabel;
@property (nonatomic, readonly) NSString *originAppId;
@property (nonatomic, readonly) unsigned int priorOrdinality;
@property (nonatomic, readonly) float priorScore;
@property (nonatomic, readonly) float score;
@property (nonatomic, readonly) NSString *semanticValue;

+ (bool)_isEqualUSOGraph:(id)arg1 compareTo:(id)arg2;
+ (bool)_isEqualUSOGraphNodes:(struct vector<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>, std::__1::allocator<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>>> { struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x1; struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x2; struct __compressed_pair<std::__1::reference_wrapper<siri::ontology::UsoGraphNode> *, std::__1::allocator<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>>> { struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x_3_1_1; } x3; })arg1 compareTo:(struct vector<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>, std::__1::allocator<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>>> { struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x1; struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x2; struct __compressed_pair<std::__1::reference_wrapper<siri::ontology::UsoGraphNode> *, std::__1::allocator<std::__1::reference_wrapper<siri::ontology::UsoGraphNode>>> { struct reference_wrapper<siri::ontology::UsoGraphNode> {} *x_3_1_1; } x3; })arg2;
+ (id)matchingSpanFromSpanMatch:(id)arg1 withMetadata:(id)arg2 score:(float)arg3;
+ (id)matchingSpanFromSpanMatch:(id)arg1 withMetadata:(id)arg2 score:(float)arg3 priorInfo:(id)arg4;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (unsigned long long)beginIndex;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)endIndex;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithOntologyGraph:(id)arg1 ontologyLabel:(id)arg2 semanticValue:(id)arg3 beginIndex:(unsigned long long)arg4 endIndex:(unsigned long long)arg5 itemId:(id)arg6 originAppId:(id)arg7 score:(float)arg8 matchScore:(float)arg9 priorOrdinality:(unsigned int)arg10 priorScore:(float)arg11;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToMatchingSpan:(id)arg1;
- (id)itemId;
- (float)matchScore;
- (id)ontologyGraph;
- (id)ontologyLabel;
- (id)originAppId;
- (unsigned int)priorOrdinality;
- (float)priorScore;
- (float)score;
- (id)semanticValue;

@end
