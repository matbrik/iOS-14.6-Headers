/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBIconListModel : NSObject <NSFastEnumeration, SBIconIndexMutableListObserver, SBIconIndexNode, SBTreeNode> {
    SBFolder * _folder;
    struct SBHIconGridSize { 
        unsigned short columns; 
        unsigned short rows; 
    }  _gridSize;
    struct SBHIconGridSizeClassSizes { 
        struct SBHIconGridSize { 
            unsigned short columns; 
            unsigned short rows; 
        } small; 
        struct SBHIconGridSize { 
            unsigned short columns; 
            unsigned short rows; 
        } medium; 
        struct SBHIconGridSize { 
            unsigned short columns; 
            unsigned short rows; 
        } large; 
        struct SBHIconGridSize { 
            unsigned short columns; 
            unsigned short rows; 
        } extraLarge; 
    }  _gridSizeClassSizes;
    NSDate * _hiddenDate;
    bool  _iconStateIsDirty;
    <SBIconListModelIconValidator> * _iconValidator;
    SBIconIndexMutableList * _icons;
    NSHashTable * _listObservers;
    NSMutableArray * _nodeObserverTransactionStack;
    NSHashTable * _nodeObservers;
    unsigned long long  _overflowSlotCount;
    <SBTreeNode> * _parent;
    NSString * _uniqueIdentifier;
}

@property (nonatomic, readonly) NSArray *children;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) SBIcon *firstIcon;
@property (nonatomic, readonly) SBFolder *folder;
@property (nonatomic, readonly) struct SBHIconGridSize { unsigned short x1; unsigned short x2; } gridSize;
@property (readonly) unsigned long long hash;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic, copy) NSDate *hiddenDate;
@property (nonatomic, readonly) struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; } iconGridSizeClassSizes;
@property (nonatomic) <SBIconListModelIconValidator> *iconValidator;
@property (nonatomic, copy) NSArray *icons;
@property (nonatomic, readonly) SBIcon *lastIcon;
@property (nonatomic, readonly, copy) NSString *layoutDescription;
@property (nonatomic, readonly) unsigned long long maxNumberOfIcons;
@property (nonatomic, readonly) unsigned long long numberOfIcons;
@property (nonatomic, readonly) unsigned long long numberOfNonPlaceholderIcons;
@property (nonatomic, readonly) unsigned long long numberOfUsedColumns;
@property (nonatomic, readonly) unsigned long long numberOfUsedRows;
@property (nonatomic, readonly) unsigned long long numberOfUsedSlots;
@property (nonatomic) unsigned long long overflowSlotCount;
@property (nonatomic) <SBTreeNode> *parent;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *uniqueIdentifier;

+ (id)iconGridCellInfoForIcons:(id)arg1 gridSize:(struct SBHIconGridSize { unsigned short x1; unsigned short x2; })arg2 gridSizeClassSizes:(struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; })arg3 options:(unsigned long long)arg4;
+ (id)movedIconsWithOriginalOrder:(id)arg1 newOrder:(id)arg2;

- (void).cxx_destruct;
- (id)_checkAndRemoveBouncedIconsAvoidingIcons:(id)arg1 ignoringTrailingIconCheck:(bool)arg2;
- (id)_clusterIconsForSizeClass:(unsigned long long)arg1 gridCellInfoOptions:(unsigned long long)arg2;
- (void)_coalesceChangesWithRequestID:(id)arg1 changeBlock:(id /* block */)arg2;
- (id)_iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)_iconIndexForMovingIcon:(id)arg1 toGridCellIndex:(unsigned long long)arg2 gridCellInfo:(id)arg3;
- (long long)_moveIcon:(id)arg1 byClusteringForSizeClass:(unsigned long long)arg2 toGridCellIndex:(unsigned long long)arg3 gridCellInfoOptions:(unsigned long long)arg4;
- (void)_notifyListObservers:(id /* block */)arg1;
- (void)_unclusterIcons:(id)arg1 ofSizeClass:(unsigned long long)arg2 gridCellInfoOptions:(unsigned long long)arg3;
- (id)_updateModelByRepairingGapsIfNecessary;
- (bool)addIcon:(id)arg1;
- (bool)addIcon:(id)arg1 asDirty:(bool)arg2;
- (id)addIcons:(id)arg1;
- (void)addIconsOfClass:(Class)arg1 toSet:(id)arg2;
- (void)addIconsPassingTest:(id /* block */)arg1 toSet:(id)arg2;
- (void)addListObserver:(id)arg1;
- (void)addNodeObserver:(id)arg1;
- (id)allowedIconsForByReplacingContentsWithIcons:(id)arg1;
- (id)allowedIconsForIcons:(id)arg1;
- (id)allowedIconsForIcons:(id)arg1 ignoringPlaceholders:(bool)arg2;
- (bool)allowsAddingIcon:(id)arg1;
- (bool)allowsAddingIcon:(id)arg1 ignoringPlaceholders:(bool)arg2;
- (bool)allowsAddingIconCount:(unsigned long long)arg1;
- (bool)allowsAddingIcons:(id)arg1;
- (bool)allowsAddingIcons:(id)arg1 ignoringPlaceholders:(bool)arg2;
- (void)ancestryDidChange;
- (unsigned long long)bestGridCellIndexForInsertingIcon:(id)arg1 atGridCellIndex:(unsigned long long)arg2;
- (bool)canBounceIcon:(id)arg1;
- (id)changeGridSizeClassOfContainedIcon:(id)arg1 toGridSizeClass:(unsigned long long)arg2 gridCellInfo:(id)arg3;
- (id)children;
- (id)containedNodeIdentifiers;
- (bool)containsNodeIdentifier:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)didAddIcon:(id)arg1;
- (void)didRemoveIcon:(id)arg1;
- (id)directlyContainedIconPassingTest:(id /* block */)arg1;
- (id)directlyContainedIconWithIdentifier:(id)arg1;
- (bool)directlyContainsIcon:(id)arg1;
- (bool)directlyContainsIconWithIdentifier:(id)arg1;
- (bool)directlyContainsLeafIconWithIdentifier:(id)arg1;
- (void)enumerateFolderIconsUsingBlock:(id /* block */)arg1;
- (void)enumerateIconsUsingBlock:(id /* block */)arg1;
- (unsigned long long)firstFreeSlotIndex;
- (id)firstIcon;
- (id)folder;
- (bool)getIconGridRange:(struct SBHIconGridRange { unsigned long long x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; }*)arg1 forGridCellIndex:(unsigned long long)arg2 gridCellInfo:(id)arg3;
- (id)gridCellInfoForGridSize:(struct SBHIconGridSize { unsigned short x1; unsigned short x2; })arg1 options:(unsigned long long)arg2;
- (id)gridCellInfoWithOptions:(unsigned long long)arg1;
- (struct SBHIconGridSize { unsigned short x1; unsigned short x2; })gridSize;
- (id)hiddenDate;
- (id)iconAtIndex:(unsigned long long)arg1;
- (id)iconGridCellInfoBySimulatingInsertionOfIcons:(id)arg1 ignoringPlaceholders:(bool)arg2 iconOrder:(id*)arg3;
- (struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; })iconGridSizeClassSizes;
- (id)iconValidator;
- (id)icons;
- (id)iconsAtGridCellIndexes:(id)arg1 gridCellInfo:(id)arg2;
- (id)iconsAtIndexes:(id)arg1;
- (id)iconsForGridRange:(struct SBHIconGridRange { unsigned long long x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; })arg1 gridCellInfo:(id)arg2;
- (id)iconsInGridColumn:(unsigned long long)arg1 gridCellInfo:(id)arg2;
- (id)iconsInGridColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 gridCellInfo:(id)arg2;
- (id)iconsInGridRow:(unsigned long long)arg1 gridCellInfo:(id)arg2;
- (id)iconsOfClass:(Class)arg1;
- (id)iconsThatAreAllowedToBeContainedInIcons:(id)arg1;
- (unsigned long long)indexForIcon:(id)arg1;
- (id)indexPathsForContainedNodeIdentifier:(id)arg1 prefixPath:(id)arg2;
- (id)init;
- (id)initWithFolder:(id)arg1 gridSize:(struct SBHIconGridSize { unsigned short x1; unsigned short x2; })arg2 gridSizeClassSizes:(struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; })arg3;
- (id)initWithFolder:(id)arg1 maxIconCount:(unsigned long long)arg2;
- (id)initWithUniqueIdentifier:(id)arg1 folder:(id)arg2 gridSize:(struct SBHIconGridSize { unsigned short x1; unsigned short x2; })arg3 gridSizeClassSizes:(struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; struct SBHIconGridSize { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; struct SBHIconGridSize { unsigned short x_3_1_1; unsigned short x_3_1_2; } x3; struct SBHIconGridSize { unsigned short x_4_1_1; unsigned short x_4_1_2; } x4; })arg4;
- (id)insertIcon:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)insertIcon:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (id)insertIcons:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (bool)isAllowedToContainIcon:(id)arg1;
- (bool)isAllowedToContainIcons:(id)arg1;
- (bool)isEmpty;
- (bool)isEmptyIgnoringPlaceholders;
- (bool)isFull;
- (bool)isFullIncludingPlaceholders;
- (bool)isGridLayoutValid;
- (bool)isHidden;
- (bool)isIconStateDirty;
- (id)lastIcon;
- (id)layoutDescription;
- (id)layoutDescriptionWithOptions:(unsigned long long)arg1;
- (void)list:(id)arg1 didAddContainedNodeIdentifiers:(id)arg2;
- (void)list:(id)arg1 didRemoveContainedNodeIdentifiers:(id)arg2;
- (void)listDidMoveNodes:(id)arg1;
- (void)markIconStateClean;
- (void)markIconStateDirty;
- (unsigned long long)maxNumberOfIcons;
- (void)moveContainedIcon:(id)arg1 toGridCellIndex:(unsigned long long)arg2 gridCellInfoOptions:(unsigned long long)arg3;
- (id)nodeDescriptionWithPrefix:(id)arg1;
- (id)nodeIdentifier;
- (id)nodesAlongIndexPath:(id)arg1 consumedIndexes:(unsigned long long)arg2;
- (unsigned long long)numberOfFreeSlots;
- (unsigned long long)numberOfIcons;
- (unsigned long long)numberOfNonPlaceholderIcons;
- (unsigned long long)numberOfUsedColumns;
- (unsigned long long)numberOfUsedRows;
- (unsigned long long)numberOfUsedSlots;
- (id)objectWithUniqueIdentifier:(id)arg1;
- (unsigned long long)overflowSlotCount;
- (id)parent;
- (void)performChangesByClusteringForSizeClass:(unsigned long long)arg1 withGridCellInfoOptions:(unsigned long long)arg2 block:(id /* block */)arg3;
- (void)performChangesByPreservingPositionsOfIconsLargerThanSizeClass:(unsigned long long)arg1 block:(id /* block */)arg2;
- (id)placeIcon:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)placeIcon:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3 bumpedIcons:(id*)arg4;
- (void)removeAllIcons;
- (void)removeIcon:(id)arg1;
- (void)removeIconAtIndex:(unsigned long long)arg1;
- (void)removeIconAtIndex:(unsigned long long)arg1 options:(unsigned long long)arg2;
- (void)removeIconFromOtherPositionsInHierarchy:(id)arg1;
- (unsigned long long)removeIconFromOtherPositionsInHierarchy:(id)arg1 forInsertingAtIndex:(unsigned long long)arg2;
- (void)removeIcons:(id)arg1;
- (void)removeLastIcon;
- (void)removeListObserver:(id)arg1;
- (void)removeNodeObserver:(id)arg1;
- (id)reversedOrderLayoutDescription;
- (void)setHidden:(bool)arg1;
- (void)setHiddenDate:(id)arg1;
- (void)setIconValidator:(id)arg1;
- (void)setIcons:(id)arg1;
- (void)setOverflowSlotCount:(unsigned long long)arg1;
- (void)setParent:(id)arg1;
- (void)sortUsingComparator:(id /* block */)arg1;
- (void)sortUsingSelector:(SEL)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)uniqueIdentifier;
- (unsigned long long)willAddIcon:(id)arg1 atIndex:(unsigned long long)arg2;

@end
