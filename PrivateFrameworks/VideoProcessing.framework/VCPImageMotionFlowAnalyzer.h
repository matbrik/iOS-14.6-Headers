/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VideoProcessing.framework/VideoProcessing
 */

@interface VCPImageMotionFlowAnalyzer : VCPImageAnalyzer {
    int  _cnnOutputHeight;
    int  _cnnOutputWidth;
    float * _flow;
    bool  _flushModel;
    NSArray * _inputNames;
    struct vector<float *, std::__1::allocator<float *>> { 
        float **__begin_; 
        float **__end_; 
        struct __compressed_pair<float **, std::__1::allocator<float *>> { 
            float **__value_; 
        } __end_cap_; 
    }  _inputsData;
    VCPCNNModelEspresso * _modelEspresso;
    NSString * _resConfig;
    NSMutableArray * _results;
    int  _srcHeight;
    int  _srcWidth;
}

+ (id)sharedModel:(id)arg1 inputNames:(id)arg2;

- (id).cxx_construct;
- (void).cxx_destruct;
- (int)analyzeImages:(struct __CVBuffer { }*)arg1 secondImage:(struct __CVBuffer { }*)arg2 cancel:(id /* block */)arg3;
- (int)copyImage:(struct __CVBuffer { }*)arg1 toData:(float*)arg2 withChannels:(int)arg3;
- (int)creatModel;
- (int)createInput:(float*)arg1 withBuffer:(struct __CVBuffer { }*)arg2 cnnInputHeight:(int)arg3 cnnInputWidth:(int)arg4;
- (void)dealloc;
- (float*)getFlowWithHeight:(int*)arg1 andWidth:(int*)arg2;
- (id)init;
- (int)prepareModelForSourceWidth:(int)arg1 andSourceHeight:(int)arg2;
- (int)prepareModelWithAspectRatio:(float)arg1;

@end
