/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BiomeStorage.framework/BiomeStorage
 */

@interface BMStreamDatastore : NSObject {
    unsigned long long  _datastoreVersion;
    BMFrameStore * _framesStore;
    unsigned long long  _maxFileSize;
    BMStreamMetadata * _metadata;
    unsigned long long  _permission;
    NSMutableOrderedSet * _segmentNames;
    NSString * _streamId;
    NSString * _streamPath;
}

@property (nonatomic, retain) BMFrameStore *framesStore;
@property (nonatomic, readonly) NSString *streamId;

+ (long long)fileSizeOfURL:(id)arg1;
+ (unsigned long long)indexOfSegmentContainingEventTime:(double)arg1 fromSegments:(id)arg2;
+ (id)newFileNameWithTimestamp:(double)arg1;
+ (id)orderedSegmentsInDirectory:(id)arg1 includeZeroSizeSegments:(bool)arg2;
+ (double)timestampWithFilename:(id)arg1;

- (id)_localStreamPath;
- (id)copyNextSegmentAfterIndex:(long long*)arg1;
- (id)copySegmentAfterFrameStore:(id)arg1 createNewSegment:(bool)arg2;
- (id)copySegmentWithFilename:(id)arg1 error:(id*)arg2;
- (void)dealloc;
- (void)enumerateEventsFrom:(double)arg1 to:(double)arg2 withBlock:(id /* block */)arg3;
- (void)enumerateSegmentsFrom:(double)arg1 to:(double)arg2 withBlock:(id /* block */)arg3;
- (Class)eventClass;
- (void)eventsFrom:(double)arg1 to:(double)arg2 shouldDeleteUsingBlock:(id /* block */)arg3;
- (id)fetchEventsFrom:(double)arg1 to:(double)arg2;
- (void)fetchEventsFrom:(double)arg1 to:(double)arg2 callback:(id /* block */)arg3;
- (id)filelockPath;
- (id)framesStore;
- (long long)indexForFrameStoreAfterFrameStore:(id)arg1;
- (id)initForPruningWithStream:(id)arg1 config:(id)arg2;
- (id)initForReadingWithStream:(id)arg1 config:(id)arg2;
- (id)initForWritingWithStream:(id)arg1 config:(id)arg2;
- (id)initWithStream:(id)arg1 permission:(unsigned long long)arg2 config:(id)arg3;
- (id)initWithStream:(id)arg1 streamPath:(id)arg2 permission:(unsigned long long)arg3 config:(id)arg4;
- (id)loadMetadata;
- (unsigned long long)maxFileSize;
- (id)metadataPath;
- (id)newEnumeratorFromBookmark:(id)arg1;
- (id)newEnumeratorFromStartTime:(double)arg1;
- (id)newFrameStoreOfSegmentContainingEventTime:(double)arg1;
- (id)newFramestoreWithTime:(double)arg1;
- (void)nextEventFromFrameStore:(id)arg1 withOffset:(unsigned long long)arg2 withBlock:(id /* block */)arg3;
- (void)pruneStreamToMaxStreamSizeInBytes:(unsigned long long)arg1;
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 pruneFutureEvents:(bool)arg3 usingBlock:(id /* block */)arg4;
- (bool)removeFrameStoreFileWithSegmentName:(id)arg1;
- (bool)saveMetadata:(id)arg1;
- (id)segmentNames;
- (void)setFramesStore:(id)arg1;
- (bool)shouldRemoveEmptyFrameStoreFromSegmentName:(id)arg1;
- (id)streamId;
- (unsigned long long)streamSizeInBytes;
- (void)syncMappedFiles;
- (bool)tryToAddTypeInfoToStoreEvent:(id)arg1;
- (bool)updateWithNewSegmentNames;
- (bool)writeEventBytes:(const void*)arg1 length:(unsigned long long)arg2 dataVersion:(unsigned int)arg3 timestamp:(double)arg4;
- (bool)writeEventClass:(Class)arg1;
- (bool)writeEventData:(id)arg1 dataVersion:(unsigned int)arg2 timestamp:(double)arg3;
- (bool)writeEventWithEventBody:(id)arg1;
- (bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2;

@end
