/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKCoreTranscriptController : CKViewController <CKBalloonViewDelegate, CKCoreTranscriptControllerProtocol, CKSendAnimationManagerDelegate, CKTranscriptCollectionViewDelegate, CKTranscriptModelDelegate, UICollectionViewDelegate> {
    NSString * ___CurrentTestName;
    bool  _allowsPluginPlayback;
    double  _balloonMaxWidth;
    UICollectionViewDiffableDataSource * _collectionViewDatasource;
    UICollectionViewCompositionalLayout * _collectionViewLayout;
    long long  _contentAnimationPauseReasons;
    CKConversation * _conversation;
    <CKTranscriptCollectionViewControllerDelegate> * _delegate;
    <UIDragInteractionDelegate> * _dragInteractionDelegate;
    CKFullScreenEffectManager * _fullscreenEffectManager;
    UIView<CKGradientReferenceView> * _gradientReferenceView;
    NSIndexSet * _hiddenAssociatedItems;
    NSIndexSet * _hiddenBalloonViews;
    NSIndexSet * _hiddenItems;
    CKImpactEffectManager * _impactEffectManager;
    bool  _initialLoad;
    UITapGestureRecognizer * _loggingTapGestureRecognizer;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _marginInsets;
    CKTranscriptModel * _model;
    double  _pluginPlaybackDelay;
    bool  _shouldLoadDefaultConversationViewingMessageCountOnAppear;
    bool  _shouldUseOpaqueMask;
    NSString * _transcriptIdentifier;
    bool  _transcriptUpdateAnimated;
    bool  _transitionedFromComposing;
    bool  _transitioningFromComposing;
    NSObject<OS_dispatch_group> * _updateAnimationGroup;
}

@property (setter=__setCurrentTestName:, nonatomic, retain) NSString *__CurrentTestName;
@property (nonatomic) bool allowsPluginPlayback;
@property (nonatomic, readonly, copy) NSArray *associatedChatItems;
@property (nonatomic) double balloonMaxWidth;
@property (nonatomic, readonly) IMChat *chat;
@property (nonatomic, readonly, copy) NSArray *chatItems;
@property (nonatomic, readonly) CKTranscriptCollectionView *collectionView;
@property (nonatomic, retain) UICollectionViewDiffableDataSource *collectionViewDatasource;
@property (nonatomic, retain) UICollectionViewCompositionalLayout *collectionViewLayout;
@property (nonatomic) long long contentAnimationPauseReasons;
@property (nonatomic, retain) CKConversation *conversation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKTranscriptCollectionViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <UIDragInteractionDelegate> *dragInteractionDelegate;
@property (nonatomic, retain) CKFullScreenEffectManager *fullscreenEffectManager;
@property (nonatomic, retain) UIView<CKGradientReferenceView> *gradientReferenceView;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSIndexSet *hiddenAssociatedItems;
@property (nonatomic, copy) NSIndexSet *hiddenBalloonViews;
@property (nonatomic, copy) NSIndexSet *hiddenItems;
@property (nonatomic, retain) CKImpactEffectManager *impactEffectManager;
@property (getter=isInitialLoad, nonatomic) bool initialLoad;
@property (nonatomic, retain) UITapGestureRecognizer *loggingTapGestureRecognizer;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } marginInsets;
@property (nonatomic, retain) CKTranscriptModel *model;
@property (nonatomic) double pluginPlaybackDelay;
@property (nonatomic) bool shouldLoadDefaultConversationViewingMessageCountOnAppear;
@property (nonatomic) bool shouldUseOpaqueMask;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *transcriptIdentifier;
@property (getter=isTranscriptUpdateAnimated, nonatomic) bool transcriptUpdateAnimated;
@property (nonatomic) bool transitionedFromComposing;
@property (nonatomic) bool transitioningFromComposing;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *updateAnimationGroup;

- (void).cxx_destruct;
- (id)__CurrentTestName;
- (void)__setCurrentTestName:(id)arg1;
- (bool)_canUseOpaqueMask;
- (void)_configureBalloonCellIfNecessary:(id)arg1;
- (void)_registerCells;
- (void)addContentAnimationPauseReasons:(long long)arg1;
- (bool)allowsPluginPlayback;
- (id)associatedChatItemForGUID:(id)arg1;
- (id)associatedChatItems;
- (double)balloonMaxWidth;
- (double)balloonMaxWidthForModel:(id)arg1;
- (void)balloonView:(id)arg1 userDidDragOutsideBalloonWithPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)balloonView:(id)arg1 willInsertPluginViewAsSubview:(id)arg2;
- (void)balloonViewDoubleTapped:(id)arg1;
- (id)balloonViewForChatItem:(id)arg1;
- (id)balloonViewForIndexPath:(id)arg1;
- (void)balloonViewLongTouched:(id)arg1;
- (void)balloonViewSelected:(id)arg1 keyModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewSelected:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewShouldCopyToPasteboard:(id)arg1;
- (void)balloonViewShowInlineReply:(id)arg1;
- (void)balloonViewTapped:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewTextViewDidChangeSelection:(id)arg1 selectedText:(id)arg2 textView:(id)arg3;
- (bool)canRaiseToListen;
- (bool)canRaiseToTalk;
- (id)cellForAssociatedChatItem:(id)arg1;
- (id)cellForChatItem:(id)arg1;
- (id)cellForItemInCollectionView:(id)arg1 atIndexPath:(id)arg2 withIdentifier:(id)arg3;
- (id)cellForSupplementaryItemInCollectionView:(id)arg1 atIndexPath:(id)arg2 forSupplementaryViewKind:(id)arg3;
- (id)chat;
- (id)chatForSendAnimationManager:(id)arg1;
- (id)chatItemForCell:(id)arg1;
- (id)chatItemForGUID:(id)arg1;
- (id)chatItems;
- (void)clearRecentPluginTouch;
- (id)collectionView;
- (bool)collectionView:(id)arg1 isEditableItemAtIndexPath:(id)arg2;
- (id)collectionViewControllerForImpactEffectManager:(id)arg1;
- (id)collectionViewDatasource;
- (void)collectionViewDidInset:(id)arg1;
- (id)collectionViewLayout;
- (void)collectionViewWillInset:(id)arg1 targetContentInset:(inout struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg2;
- (void)collectionViewWillProgrammaticallyScroll:(id)arg1 animated:(bool)arg2;
- (void)collectionViewWillScroll:(id)arg1 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg2;
- (void)configureCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (long long)contentAnimationPauseReasons;
- (id)conversation;
- (void)copySelectedChatItemsToPasteboard;
- (id)delegate;
- (void)deleteSelectedItems:(id)arg1;
- (void)deselectAllBalloons;
- (id)dragInteractionDelegate;
- (void)endHoldingUpdatesAfterQuicklookCancelsDismiss;
- (id)fullscreenEffectManager;
- (id)gradientReferenceView;
- (bool)hasRecentTouchForSendingPlugin:(id)arg1;
- (id)hiddenAssociatedItems;
- (id)hiddenBalloonViews;
- (id)hiddenItems;
- (void)highlightItemAtIndexPathWhenDisplayed:(id)arg1;
- (void)highlightItemAtIndexPathWhenDisplayed:(id)arg1 autoDismiss:(bool)arg2;
- (id)impactEffectManager;
- (id)indexPathForBalloonView:(id)arg1;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2 balloonMaxWidth:(double)arg3 marginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg4;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2 notifications:(id)arg3 balloonMaxWidth:(double)arg4 marginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg5;
- (void)interactionStartedFromPreviewItemControllerInBalloonView:(id)arg1;
- (void)interactionStoppedFromPreviewItemControllerInBalloonView:(id)arg1;
- (void)invalidateChatItemLayoutWithBalloonMaxWidth:(double)arg1 marginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 traitCollection:(id)arg3;
- (bool)isInitialLoad;
- (bool)isTranscriptUpdateAnimated;
- (bool)isVisiblePlugin:(id)arg1;
- (double)itemMaxWidthForModel:(id)arg1;
- (id)lastMessagePartChatItem;
- (id)layoutSectionForSection:(long long)arg1 withEnvironment:(id)arg2;
- (void)liveBalloonTouched:(id)arg1;
- (void)loadView;
- (id)loggingTapGestureRecognizer;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })marginInsets;
- (id)model;
- (double)pluginPlaybackDelay;
- (void)raiseGestureRecognized:(id)arg1;
- (void)reloadData;
- (void)removeContentAnimationPauseReasons:(long long)arg1;
- (void)selectChatItem:(id)arg1;
- (id)selectedChatItems;
- (id)selectedItems;
- (void)sendAnimationManagerDidStopAnimation:(id)arg1 context:(id)arg2;
- (void)sendAnimationManagerWillStartAnimation:(id)arg1 context:(id)arg2;
- (void)setAllowsPluginPlayback:(bool)arg1;
- (void)setBalloonMaxWidth:(double)arg1;
- (void)setCollectionViewDatasource:(id)arg1;
- (void)setCollectionViewLayout:(id)arg1;
- (void)setContentAnimationPauseReasons:(long long)arg1;
- (void)setConversation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDragInteractionDelegate:(id)arg1;
- (void)setFullscreenEffectManager:(id)arg1;
- (void)setGradientReferenceView:(id)arg1;
- (void)setHiddenAssociatedItems:(id)arg1;
- (void)setHiddenBalloonViews:(id)arg1;
- (void)setHiddenItems:(id)arg1;
- (void)setImpactEffectManager:(id)arg1;
- (void)setInitialLoad:(bool)arg1;
- (void)setLoggingTapGestureRecognizer:(id)arg1;
- (void)setMarginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setModel:(id)arg1;
- (void)setPluginPlaybackDelay:(double)arg1;
- (void)setScrollAnchor:(double)arg1;
- (void)setSelectedItems:(id)arg1;
- (void)setShouldLoadDefaultConversationViewingMessageCountOnAppear:(bool)arg1;
- (void)setShouldUseOpaqueMask:(bool)arg1;
- (void)setTranscriptIdentifier:(id)arg1;
- (void)setTranscriptUpdateAnimated:(bool)arg1;
- (void)setTransitionedFromComposing:(bool)arg1;
- (void)setTransitioningFromComposing:(bool)arg1;
- (void)setUpdateAnimationGroup:(id)arg1;
- (bool)shouldLoadDefaultConversationViewingMessageCountOnAppear;
- (bool)shouldUseOpaqueMask;
- (void)sizeFullTranscriptIfNecessary;
- (void)startPluginPlaybackAfterDelay:(double)arg1;
- (void)stopPlayingAudio;
- (void)stopPluginPlayback;
- (id)traitCollectionForModel:(id)arg1;
- (id)transcriptIdentifier;
- (void)transcriptModelDidChange:(id)arg1;
- (bool)transitionedFromComposing;
- (bool)transitioningFromComposing;
- (void)tuConversationBalloonJoinButtonTapped:(id)arg1;
- (id)updateAnimationGroup;
- (void)updateEffectViewMessageRects;
- (void)updateTargetAlphaForVisibleChatItems;
- (void)updateTranscript:(id /* block */)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)verticallyScrollTranscriptByAmount:(double)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)viewWillAppear:(bool)arg1;

@end
