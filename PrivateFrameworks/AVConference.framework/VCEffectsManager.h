/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCEffectsManager : NSObject {
    int  _cameraFrameCount;
    int  _consecutiveDroppedFrameCount;
    id  _delegate;
    int  _droppedFrameCount;
    NSMutableArray * _effectsArray;
    bool  _effectsRegistered;
    int  _failedFrameCount;
    bool  _forceDisableEffectsHealthCheck;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastPrintTimestamp;
    struct __CVBuffer { } * _lastReceivedDepthBuffer;
    struct __CVBuffer { } * _lastReceivedPixelBuffer;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastReceivedTimestamp;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastSentTimestamp;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _loggingLock;
    int  _receivedFrameCount;
    struct opaqueVCRemoteImageQueue { } * _senderQueue;
    int  _sentFrameCount;
    int  _thermalPressureLevel;
    NSObject<OS_dispatch_queue> * _xpcCommandQueue;
}

@property (nonatomic) <VCEffectsManagerDelegate> *delegate;
@property (retain) NSMutableArray *effectsArray;

+ (id)sharedManager;

- (void)capturedPixelBuffer:(struct __CVBuffer { }*)arg1 depthBuffer:(struct __CVBuffer { }*)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 imageData:(id)arg4 toClient:(id)arg5;
- (void)capturedPixelBuffer:(struct __CVBuffer { }*)arg1 depthDataPixelBuffer:(struct __CVBuffer { }*)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 imageData:(id)arg4;
- (bool)checkEffectsHealth;
- (void)dealloc;
- (id)delegate;
- (id)effectsArray;
- (void)effectsRegistered:(bool)arg1;
- (void)encodeProcessedPixelBuffer:(struct __CVBuffer { }*)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 imageData:(id)arg3 processTime:(id)arg4;
- (id)init;
- (bool)isEffectsOn;
- (bool)isFaceMeshTrackingEnabled;
- (void)registerBlocksForService;
- (void)renderPixelBuffer:(struct __CVBuffer { }*)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)resetEffectsLogging;
- (void)setDelegate:(id)arg1;
- (void)setEffectsArray:(id)arg1;
- (void)updateThermalLevel:(int)arg1;

@end
