/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUSessionInfo : NSObject <PUPhotoSelectionManagerChangeObserver> {
    bool  _allowsMultipleSelection;
    unsigned long long  _assetTypesToInclude;
    NSPredicate * _assetsFilterPredicate;
    id /* block */  _bannerGenerator;
    bool  _enforcesSelectionLimitByDelesectingOtherAssets;
    bool  _isForAssetPicker;
    bool  _isLimitedLibraryPicker;
    PXLoadingStatusManager * _loadingStatusManager;
    NSString * _localizedPrompt;
    NSPointerArray * _observers;
    PUPhotoSelectionManager * _photoSelectionManager;
    <PXPhotosViewDelegate> * _photosViewDelegate;
    long long  _promptLocation;
    bool  _selectingTargetAlbum;
    PXSelectionCoordinator * _selectionCoordinator;
    unsigned long long  _selectionLimit;
    bool  _showsFileSizePicker;
    PHAssetCollection * _sourceAlbum;
    long long  _status;
    NSObject<PLAlbumProtocol> * _targetAlbum;
    NSString * _targetAlbumName;
    NSOrderedSet * _transferredAssets;
}

@property (nonatomic) bool allowsMultipleSelection;
@property (nonatomic) unsigned long long assetTypesToInclude;
@property (nonatomic, retain) NSPredicate *assetsFilterPredicate;
@property (nonatomic, copy) id /* block */ bannerGenerator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enforcesSelectionLimitByDelesectingOtherAssets;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isForAssetPicker;
@property (nonatomic, readonly) bool isLimitedLibraryPicker;
@property (nonatomic, retain) PXLoadingStatusManager *loadingStatusManager;
@property (nonatomic, copy) NSString *localizedPrompt;
@property (nonatomic, retain) PUPhotoSelectionManager *photoSelectionManager;
@property (nonatomic) <PXPhotosViewDelegate> *photosViewDelegate;
@property (nonatomic) long long promptLocation;
@property (getter=isSelectingAssets, nonatomic, readonly) bool selectingAssets;
@property (getter=isSelectingTargetAlbum, nonatomic, readonly) bool selectingTargetAlbum;
@property (nonatomic, retain) PXSelectionCoordinator *selectionCoordinator;
@property (nonatomic) unsigned long long selectionLimit;
@property (nonatomic) bool showsFileSizePicker;
@property (nonatomic, retain) PHAssetCollection *sourceAlbum;
@property (nonatomic) long long status;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<PLAlbumProtocol> *targetAlbum;
@property (nonatomic, retain) NSString *targetAlbumName;
@property (nonatomic, copy) NSOrderedSet *transferredAssets;

- (void).cxx_destruct;
- (void)_enumerateObserversWithBlock:(id /* block */)arg1;
- (void)addSessionInfoObserver:(id)arg1;
- (bool)allowsMultipleSelection;
- (unsigned long long)assetTypesToInclude;
- (id)assetsFilterPredicate;
- (id /* block */)bannerGenerator;
- (bool)enforcesSelectionLimitByDelesectingOtherAssets;
- (bool)hasLocalTargetAlbum;
- (bool)hasTargetAlbum;
- (id)init;
- (bool)isForAssetPicker;
- (bool)isLimitedLibraryPicker;
- (bool)isSelectingAssets;
- (bool)isSelectingTargetAlbum;
- (id)loadingStatusManager;
- (id)localizedPrompt;
- (id)photoSelectionManager;
- (void)photoSelectionManagerSelectionDidChange:(id)arg1;
- (id)photosViewDelegate;
- (long long)promptLocation;
- (void)removeSessionInfoObserver:(id)arg1;
- (id)selectionCoordinator;
- (unsigned long long)selectionLimit;
- (void)setAllowsMultipleSelection:(bool)arg1;
- (void)setAssetTypesToInclude:(unsigned long long)arg1;
- (void)setAssetsFilterPredicate:(id)arg1;
- (void)setBannerGenerator:(id /* block */)arg1;
- (void)setEnforcesSelectionLimitByDelesectingOtherAssets:(bool)arg1;
- (void)setLoadingStatusManager:(id)arg1;
- (void)setLocalizedPrompt:(id)arg1;
- (void)setPhotoSelectionManager:(id)arg1;
- (void)setPhotosViewDelegate:(id)arg1;
- (void)setPromptLocation:(long long)arg1;
- (void)setSelectionCoordinator:(id)arg1;
- (void)setSelectionLimit:(unsigned long long)arg1;
- (void)setShowsFileSizePicker:(bool)arg1;
- (void)setSourceAlbum:(id)arg1;
- (void)setStatus:(long long)arg1;
- (void)setTargetAlbum:(id)arg1;
- (void)setTargetAlbumName:(id)arg1;
- (void)setTransferredAssets:(id)arg1;
- (bool)showsFileSizePicker;
- (id)sourceAlbum;
- (long long)status;
- (id)targetAlbum;
- (id)targetAlbumName;
- (id)transferredAssets;

@end
