/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI
 */

@interface HUDashboardItemManager : HFItemManager {
    HFAccessoryItemProvider * _accessoryItemProvider;
    HFCameraListItem * _cameraListItem;
    HFReorderableHomeKitItemList * _clientReorderableCameraList;
    HFReorderableHomeKitItemList * _clientReorderableServiceList;
    HUDashboardContext * _context;
    <HUDashboardItemManagerDelegate> * _dashboardDelegate;
    HFDemoModeAccessoryItemProvider * _demoModeAccessoryItemProvider;
    HFItem * _editItem;
    bool  _editing;
    bool  _forceHideMultiUserTokenFixBannerItem;
    HFGenericAccessoryItemProvider * _genericItemProvider;
    HFItem * _headlineItem;
    id  _homeMediaAccount;
    HFMediaAccessoryItemProvider * _mediaAccessoryItemProvider;
    HFItem * _mediaServiceErrorBannerItem;
    HFItem * _multiUserTokenFixBannerItem;
    HFStaticItem * _placeholderSceneListItem;
    HFItem * _placeholderServicesListItem;
    HFProgrammableSwitchItemProvider * _programmableSwitchItemProvider;
    HFActionSetListItem * _sceneListItem;
    HFServiceGroupItemProvider * _serviceGroupItemProvider;
    HFServiceItemProvider * _serviceItemProvider;
    HFItem * _statusBannerItem;
    HFItem * _statusListItem;
    HFTargetControlItemProvider * _targetControlItemProvider;
    HFItem * _welcomeUIBannerItem;
}

@property (nonatomic, retain) HFAccessoryItemProvider *accessoryItemProvider;
@property (nonatomic, retain) HFCameraListItem *cameraListItem;
@property (nonatomic, retain) HFReorderableHomeKitItemList *clientReorderableCameraList;
@property (nonatomic, retain) HFReorderableHomeKitItemList *clientReorderableServiceList;
@property (nonatomic, retain) HUDashboardContext *context;
@property (nonatomic, readonly) <HUDashboardItemManagerDelegate> *dashboardDelegate;
@property (nonatomic, retain) HFDemoModeAccessoryItemProvider *demoModeAccessoryItemProvider;
@property (nonatomic, retain) HFItem *editItem;
@property (getter=isEditing, nonatomic) bool editing;
@property (nonatomic) bool forceHideMultiUserTokenFixBannerItem;
@property (nonatomic, retain) HFGenericAccessoryItemProvider *genericItemProvider;
@property (nonatomic, retain) HFItem *headlineItem;
@property (nonatomic, retain) id homeMediaAccount;
@property (nonatomic, retain) HFMediaAccessoryItemProvider *mediaAccessoryItemProvider;
@property (nonatomic, retain) HFItem *mediaServiceErrorBannerItem;
@property (nonatomic, retain) HFItem *multiUserTokenFixBannerItem;
@property (nonatomic, retain) HFStaticItem *placeholderSceneListItem;
@property (nonatomic, retain) HFItem *placeholderServicesListItem;
@property (nonatomic, retain) HFProgrammableSwitchItemProvider *programmableSwitchItemProvider;
@property (nonatomic, retain) HFReorderableHomeKitItemList *reorderableCameraList;
@property (nonatomic, retain) HFReorderableHomeKitItemList *reorderableServiceList;
@property (nonatomic, retain) HFActionSetListItem *sceneListItem;
@property (nonatomic, retain) HFServiceGroupItemProvider *serviceGroupItemProvider;
@property (nonatomic, retain) HFServiceItemProvider *serviceItemProvider;
@property (nonatomic, retain) HFItem *statusBannerItem;
@property (nonatomic, retain) HFItem *statusListItem;
@property (nonatomic, retain) HFTargetControlItemProvider *targetControlItemProvider;
@property (nonatomic, retain) HFItem *welcomeUIBannerItem;

- (void).cxx_destruct;
- (id)_buildItemProvidersForHome:(id)arg1;
- (id /* block */)_comparatorForSectionIdentifier:(id)arg1;
- (id)_currentSectionIdentifiers;
- (void)_didFinishUpdateTransactionWithAffectedItems:(id)arg1;
- (id)_identifierForSection:(unsigned long long)arg1;
- (id)_itemForSorting;
- (id)_itemsToHideInSet:(id)arg1;
- (unsigned long long)_numberOfSections;
- (bool)_requiresNotificationsForCharacteristic:(id)arg1;
- (id)_sectionIdentifierForItem:(id)arg1;
- (id)_titleForSectionWithIdentifier:(id)arg1;
- (void)_updateContextForHome:(id)arg1 room:(id)arg2;
- (void)_updateFilters;
- (void)_willUpdateSections;
- (id)accessoryItemProvider;
- (id)cameraListItem;
- (id)clientReorderableCameraList;
- (id)clientReorderableServiceList;
- (id)context;
- (id)dashboardDelegate;
- (bool)dashboardHasPlaceholderServiceOrSceneItems;
- (id)demoModeAccessoryItemProvider;
- (id)editItem;
- (bool)forceHideMultiUserTokenFixBannerItem;
- (id)genericItemProvider;
- (bool)hasVisibleServiceLikeItems;
- (id)headlineItem;
- (void)home:(id)arg1 didUpdateWallpaperForRoom:(id)arg2;
- (void)homeDidUpdateWallpaper:(id)arg1;
- (void)homeKitDispatcher:(id)arg1 manager:(id)arg2 didChangeHome:(id)arg3;
- (id)homeMediaAccount;
- (id)initWithContext:(id)arg1 delegate:(id)arg2;
- (id)initWithDelegate:(id)arg1 sourceItem:(id)arg2;
- (bool)isEditing;
- (bool)isEmptyDashboard;
- (bool)isEmptyHomeDashboard;
- (bool)isServiceLikeItemsAndCamerasEmpty;
- (bool)isStatusListVisible;
- (id)mediaAccessoryItemProvider;
- (id)mediaServiceErrorBannerItem;
- (id)multiUserTokenFixBannerItem;
- (id)placeholderSceneListItem;
- (id)placeholderServicesListItem;
- (id)programmableSwitchItemProvider;
- (id)reorderableCameraList;
- (id)reorderableServiceList;
- (id)sceneListItem;
- (id)serviceGroupItemProvider;
- (id)serviceItemProvider;
- (void)setAccessoryItemProvider:(id)arg1;
- (void)setCameraListItem:(id)arg1;
- (void)setClientReorderableCameraList:(id)arg1;
- (void)setClientReorderableServiceList:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDemoModeAccessoryItemProvider:(id)arg1;
- (void)setEditItem:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setForceHideMultiUserTokenFixBannerItem:(bool)arg1;
- (void)setGenericItemProvider:(id)arg1;
- (void)setHeadlineItem:(id)arg1;
- (void)setHomeMediaAccount:(id)arg1;
- (void)setMediaAccessoryItemProvider:(id)arg1;
- (void)setMediaServiceErrorBannerItem:(id)arg1;
- (void)setMultiUserTokenFixBannerItem:(id)arg1;
- (void)setPlaceholderSceneListItem:(id)arg1;
- (void)setPlaceholderServicesListItem:(id)arg1;
- (void)setProgrammableSwitchItemProvider:(id)arg1;
- (void)setReorderableCameraList:(id)arg1;
- (void)setReorderableServiceList:(id)arg1;
- (void)setSceneListItem:(id)arg1;
- (void)setServiceGroupItemProvider:(id)arg1;
- (void)setServiceItemProvider:(id)arg1;
- (void)setStatusBannerItem:(id)arg1;
- (void)setStatusListItem:(id)arg1;
- (void)setTargetControlItemProvider:(id)arg1;
- (void)setWelcomeUIBannerItem:(id)arg1;
- (void)settings:(id)arg1 didUpdateSetting:(id)arg2;
- (void)settings:(id)arg1 didWriteValueForSettings:(id)arg2 failedSettings:(id)arg3;
- (void)settingsDidUpdate:(id)arg1;
- (bool)shouldShowWelcomeUIBanner;
- (id)statusBannerItem;
- (id)statusListItem;
- (id)targetControlItemProvider;
- (id)welcomeUIBannerItem;

@end
