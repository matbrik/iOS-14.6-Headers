/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TrialServer.framework/TrialServer
 */

@interface TRIAssetStore : NSObject {
    <TRIAssetExtracting> * _extractor;
    <TRIPaths> * _paths;
}

+ (id)shortHashForAssetIdentifier:(id)arg1;

- (void).cxx_destruct;
- (bool)_acquireLockfileAndRunBlock:(id /* block */)arg1;
- (bool)_addSymlinkFromAssetWithIdentifier:(id)arg1 toPath:(id)arg2;
- (bool)_clearUnrefAgeForAssetWithIdentifier:(id)arg1;
- (int)_collectDeadSymlinks;
- (int)_collectUnreferencedAssets;
- (id)_createTempDir;
- (void)_enumerateAssetDirsUsingBlock:(id /* block */)arg1;
- (bool)_enumerateZeroTerminatedStringsInFd:(int)arg1 usingBlock:(id /* block */)arg2;
- (void)_fixupPermissionsOnPath:(id)arg1 permissionBits:(const unsigned short*)arg2;
- (void)_forceRemoveItemAtPath:(id)arg1;
- (bool)_incrementUnrefAgeForAssetWithIdentifier:(id)arg1 newValue:(unsigned int*)arg2;
- (bool)_isDirectoryAtPath:(id)arg1 matchingAssetContentAtPath:(id)arg2;
- (bool)_isFileAtPath:(id)arg1 matchingAssetContentAtPath:(id)arg2;
- (bool)_isValidTargetForSymlink:(id)arg1 assetIdentifier:(id)arg2;
- (bool)_linkDirectoryAssetWithIdentifier:(id)arg1 toPath:(id)arg2;
- (bool)_linkFileAssetWithIdentifier:(id)arg1 toPath:(id)arg2;
- (bool)_nonAtomicOverwriteWithSrc:(id)arg1 dest:(id)arg2 finalPermissionBits:(const unsigned short*)arg3;
- (bool)_overwriteRenameAsAtomicallyAsPossibleWithSrc:(id)arg1 dest:(id)arg2;
- (id)_pathForAssetContentWithIdentifier:(id)arg1;
- (id)_pathForAssetDirWithIdentifier:(id)arg1;
- (id)_pathForRefsToAssetWithIdentifier:(id)arg1;
- (bool)_removeAssetWithIdentifier:(id)arg1 flockWitness:(const struct TRIFlockWitness_ { }*)arg2;
- (bool)_removeDeadSymlinksWithFlockWitness:(const struct TRIFlockWitness_ { }*)arg1 numRemoved:(unsigned int*)arg2;
- (bool)_removePathsInFd:(int)arg1 numRemoved:(unsigned int*)arg2;
- (bool)_removeUnreferencedAssetsWithFlockWitness:(const struct TRIFlockWitness_ { }*)arg1 olderThanAge:(unsigned int)arg2 numRemoved:(unsigned int*)arg3;
- (id)_requireAssetStoreTempDir;
- (bool)_saveDirectoryAssetWithIdentifier:(id)arg1 assetData:(id)arg2;
- (bool)_saveFileAssetWithIdentifier:(id)arg1 assetData:(id)arg2;
- (bool)_validateAssetIdentifier:(id)arg1;
- (bool)collectGarbageOlderThanNumScans:(unsigned int)arg1;
- (void)enumerateSavedAssetsUsingBlock:(id /* block */)arg1;
- (bool)hasAssetWithIdentifier:(id)arg1 type:(unsigned char*)arg2;
- (id)init;
- (id)initWithPaths:(id)arg1;
- (id)initWithPaths:(id)arg1 extractor:(id)arg2;
- (bool)linkAssetWithIdentifier:(id)arg1 toPath:(id)arg2;
- (bool)removeAssetWithIdentifier:(id)arg1;
- (bool)saveAssetWithIdentifier:(id)arg1 assetData:(id)arg2 type:(unsigned char)arg3;

@end
