/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPRemoteCommandCenter : NSObject <MPRemoteCommandDelegate_Internal> {
    NSMutableArray * _activeCommands;
    MPFeedbackCommand * _addItemToLibraryCommand;
    MPFeedbackCommand * _addNowPlayingItemToLibraryCommand;
    MPAdvanceRepeatModeCommand * _advanceRepeatModeCommand;
    MPAdvanceShuffleModeCommand * _advanceShuffleModeCommand;
    MPFeedbackCommand * _bookmarkCommand;
    bool  _canBeNowPlayingApplication;
    MPChangePlaybackPositionCommand * _changePlaybackPositionCommand;
    MPChangePlaybackRateCommand * _changePlaybackRateCommand;
    MPChangeQueueEndActionCommand * _changeQueueEndActionCommand;
    MPChangeRepeatModeCommand * _changeRepeatModeCommand;
    MPChangeShuffleModeCommand * _changeShuffleModeCommand;
    MPRemoteCommand * _createRadioStationCommand;
    bool  _disableAutomaticCanBeNowPlaying;
    MPRemoteCommand * _disableLanguageOptionCommand;
    MPRemoteCommand * _discardPlaybackSessionCommand;
    MPFeedbackCommand * _dislikeCommand;
    MPRemoteCommand * _enableLanguageOptionCommand;
    NSMutableArray * _eventQueue;
    MPInsertIntoPlaybackQueueCommand * _insertIntoPlaybackQueueCommand;
    MPFeedbackCommand * _likeCommand;
    void * _mediaRemoteCommandHandler;
    MPRemoteCommand * _nextTrackCommand;
    MPRemoteCommand * _pauseCommand;
    MPRemoteCommand * _playCommand;
    MPRemoteCommand * _playItemInQueueCommand;
    NSString * _playerID;
    MRPlayerPath * _playerPath;
    MPPreloadPlaybackSessionCommand * _preloadPlaybackSessionCommand;
    MPRemoteCommand * _prepareForSetPlaybackQueueCommand;
    MPRemoteCommand * _previousTrackCommand;
    bool  _processingEvent;
    MPRatingCommand * _ratingCommand;
    MPRemoteCommand * _removeFromPlaybackQueueCommand;
    MPReorderQueueCommand * _reorderQueueCommand;
    MPRemoteCommand * _reshuffleCommand;
    bool  _scheduledSupportedCommandsChangedNotification;
    MPRemoteCommand * _seekBackwardCommand;
    MPRemoteCommand * _seekForwardCommand;
    NSObject<OS_dispatch_queue> * _serialQueue;
    MPSetPlaybackQueueCommand * _setPlaybackQueueCommand;
    MPSetPlaybackSessionCommand * _setPlaybackSessionCommand;
    MPSetPriorityForPlaybackSessionCommand * _setPriorityForPlaybackSessionCommand;
    MPSkipIntervalCommand * _skipBackwardCommand;
    MPSkipIntervalCommand * _skipForwardCommand;
    MPRemoteCommand * _specialSeekBackwardCommand;
    MPRemoteCommand * _specialSeekForwardCommand;
    unsigned long long  _stateHandler;
    MPRemoteCommand * _stopCommand;
    MPRemoteCommand * _togglePlayPauseCommand;
    bool  _wantsSerializedEventDelivery;
}

@property (nonatomic, readonly) MPFeedbackCommand *addItemToLibraryCommand;
@property (nonatomic, readonly) MPFeedbackCommand *addNowPlayingItemToLibraryCommand;
@property (nonatomic, readonly) MPAdvanceRepeatModeCommand *advanceRepeatModeCommand;
@property (nonatomic, readonly) MPAdvanceShuffleModeCommand *advanceShuffleModeCommand;
@property (nonatomic, readonly) MPFeedbackCommand *bookmarkCommand;
@property (nonatomic, readonly) MPChangePlaybackPositionCommand *changePlaybackPositionCommand;
@property (nonatomic, readonly) MPChangePlaybackRateCommand *changePlaybackRateCommand;
@property (nonatomic, readonly) MPChangeQueueEndActionCommand *changeQueueEndActionCommand;
@property (nonatomic, readonly) MPChangeRepeatModeCommand *changeRepeatModeCommand;
@property (nonatomic, readonly) MPChangeShuffleModeCommand *changeShuffleModeCommand;
@property (nonatomic, readonly) MPRemoteCommand *clearUpNextQueueCommand;
@property (nonatomic, readonly) MPRemoteCommand *confirmHeadphonesCommand;
@property (nonatomic, readonly) MPRemoteCommand *createRadioStationCommand;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableAutomaticCanBeNowPlaying;
@property (nonatomic, readonly) MPRemoteCommand *disableLanguageOptionCommand;
@property (nonatomic, readonly) MPRemoteCommand *disableQueueModificationsCommand;
@property (nonatomic, readonly) MPRemoteCommand *discardPlaybackSessionCommand;
@property (nonatomic, readonly) MPFeedbackCommand *dislikeCommand;
@property (nonatomic, readonly) MPRemoteCommand *enableLanguageOptionCommand;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MPInsertIntoPlaybackQueueCommand *insertIntoPlaybackQueueCommand;
@property (nonatomic, readonly) MPFeedbackCommand *likeCommand;
@property (nonatomic, readonly) MPRemoteCommand *nextTrackCommand;
@property (nonatomic, readonly) MPRemoteCommand *pauseCommand;
@property (nonatomic, readonly) MPRemoteCommand *playCommand;
@property (nonatomic, readonly) MPRemoteCommand *playItemInQueueCommand;
@property (nonatomic, readonly, copy) NSString *playerID;
@property (nonatomic, readonly) MPPreloadPlaybackSessionCommand *preloadPlaybackSessionCommand;
@property (nonatomic, readonly) MPRemoteCommand *prepareForSetPlaybackQueueCommand;
@property (nonatomic, readonly) MPRemoteCommand *previousTrackCommand;
@property (nonatomic, readonly) MPRatingCommand *ratingCommand;
@property (nonatomic, readonly) MPRemoteCommand *removeFromPlaybackQueueCommand;
@property (nonatomic, readonly) MPReorderQueueCommand *reorderQueueCommand;
@property (nonatomic, readonly) MPRemoteCommand *reshuffleCommand;
@property (nonatomic, readonly) MPRemoteCommand *seekBackwardCommand;
@property (nonatomic, readonly) MPRemoteCommand *seekForwardCommand;
@property (nonatomic, readonly) MPSetPlaybackQueueCommand *setPlaybackQueueCommand;
@property (nonatomic, readonly) MPSetPlaybackSessionCommand *setPlaybackSessionCommand;
@property (nonatomic, readonly) MPSetPriorityForPlaybackSessionCommand *setPriorityForPlaybackSessionCommand;
@property (nonatomic, readonly) MPSkipIntervalCommand *skipBackwardCommand;
@property (nonatomic, readonly) MPSkipIntervalCommand *skipForwardCommand;
@property (nonatomic, readonly) MPRemoteCommand *specialSeekBackwardCommand;
@property (nonatomic, readonly) MPRemoteCommand *specialSeekForwardCommand;
@property (nonatomic, readonly) MPRemoteCommand *stopCommand;
@property (readonly) Class superclass;
@property (nonatomic, readonly) MPRemoteCommand *switchAudioFormatCommand;
@property (nonatomic, readonly) MPRemoteCommand *togglePlayPauseCommand;
@property (nonatomic) bool wantsSerializedEventDelivery;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

+ (long long)_numberOfCommandCentersWithTargets;
+ (id)commandCenterForPlayerID:(id)arg1;
+ (void)getPendingCommandTypesWithCompletion:(id /* block */)arg1;
+ (id)sharedCommandCenter;
+ (void)updateLaunchCommandsWithConfigurationHandler:(id /* block */)arg1;

- (void).cxx_destruct;
- (id)_activeCommands;
- (void)_commandTargetsDidChangeNotification:(id)arg1;
- (id)_createRemoteCommandWithConcreteClass:(Class)arg1 mediaRemoteType:(unsigned int)arg2;
- (void)_flushEventQueue;
- (id)_onQueue_stateDictionary;
- (void)_pushMediaRemoteCommand:(unsigned int)arg1 withOptions:(struct __CFDictionary { }*)arg2 completion:(id /* block */)arg3;
- (void)_scheduleSupportedCommandsChanged;
- (void)_startMediaRemoteSync;
- (void)_stopMediaRemoteSync;
- (id)addItemToLibraryCommand;
- (id)addNowPlayingItemToLibraryCommand;
- (id)advanceRepeatModeCommand;
- (id)advanceShuffleModeCommand;
- (id)bookmarkCommand;
- (id)changePlaybackPositionCommand;
- (id)changePlaybackRateCommand;
- (id)changeQueueEndActionCommand;
- (id)changeRepeatModeCommand;
- (id)changeShuffleModeCommand;
- (bool)containsCommand:(id)arg1;
- (id)createRadioStationCommand;
- (void)dealloc;
- (bool)disableAutomaticCanBeNowPlaying;
- (id)disableLanguageOptionCommand;
- (id)discardPlaybackSessionCommand;
- (id)dislikeCommand;
- (void)dispatchCommandEvent:(id)arg1 completion:(id /* block */)arg2;
- (id)enableLanguageOptionCommand;
- (void)getPendingCommandTypesWithCompletion:(id /* block */)arg1;
- (id)initWithPlayerID:(id)arg1;
- (id)insertIntoPlaybackQueueCommand;
- (id)likeCommand;
- (id)nextTrackCommand;
- (id)pauseCommand;
- (id)playCommand;
- (id)playItemInQueueCommand;
- (id)playerID;
- (id)preloadPlaybackSessionCommand;
- (id)prepareForSetPlaybackQueueCommand;
- (id)previousTrackCommand;
- (id)ratingCommand;
- (void)remoteCommandDidMutatePropagatableProperty:(id)arg1;
- (id)removeFromPlaybackQueueCommand;
- (id)reorderQueueCommand;
- (id)reshuffleCommand;
- (id)seekBackwardCommand;
- (id)seekForwardCommand;
- (void)setDisableAutomaticCanBeNowPlaying:(bool)arg1;
- (id)setPlaybackQueueCommand;
- (id)setPlaybackSessionCommand;
- (id)setPriorityForPlaybackSessionCommand;
- (void)setWantsSerializedEventDelivery:(bool)arg1;
- (id)skipBackwardCommand;
- (id)skipForwardCommand;
- (id)specialSeekBackwardCommand;
- (id)specialSeekForwardCommand;
- (id)stopCommand;
- (id)togglePlayPauseCommand;
- (bool)wantsSerializedEventDelivery;

// Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore

- (id)clearUpNextQueueCommand;
- (id)confirmHeadphonesCommand;
- (id)disableQueueModificationsCommand;
- (id)switchAudioFormatCommand;

@end
