/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMIVideoEncoder : HMIVideoProcessingNode <HMFLogging> {
    long long  _averageBitRate;
    unsigned int  _codecType;
    struct HMIVideoEncoderDataRate { 
        long long bytes; 
        long long seconds; 
    }  _dataRateLimit;
    <HMIVideoEncoderDelegate> * _delegate;
    struct { 
        int width; 
        int height; 
    }  _dimensions;
    double  _expectedDuration;
    long long  _expectedFrameRate;
    bool  _forceKeyFrameOnNextEncodedFrame;
    long long  _maxKeyFrameIntervalDuration;
    unsigned long long  _numberOfDroppedFrames;
    bool  _realTime;
    struct OpaqueVTCompressionSession { } * _session;
}

@property (nonatomic) long long averageBitRate;
@property (nonatomic) struct HMIVideoEncoderDataRate { long long x1; long long x2; } dataRateLimit;
@property (readonly, copy) NSString *debugDescription;
@property <HMIVideoEncoderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double expectedDuration;
@property (nonatomic) long long expectedFrameRate;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long maxKeyFrameIntervalDuration;
@property (readonly) unsigned long long numberOfDroppedFrames;
@property (readonly) Class superclass;

+ (id)logCategory;

- (void).cxx_destruct;
- (bool)_encodeSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 attemptRecovery:(bool)arg2;
- (bool)_initSessionWithError:(id*)arg1;
- (void)_invalidateSession;
- (long long)averageBitRate;
- (struct HMIVideoEncoderDataRate { long long x1; long long x2; })dataRateLimit;
- (void)dealloc;
- (id)delegate;
- (double)expectedDuration;
- (long long)expectedFrameRate;
- (void)flush;
- (void)handleSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (id)initWithDimensions:(struct { int x1; int x2; })arg1 codecType:(unsigned int)arg2 realTime:(bool)arg3 error:(id*)arg4;
- (long long)maxKeyFrameIntervalDuration;
- (unsigned long long)numberOfDroppedFrames;
- (void)setAverageBitRate:(long long)arg1;
- (void)setDataRateLimit:(struct HMIVideoEncoderDataRate { long long x1; long long x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpectedDuration:(double)arg1;
- (void)setExpectedFrameRate:(long long)arg1;
- (void)setMaxKeyFrameIntervalDuration:(long long)arg1;

@end
