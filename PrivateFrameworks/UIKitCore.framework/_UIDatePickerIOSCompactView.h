/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UIDatePickerIOSCompactView : UIControl <UIContextMenuInteractionDelegate, UIContextMenuInteractionDelegate_Private, UIPointerInteractionDelegate, _UIDatePickerViewComponent> {
    _UIDatePickerDataModel * _data;
    UIView * _dateBackgroundPlatter;
    NSDateFormatter * _dateFormatterMedium;
    NSDateFormatter * _dateFormatterShort;
    _UIDatePickerLinkedLabel * _dateLabel;
    bool  _dateOnLeadingSide;
    UIDatePicker * _datePicker;
    NSArray * _dateTimeConstraints;
    UIView * _dateView;
    struct { 
        unsigned int isEnabled : 1; 
    }  _flags;
    NSDateFormatter * _layoutFormatter;
    UIPointerInteraction * _pointerInteraction;
    UIView * _timeBackgroundPlatter;
    NSDateFormatter * _timeFormatter;
    UILabel * _timeLabel;
    UIView * _timeView;
    UILayoutGuide * _timeViewLayoutGuide;
}

@property (getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:, nonatomic) bool allowsZeroCountDownDuration;
@property (getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:, nonatomic) bool allowsZeroTimeInterval;
@property (nonatomic, readonly) double contentWidth;
@property (nonatomic, retain) _UIDatePickerDataModel *data;
@property (nonatomic) UIDatePicker *datePicker;
@property (nonatomic, readonly) long long datePickerStyle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=_highlightColor, setter=_setHighlightColor:, nonatomic, retain) UIColor *highlightColor;
@property (getter=_isTimeIntervalMode, nonatomic, readonly) bool isTimeIntervalMode;
@property (getter=_magnifierLineColor, setter=_setMagnifierLineColor:, nonatomic, retain) UIColor *magnifierLineColor;
@property (readonly) Class superclass;
@property (getter=_textColor, setter=_setTextColor:, nonatomic, retain) UIColor *textColor;
@property (getter=_textShadowColor, setter=_setTextShadowColor:, nonatomic, retain) UIColor *textShadowColor;
@property (nonatomic) double timeInterval;

- (void).cxx_destruct;
- (bool)_allowsZeroCountDownDuration;
- (bool)_allowsZeroTimeInterval;
- (bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;
- (bool)_isTimeIntervalMode;
- (void)_setAllowsZeroCountDownDuration:(bool)arg1;
- (void)_setAllowsZeroTimeInterval:(bool)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setHidesLabels:(bool)arg1;
- (struct CGSize { double x1; double x2; })_sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)_targetedPreviewForContextMenu;
- (void)_updateDateBeforeTimeValue;
- (void)_updateEnabledStyling;
- (void)_updateUI;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)contextMenuInteraction:(id)arg1 previewForDismissingMenuWithConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2;
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (id)data;
- (id)datePicker;
- (long long)datePickerStyle;
- (struct CGSize { double x1; double x2; })defaultSize;
- (void)didChangeCalendar;
- (void)didChangeDateFrom:(id)arg1 animated:(bool)arg2;
- (void)didChangeLocale;
- (void)didChangeMaximumDate;
- (void)didChangeMinimumDate;
- (void)didChangeMinuteInterval;
- (void)didChangeMode;
- (void)didChangeTimeZone;
- (void)didChangeToday;
- (void)didReset;
- (bool)hasDefaultSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (void)setData:(id)arg1;
- (void)setDatePicker:(id)arg1;
- (void)tintColorDidChange;
- (void)updateConstraints;
- (bool)usesAutoLayout;

@end
