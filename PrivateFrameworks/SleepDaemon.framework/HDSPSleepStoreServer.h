/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SleepDaemon.framework/SleepDaemon
 */

@interface HDSPSleepStoreServer : NSObject <HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepEventHandler, HDSPSleepModeObserver, HDSPSleepScheduleModelObserver, HDSPSleepScheduleStateObserver, HKSPSleepServer> {
    HKSPXPCConnectionListener * _connectionListener;
    HDSPEnvironment * _environment;
    NAFuture * _environmentIsReady;
    HDSPSleepMessageStore * _messageStore;
}

@property (nonatomic, readonly) HKSPXPCConnectionListener *connectionListener;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HDSPEnvironment *environment;
@property (nonatomic, readonly) NAFuture *environmentIsReady;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HDSPSleepMessageStore *messageStore;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_notifyClient:(id)arg1 forMissedMessagesWithSyncAnchor:(id)arg2;
- (void)_notifyClient:(id)arg1 forMissedSleepEvent:(id)arg2 syncAnchor:(id)arg3;
- (void)_notifyClientForMissedRecordChange:(id)arg1 syncAnchor:(id)arg2;
- (void)_notifyClientForMissedScheduleChange:(id)arg1 syncAnchor:(id)arg2;
- (void)_notifyClientForMissedScheduleStateChange:(id)arg1 syncAnchor:(id)arg2;
- (void)_notifyClientForMissedSettingsChange:(id)arg1 syncAnchor:(id)arg2;
- (void)_notifyClientForMissedSleepModeChange:(id)arg1 syncAnchor:(id)arg2;
- (void)_performWhenEnvironmentIsReady:(id /* block */)arg1;
- (void)checkInWithSyncAnchor:(id)arg1 completion:(id /* block */)arg2;
- (void)confirmAwakeWithCompletion:(id /* block */)arg1;
- (void)connectWithCompletion:(id /* block */)arg1;
- (id)connectionListener;
- (void)delayBedtimeForTimeInterval:(double)arg1 completion:(id /* block */)arg2;
- (id)diagnosticDescription;
- (id)diagnosticInfo;
- (void)dismissGoodMorningWithCompletion:(id /* block */)arg1;
- (void)dismissSleepLockWithCompletion:(id /* block */)arg1;
- (id)environment;
- (void)environmentDidBecomeReady:(id)arg1;
- (id)environmentIsReady;
- (void)environmentWillBecomeReady:(id)arg1;
- (void)environmentWillInvalidate:(id)arg1;
- (id)eventIdentifiers;
- (void)getSleepEventRecordWithCompletion:(id /* block */)arg1;
- (void)getSleepModeWithCompletion:(id /* block */)arg1;
- (void)getSleepScheduleStateWithCompletion:(id /* block */)arg1;
- (void)getSleepScheduleWithCompletion:(id /* block */)arg1;
- (void)getSleepSettingsWithCompletion:(id /* block */)arg1;
- (id)initWithEnvironment:(id)arg1;
- (id)initWithEnvironment:(id)arg1 connectionListenerProvider:(id /* block */)arg2;
- (id)messageStore;
- (void)publishNotificationWithIdentifier:(id)arg1 userInfo:(id)arg2 completion:(id /* block */)arg3;
- (void)publishWakeUpResultsNotificationWithCompletion:(id /* block */)arg1;
- (void)saveSleepEventRecord:(id)arg1 completion:(id /* block */)arg2;
- (void)saveSleepSchedule:(id)arg1 completion:(id /* block */)arg2;
- (void)saveSleepSettings:(id)arg1 completion:(id /* block */)arg2;
- (void)setLockScreenOverrideState:(long long)arg1 userInfo:(id)arg2 completion:(id /* block */)arg3;
- (void)setSleepMode:(long long)arg1 completion:(id /* block */)arg2;
- (void)skipBedtimeWithCompletion:(id /* block */)arg1;
- (void)skipWindDownWithCompletion:(id /* block */)arg1;
- (void)sleepAlarmWasDismissedOnDate:(id)arg1 completion:(id /* block */)arg2;
- (void)sleepAlarmWasModifiedWithCompletion:(id /* block */)arg1;
- (void)sleepAlarmWasSnoozedUntilDate:(id)arg1 completion:(id /* block */)arg2;
- (void)sleepEventIsDue:(id)arg1;
- (void)sleepModeDidChange:(long long)arg1 previousMode:(long long)arg2 reason:(unsigned long long)arg3;
- (void)sleepScheduleModelManager:(id)arg1 source:(id)arg2 didUpdateSleepEventRecord:(id)arg3;
- (void)sleepScheduleModelManager:(id)arg1 source:(id)arg2 didUpdateSleepSchedule:(id)arg3;
- (void)sleepScheduleModelManager:(id)arg1 source:(id)arg2 didUpdateSleepSettings:(id)arg3;
- (void)sleepScheduleStateDidChange:(unsigned long long)arg1 previousState:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)startListening;

@end
