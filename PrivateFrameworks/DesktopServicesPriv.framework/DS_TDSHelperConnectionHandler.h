/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/DesktopServicesPriv
 */

@interface DS_TDSHelperConnectionHandler : NSObject {
    struct TDSHelperContext { int (**x1)(); struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_2_1_1; struct _opaque_pthread_t {} *x_2_1_2; } x2; struct TConditionVariable { struct condition_variable_any { struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_4_1; BOOL x_1_4_2[40]; } x_1_3_1; } x_1_2_1; struct shared_ptr<std::__1::mutex> { struct mutex {} *x_2_3_1; struct __shared_weak_count {} *x_2_3_2; } x_1_2_2; } x_3_1_1; int x_3_1_2; } x3; bool x4; unsigned int x5; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_6_1_1; } x6; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString {} *x_1_2_1; } x_7_1_1; } x7; unsigned char x8[16]; struct AuthorizationOpaqueRef {} *x9; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_10_1_1; } x10; struct TNSRef<DS_TDSHelperConnectionHandler, void> { id x_11_1_1; } x11; } * _helper;
    struct TDSMutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } fMutex; 
    }  _mutex;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearHelper;
- (void)handleHelperEvent:(id)arg1;
- (id)initWithHelper:(struct TDSHelperContext { int (**x1)(); struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_2_1_1; struct _opaque_pthread_t {} *x_2_1_2; } x2; struct TConditionVariable { struct condition_variable_any { struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_4_1; BOOL x_1_4_2[40]; } x_1_3_1; } x_1_2_1; struct shared_ptr<std::__1::mutex> { struct mutex {} *x_2_3_1; struct __shared_weak_count {} *x_2_3_2; } x_1_2_2; } x_3_1_1; int x_3_1_2; } x3; bool x4; unsigned int x5; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_6_1_1; } x6; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString {} *x_1_2_1; } x_7_1_1; } x7; unsigned char x8[16]; struct AuthorizationOpaqueRef {} *x9; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_10_1_1; } x10; struct TNSRef<DS_TDSHelperConnectionHandler, void> { id x_11_1_1; } x11; }*)arg1;

@end
