/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBRootFolderView : SBFolderView <SBDockViewDelegate, SBFRemoteBasebandLoggingObserver, _UISettingsKeyObserver> {
    long long  _activeSidebarAnimationCount;
    bool  _allowsAutoscrollToTodayView;
    bool  _allowsFreeScrollingUntilScrollingEnds;
    double  _baseOffsetForDeterminingScrollToSearchThreshold;
    SBHMinusPageStepper * _customPageAnimationStepper;
    _SBRootFolderViewElementBorrowedAssertion * _dockBorrowedAssertion;
    unsigned long long  _dockEdge;
    bool  _dockExternal;
    SBDockIconListView * _dockListView;
    NSHashTable * _dockOffscreenProgressSettingClients;
    bool  _dockPinnedForRotation;
    <BSInvalidatable> * _dockStateDumpHandle;
    SBDockView * _dockView;
    SBTitledHomeScreenButton * _doneButton;
    SBIconListView * _favoriteTodayPageListView;
    long long  _favoriteTodayViewPageIndex;
    <SBIconListViewIconLocationTransitioning> * _firstListViewIconLocationTransitionHandler;
    unsigned long long  _folderPageManagementAllowedOrientations;
    SBHRootFolderSettings * _folderSettings;
    long long  _iconListFrameOrientationOverride;
    UILabel * _idleTextView;
    unsigned long long  _ignoresOverscrollOnFirstPageOrientations;
    unsigned long long  _ignoresOverscrollOnLastPageOrientations;
    bool  _isTodayViewBouncing;
    bool  _lastEventWasAttemptingToOverscrollFirstPage;
    bool  _lastEventWasAttemptingToOverscrollLastPage;
    bool  _occludedByOverlay;
    _SBRootFolderViewElementBorrowedAssertion * _pageControlBorrowedAssertion;
    double  _pageWidthWhenScrollToSearchBeganDragging;
    SBFParallaxSettings * _parallaxSettings;
    double  _pullDownSearchVisibilityProgress;
    double  _scrollOffsetWhenScrollingBegan;
    bool  _scrollToSearchIsDraggingOrAnimating;
    double  _scrollingAdjustment;
    SBSearchBackdropView * _searchBackdropView;
    SBSearchGesture * _searchGesture;
    _SBRootFolderLayoutWrapperView * _searchPulldownWrapperView;
    _SBRootFolderLayoutWrapperView * _searchableTodayWrapperView;
    _SBRootFolderLayoutWrapperView * _searchableTrailingCustomWrapperView;
    bool  _shiftsPullDownSearchForVisibility;
    bool  _showsAddWidgetButton;
    bool  _showsDoneButton;
    unsigned long long  _sidebarAllowedOrientations;
    bool  _sidebarEffectivelyVisible;
    double  _sidebarPinned;
    bool  _sidebarSlideGestureActive;
    double  _sidebarVisibilityProgress;
    bool  _sidebarVisibleWhenScrollingBegan;
    _SBRootFolderLayoutWrapperView * _sidebarWrapperView;
    <SBRootFolderViewLayoutManager> * _specialLayoutManager;
    double  _titledButtonsAlpha;
    SBFTouchPassThroughView * _titledButtonsContainerView;
    SBIconListView * _todayPageListView;
    bool  _todayViewBouncing;
    bool  _todayViewPageHidden;
    double  _todayViewVisibilityProgress;
    SBSearchBackdropView * _trailingCustomBackdropView;
    UIView * _trailingCustomSearchDimmingView;
    double  _trailingCustomViewVisibilityProgress;
    <SBRootFolderViewLayoutManager> * _transitioningNewSpecialLayoutManager;
    <SBRootFolderViewLayoutManager> * _transitioningOldSpecialLayoutManager;
    bool  _userAttemptedToOverscrollFirstPageDuringCurrentGesture;
    bool  _userAttemptedToOverscrollLastPageDuringCurrentGesture;
    bool  _wasScrolling;
    SBTitledHomeScreenButton * _widgetButton;
}

@property (nonatomic) bool allowsAutoscrollToTodayView;
@property (nonatomic) bool allowsFreeScrollingUntilScrollingEnds;
@property (nonatomic, readonly) double currentDockOffscreenFraction;
@property (nonatomic, readonly) SBHMinusPageStepper *customPageAnimationStepper;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBRootFolderViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *dockBorrowedAssertion;
@property (nonatomic) unsigned long long dockEdge;
@property (getter=isDockExternal, nonatomic, readonly) bool dockExternal;
@property (nonatomic, readonly) double dockHeight;
@property (nonatomic, readonly, copy) NSString *dockIconLocation;
@property (nonatomic, readonly) SBDockIconListView *dockListView;
@property (getter=isDockPinnedForRotation, nonatomic, readonly) bool dockPinnedForRotation;
@property (nonatomic, readonly) SBDockView *dockView;
@property (getter=isDockVisible, nonatomic, readonly) bool dockVisible;
@property (nonatomic, retain) SBTitledHomeScreenButton *doneButton;
@property (nonatomic, readonly) double effectiveSidebarVisibilityProgress;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } enterEditingTouchRect;
@property (nonatomic, readonly) long long favoriteTodayViewPageIndex;
@property (nonatomic, retain) <SBIconListViewIconLocationTransitioning> *firstListViewIconLocationTransitionHandler;
@property (nonatomic, retain) SBRootFolder *folder;
@property (nonatomic, readonly) unsigned long long folderPageManagementAllowedOrientations;
@property (nonatomic, retain) SBHRootFolderSettings *folderSettings;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hidesOffscreenCustomPageViews;
@property (nonatomic, readonly) UILabel *idleTextView;
@property (nonatomic, readonly) unsigned long long ignoresOverscrollOnFirstPageOrientations;
@property (nonatomic, readonly) unsigned long long ignoresOverscrollOnLastPageOrientations;
@property (nonatomic, readonly) <SBRootFolderViewLayoutManager> *layoutManager;
@property (getter=isOccludedByOverlay, nonatomic) bool occludedByOverlay;
@property (getter=isOnTodayPage, nonatomic, readonly) bool onTodayPage;
@property (getter=isOnTrailingCustomPage, nonatomic, readonly) bool onTrailingCustomPage;
@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *pageControlBorrowedAssertion;
@property (getter=isPageManagementUIVisible, nonatomic, readonly) bool pageManagementUIVisible;
@property (nonatomic, readonly) SBFParallaxSettings *parallaxSettings;
@property (nonatomic, readonly) UIView *pullDownSearchView;
@property (nonatomic) double pullDownSearchVisibilityProgress;
@property (nonatomic) double scrollingAdjustment;
@property (nonatomic, readonly) SBSearchBackdropView *searchBackdropView;
@property (nonatomic, retain) SBSearchGesture *searchGesture;
@property (getter=isSearchHidden, nonatomic) bool searchHidden;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchPulldownWrapperView;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchableTodayWrapperView;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchableTrailingCustomWrapperView;
@property (nonatomic) bool shiftsPullDownSearchForVisibility;
@property (nonatomic, readonly) bool shouldFadeDockOutDuringTransitionToTodayView;
@property (nonatomic, readonly) bool shouldFadePageControlOutDuringTransitionToTodayView;
@property (nonatomic) bool showsAddWidgetButton;
@property (nonatomic) bool showsDoneButton;
@property (nonatomic, readonly) unsigned long long sidebarAllowedOrientations;
@property (getter=isSidebarEffectivelyVisible, nonatomic) bool sidebarEffectivelyVisible;
@property (nonatomic, readonly) long long sidebarPageIndex;
@property (getter=isSidebarPinned, nonatomic) double sidebarPinned;
@property (getter=isSidebarSlideGestureActive, nonatomic) bool sidebarSlideGestureActive;
@property (nonatomic, readonly) UIView *sidebarView;
@property (getter=isSidebarVisibilityGestureActive, nonatomic, readonly) bool sidebarVisibilityGestureActive;
@property (nonatomic) double sidebarVisibilityProgress;
@property (getter=wasSidebarVisibleWhenScrollingBegan, nonatomic) bool sidebarVisibleWhenScrollingBegan;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *sidebarWrapperView;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *specialLayoutManager;
@property (readonly) Class superclass;
@property (nonatomic) double titledButtonsAlpha;
@property (nonatomic, retain) SBFTouchPassThroughView *titledButtonsContainerView;
@property (nonatomic, readonly) UIView *todayView;
@property (getter=isTodayViewBouncing, nonatomic) bool todayViewBouncing;
@property (getter=isTodayViewPageHidden, nonatomic) bool todayViewPageHidden;
@property (nonatomic, readonly) long long todayViewPageIndex;
@property (nonatomic, readonly) double todayViewPageScrollOffset;
@property (nonatomic) double todayViewVisibilityProgress;
@property (nonatomic, readonly) UIView *todayViewWrapperView;
@property (nonatomic, readonly) SBSearchBackdropView *trailingCustomBackdropView;
@property (nonatomic, readonly) UIView *trailingCustomSearchDimmingView;
@property (nonatomic, readonly) UIView *trailingCustomView;
@property (nonatomic, readonly) long long trailingCustomViewPageIndex;
@property (nonatomic, readonly) double trailingCustomViewPageScrollOffset;
@property (nonatomic) double trailingCustomViewVisibilityProgress;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *transitioningNewSpecialLayoutManager;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *transitioningOldSpecialLayoutManager;
@property (nonatomic) bool userAttemptedToOverscrollFirstPageDuringCurrentGesture;
@property (nonatomic) bool userAttemptedToOverscrollLastPageDuringCurrentGesture;
@property (nonatomic, retain) SBTitledHomeScreenButton *widgetButton;

+ (void)_editButtonLayoutFramesInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forVisualConfiguration:(id)arg2 withTranslationOffset:(double)arg3 inRTL:(bool)arg4 doneButton:(id)arg5 addWidgetButton:(id)arg6 doneButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg7 addWidgetButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg8;
+ (id)defaultIconLocation;
+ (id)dockIconLocation;
+ (id)sidebarVisibilityProgressAnimator;

- (void).cxx_destruct;
- (void)_adjustTodayContentForEdgeBounce;
- (void)_animateViewsForPullingToSearch;
- (void)_animateViewsForPullingToSearchWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_animateViewsForScrollingToTodayView;
- (void)_animateViewsForScrollingToTodayViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_captureInitialSearchScrollTrackingState;
- (void)_checkSidebarVisibilityProgressAfterScroll;
- (void)_cleanUpAfterOverscrollScrollGestureEnded:(id)arg1;
- (void)_cleanUpAfterScrolling;
- (void)_cleanupAfterExtraScrollGesturesCompleted;
- (void)_cleanupAfterSidebarSlideGestureCompleted:(id)arg1;
- (id)_createIconListViewForList:(id)arg1;
- (void)_currentPageIndexDidChangeFromPageIndex:(long long)arg1;
- (void)_doPageManagementEducation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_iconListFrameForPageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atIndex:(unsigned long long)arg2;
- (bool)_isSidebarCollapsed;
- (bool)_isSidebarEnabledForCurrentOrientation;
- (bool)_isSidebarEnabledForCurrentPage;
- (bool)_isSidebarEnabledForIconListIndex:(unsigned long long)arg1 orientation:(long long)arg2;
- (bool)_isSidebarEnabledForOrientation:(long long)arg1;
- (bool)_isSidebarEnabledForPageIndex:(long long)arg1;
- (bool)_isSidebarEnabledForPageIndex:(long long)arg1 orientation:(long long)arg2;
- (void)_layoutSubviews;
- (void)_layoutSubviewsForPulldownSearch;
- (void)_layoutSubviewsForSidebarWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_layoutSubviewsForTodayViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (unsigned long long)_leadingCustomPageCount;
- (double)_minimumHomeScreenScale;
- (void)_overscrollScrollPanGestureRecognizerDidUpdate:(id)arg1;
- (long long)_pageCountForPageControl;
- (double)_pageWidth;
- (void)_prepareSidebarViewForOrientationTransition;
- (void)_resetSearchScrollTrackingState;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scaledBoundsForMinimumHomeScreenScale;
- (struct CGPoint { double x1; double x2; })_scrollOffsetForContentAtPageIndex:(long long)arg1;
- (struct CGPoint { double x1; double x2; })_scrollOffsetForPageAtIndex:(long long)arg1 pageWidth:(double)arg2;
- (struct CGPoint { double x1; double x2; })_scrollView:(id)arg1 adjustedOffsetForOffset:(struct CGPoint { double x1; double x2; })arg2 translation:(struct CGPoint { double x1; double x2; })arg3 startPoint:(struct CGPoint { double x1; double x2; })arg4 locationInView:(struct CGPoint { double x1; double x2; })arg5 horizontalVelocity:(inout double*)arg6 verticalVelocity:(inout double*)arg7;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scrollViewFrameForDockEdge:(unsigned long long)arg1;
- (void)_setSidebarViewHidden:(bool)arg1;
- (void)_setupIdleTextPrivacyDisclosures;
- (void)_setupSearchBackdropViewIfNecessary;
- (void)_setupStateDumper;
- (void)_setupTrailingCustomBackdropViewIfNecessary;
- (void)_setupTrailingCustomDimmingViewIfNecessary;
- (bool)_shouldHideSidebarView;
- (bool)_shouldIgnoreOverscrollOnFirstPageForCurrentOrientation;
- (bool)_shouldIgnoreOverscrollOnFirstPageForOrientation:(long long)arg1;
- (bool)_shouldIgnoreOverscrollOnLastPageForCurrentOrientation;
- (bool)_shouldIgnoreOverscrollOnLastPageForOrientation:(long long)arg1;
- (void)_sidebarScrollPanGestureRecognizerDidUpdate:(id)arg1;
- (double)_sidebarVisibilityProgressForPanGestureRecognizer:(id)arg1 presenting:(bool)arg2;
- (double)_spotlightFirstIconRowOffset;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_statusBarInsetsForDockEdge:(unsigned long long)arg1 dockOffscreenPercentage:(double)arg2;
- (unsigned long long)_trailingCustomPageCount;
- (void)_updateDockBackgroundViewForOcclusionByOverlay;
- (void)_updateDockOffscreenFractionWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_updateDockViewZOrdering;
- (void)_updateEditingStateAnimated:(bool)arg1;
- (void)_updateIconListIndexSearchableAndTodayViewsWithLayout:(bool)arg1;
- (void)_updateIconListLegibilitySettings;
- (void)_updateParallaxSettings;
- (void)_updateScrollingState:(bool)arg1;
- (void)_updateSidebarViewHidden;
- (void)_willScrollToPageIndex:(long long)arg1 animated:(bool)arg2;
- (id)accessibilityTintColorForDockView:(id)arg1;
- (id)additionalIconListViews;
- (double)additionalScrollWidthToKeepVisibleInOneDirection;
- (bool)allowsAutoscrollToTodayView;
- (bool)allowsFreeScrollingUntilScrollingEnds;
- (id)beginModifyingDockOffscreenFractionForReason:(id)arg1;
- (id)borrowDockViewForReason:(id)arg1;
- (id)borrowPageControlForReason:(id)arg1;
- (void)cleanUpAfterTransition;
- (void)clientDidChangeDockOffScreenFraction:(id)arg1;
- (void)configurePageControlToAllowEnteringPageManagement:(bool)arg1;
- (double)currentDockOffscreenFraction;
- (id)customPageAnimationStepper;
- (void)dealloc;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (void)didMoveToSuperview;
- (id)dockBorrowedAssertion;
- (unsigned long long)dockEdge;
- (double)dockHeight;
- (id)dockIconLocation;
- (id)dockListView;
- (id)dockView;
- (id)doneButton;
- (void)doneButtonTriggered:(id)arg1;
- (double)effectiveSidebarVisibilityProgress;
- (void)elementBorrowedAssertionDidInvalidate:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })enterEditingTouchRect;
- (void)enterPageManagementUIWithCompletionHandler:(id /* block */)arg1;
- (void)enumerateScrollViewPageViewsUsingBlock:(id /* block */)arg1;
- (void)exitPageManagementUIWithCompletionHandler:(id /* block */)arg1;
- (void)fadeContentForMinificationFraction:(double)arg1;
- (long long)favoriteTodayViewPageIndex;
- (id)firstListViewIconLocationTransitionHandler;
- (void)folderDidChange;
- (unsigned long long)folderPageManagementAllowedOrientations;
- (id)folderSettings;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1 dockEdge:(unsigned long long)arg2;
- (bool)hidesOffscreenCustomPageViews;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)iconListViewAtIndex:(unsigned long long)arg1;
- (id)iconListViewAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)iconListViewForExtraIndex:(unsigned long long)arg1;
- (id)iconListViewForIconListModelIndex:(unsigned long long)arg1;
- (id)iconLocationForList:(id)arg1;
- (bool)iconScrollView:(id)arg1 shouldSetAutoscrollContentOffset:(struct CGPoint { double x1; double x2; })arg2;
- (bool)iconScrollView:(id)arg1 shouldSetContentOffset:(struct CGPoint { double x1; double x2; }*)arg2 animated:(bool)arg3;
- (void)iconScrollViewDidCancelTouchTracking:(id)arg1;
- (id)idleTextView;
- (unsigned long long)ignoresOverscrollOnFirstPageOrientations;
- (unsigned long long)ignoresOverscrollOnLastPageOrientations;
- (id)initWithConfiguration:(id)arg1;
- (double)internalDockPageControlVerticalMargin;
- (bool)isDockExternal;
- (bool)isDockPinnedForRotation;
- (bool)isDockViewBorrowed;
- (bool)isDockVisible;
- (bool)isModifyingDockOffscreenFraction;
- (bool)isOccludedByOverlay;
- (bool)isOnSidebarPage;
- (bool)isOnTodayPage;
- (bool)isOnTrailingCustomPage;
- (bool)isPageControlBorrowed;
- (bool)isPageIndexCustomAndRightmost:(long long)arg1;
- (bool)isPageManagementUIVisible;
- (bool)isSearchHidden;
- (bool)isSidebarEffectivelyVisible;
- (double)isSidebarPinned;
- (bool)isSidebarSlideGestureActive;
- (bool)isSidebarVisibilityGestureActive;
- (bool)isTodayViewBouncing;
- (bool)isTodayViewPageHidden;
- (void)layoutDockViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)layoutIconLists:(double)arg1 animationType:(long long)arg2 forceRelayout:(bool)arg3;
- (id)layoutManager;
- (void)layoutPageControlWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)layoutSearchableViews;
- (void)layoutSearchableViewsWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (id)makeTitledButtonOfClass:(Class)arg1;
- (double)maxDockHeight;
- (void)minimumHomeScreenScaleDidChange;
- (double)minimumHomeScreenScaleForDockView:(id)arg1;
- (id)newDockBackgroundMaterialViewWithInitialWeighting:(double)arg1;
- (id)newDockBackgroundView;
- (id)newHomeScreenButtonBackgroundView;
- (void)noteSidebarFinishedAnimating;
- (void)noteSidebarIsAnimating;
- (id)pageControlBorrowedAssertion;
- (void)pageControlDidReceiveButtonTap:(id)arg1;
- (id)parallaxSettings;
- (void)prepareForTransition;
- (void)prepareToTearDown;
- (id)pullDownSearchView;
- (double)pullDownSearchVisibilityProgress;
- (void)remoteBasebandLogCollectionStateDidChange:(bool)arg1;
- (void)removeDockOffscreenFractionClient:(id)arg1;
- (void)resetIconListViews;
- (void)returnScalingView;
- (id)rootFolderVisualConfiguration;
- (id)rootListLayout;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (bool)scrollViewHeightIncludesPageControlAndDock;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (double)scrollableWidthForVisibleColumnRange;
- (double)scrollingAdjustment;
- (id)searchBackdropView;
- (id)searchGesture;
- (id)searchPulldownWrapperView;
- (id)searchableTodayWrapperView;
- (id)searchableTrailingCustomWrapperView;
- (void)setAllowsAutoscrollToTodayView:(bool)arg1;
- (void)setAllowsFreeScrollingUntilScrollingEnds:(bool)arg1;
- (void)setContentAlpha:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDockBorrowedAssertion:(id)arg1;
- (void)setDockEdge:(unsigned long long)arg1;
- (void)setDoneButton:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setFirstListViewIconLocationTransitionHandler:(id)arg1;
- (void)setFolderSettings:(id)arg1;
- (void)setIdleText:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setNeedsLayout;
- (void)setOccluded:(bool)arg1;
- (void)setOccludedByOverlay:(bool)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setPageControlBorrowedAssertion:(id)arg1;
- (void)setPullDownSearchVisibilityProgress:(double)arg1;
- (void)setScrollingAdjustment:(double)arg1;
- (void)setSearchGesture:(id)arg1;
- (void)setSearchHidden:(bool)arg1;
- (void)setShiftsPullDownSearchForVisibility:(bool)arg1;
- (void)setShowsAddWidgetButton:(bool)arg1;
- (void)setShowsAddWidgetButton:(bool)arg1 animated:(bool)arg2;
- (void)setShowsDoneButton:(bool)arg1;
- (void)setShowsDoneButton:(bool)arg1 animated:(bool)arg2;
- (void)setSidebarEffectivelyVisible:(bool)arg1;
- (void)setSidebarPinned:(double)arg1;
- (void)setSidebarSlideGestureActive:(bool)arg1;
- (void)setSidebarVisibilityProgress:(double)arg1;
- (void)setSidebarVisibilityProgress:(double)arg1 animator:(id)arg2;
- (void)setSidebarVisibleWhenScrollingBegan:(bool)arg1;
- (void)setSpecialLayoutManager:(id)arg1;
- (void)setSpecialLayoutManager:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setTitledButtonsAlpha:(double)arg1;
- (void)setTitledButtonsContainerView:(id)arg1;
- (void)setTodayViewBouncing:(bool)arg1;
- (void)setTodayViewPageHidden:(bool)arg1;
- (void)setTodayViewVisibilityProgress:(double)arg1;
- (void)setTrailingCustomViewVisibilityProgress:(double)arg1;
- (void)setTransitioningNewSpecialLayoutManager:(id)arg1;
- (void)setTransitioningOldSpecialLayoutManager:(id)arg1;
- (void)setUserAttemptedToOverscrollFirstPageDuringCurrentGesture:(bool)arg1;
- (void)setUserAttemptedToOverscrollLastPageDuringCurrentGesture:(bool)arg1;
- (void)setWidgetButton:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shiftsPullDownSearchForVisibility;
- (bool)shouldEndSidebarGestureWithSidebarVisibleWithCurrentProgress:(double)arg1 velocity:(double)arg2;
- (bool)shouldFadeDockOutDuringTransitionToTodayView;
- (bool)shouldFadePageControlOutDuringTransitionToTodayView;
- (bool)shouldPinScrollingToFirstOrLastPageScrollOffsetForProposedScrollOffset:(struct CGPoint { double x1; double x2; }*)arg1;
- (bool)shouldScrollDockDuringTransitionToTodayView;
- (bool)shouldScrollPageControlDuringTransitionToTodayView;
- (bool)showsAddWidgetButton;
- (bool)showsDoneButton;
- (unsigned long long)sidebarAllowedOrientations;
- (long long)sidebarPageIndex;
- (id)sidebarView;
- (double)sidebarViewPageScrollOffsetUsingPageWidth:(double)arg1;
- (double)sidebarVisibilityProgress;
- (double)sidebarVisibilityProgressForLayout;
- (double)sidebarWidthUsingPageWidth:(double)arg1;
- (id)sidebarWrapperView;
- (id)specialLayoutManager;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })statusBarInsetsForDockEdge:(unsigned long long)arg1;
- (void)tearDownListViews;
- (double)titledButtonsAlpha;
- (id)titledButtonsContainerView;
- (id)todayView;
- (long long)todayViewPageIndex;
- (double)todayViewPageScrollOffset;
- (double)todayViewPageScrollOffsetUsingPageWidth:(double)arg1;
- (double)todayViewVisibilityProgress;
- (id)todayViewWrapperView;
- (id)trailingCustomBackdropView;
- (id)trailingCustomSearchDimmingView;
- (id)trailingCustomView;
- (long long)trailingCustomViewPageIndex;
- (double)trailingCustomViewPageScrollOffset;
- (double)trailingCustomViewPageScrollOffsetUsingPageWidth:(double)arg1;
- (double)trailingCustomViewVisibilityProgress;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)transitioningNewSpecialLayoutManager;
- (id)transitioningOldSpecialLayoutManager;
- (void)updateAccessibilityTintColors;
- (void)updateConfigurationOfPageControlToAllowEnteringPageManagement;
- (void)updateDockViewOrientation;
- (void)updateIconListIndexAndVisibility:(bool)arg1;
- (void)updateIconListViews;
- (bool)userAttemptedToOverscrollFirstPageDuringCurrentGesture;
- (bool)userAttemptedToOverscrollLastPageDuringCurrentGesture;
- (bool)wasSidebarVisibleWhenScrollingBegan;
- (id)widgetButton;
- (void)widgetButtonTriggered:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

@end
