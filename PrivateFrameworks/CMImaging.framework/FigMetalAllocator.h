/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMImaging.framework/CMImaging
 */

@interface FigMetalAllocator : NSObject {
    int  _allocatorType;
    bool  _dryRun;
    bool  _isExternalMemory;
    NSString * _label;
    unsigned long long  _largestOccupiedOffset;
    unsigned long long  _memSize;
    struct MTLRangeAllocator { 
        struct MTLRangeAllocatorElement {} *elements; 
        unsigned int numElements; 
        unsigned long long capacity; 
        unsigned long long capacityIncrement; 
        unsigned long long defaultAlignmentMask; 
    }  _rangeAllocator;
    unsigned long long  _resourceOptions;
    <FigMetalAllocatorImpl> * _storage;
    FigMetalTextureDescriptor * _texDesc;
    FigMetalUtils * _utils;
    FigMetalAllocator * subAllocator;
    unsigned long long  usedSize;
}

@property (nonatomic, readonly) int allocatorType;
@property (nonatomic, readonly) bool dryRun;
@property (nonatomic, readonly) unsigned long long largestOccupiedOffset;
@property (nonatomic, readonly) unsigned long long memSize;
@property (nonatomic, readonly) unsigned long long resourceOptions;
@property (nonatomic, readonly) unsigned long long usedSize;

- (void).cxx_destruct;
- (int)addExternalMetalBuffer:(id)arg1 atSubAllocatorID:(unsigned int)arg2;
- (int)allocatorType;
- (void)dealloc;
- (id)description;
- (bool)dryRun;
- (id)initWithDevice:(id)arg1 allocatorType:(int)arg2;
- (unsigned long long)largestOccupiedOffset;
- (unsigned long long)largestOccupiedOffset:(unsigned int)arg1;
- (void)makeTextureAliasable:(id*)arg1;
- (unsigned long long)memSize;
- (unsigned long long)memSize:(unsigned int)arg1;
- (id)newTextureWithDescriptor:(id)arg1;
- (id)newTextureWithDescriptor:(id)arg1 subAllocatorID:(unsigned int)arg2;
- (void)purgeResources;
- (void)purgeResources:(unsigned int)arg1;
- (void)reset;
- (void)reset:(unsigned int)arg1;
- (unsigned long long)resourceOptions;
- (int)setupWithDescriptor:(id)arg1;
- (unsigned long long)usedSize;
- (unsigned long long)usedSize:(unsigned int)arg1;
- (unsigned long long)usedSizeAll;

@end
