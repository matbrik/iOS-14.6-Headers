/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface _GCHapticSyntheticCommand : NSObject {
    unsigned long long  _channelOrSeqID;
    unsigned long long  _identifier;
    _GCHapticParameterCurve * _parameterCurve;
    unsigned long long  _serverID;
    double  _time;
    _GCHapticTokenAndParams * _tokenAndParams;
    unsigned short  _type;
    float  _value;
}

@property (nonatomic, readonly) unsigned long long channelID;
@property (nonatomic, readonly) unsigned short command;
@property (nonatomic, readonly) unsigned long long eventID;
@property (nonatomic, readonly) unsigned long long paramID;
@property (nonatomic, readonly) _GCHapticParameterCurve *parameterCurve;
@property (nonatomic, readonly) unsigned long long sequenceID;
@property (nonatomic, readonly) unsigned long long serverID;
@property (nonatomic, readonly) double time;
@property (nonatomic, readonly) _GCHapticTokenAndParams *tokenAndParams;
@property (nonatomic, readonly) unsigned short type;
@property (nonatomic, readonly) float value;

- (void).cxx_destruct;
- (void)cancel;
- (unsigned long long)channelID;
- (unsigned short)command;
- (id)description;
- (unsigned long long)eventID;
- (id)initWithHapticCommand:(const struct HapticCommand { struct MessageHeader { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; unsigned int x2; double x3; unsigned long long x4; unsigned long long x5; union u { struct TokenAndParams { unsigned long long x_1_2_1; struct ItemList<FixedParam, 8> { unsigned int x_2_3_1; struct FixedParam { unsigned int x_2_4_1; float x_2_4_2; } x_2_3_2[8]; } x_1_2_2; } x_6_1_1; struct SequenceChannelParam { unsigned long long x_2_2_1; unsigned long long x_2_2_2; float x_2_2_3; } x_6_1_2; struct SequenceParam { unsigned short x_3_2_1; float x_3_2_2; } x_6_1_3; float x_6_1_4; double x_6_1_5; struct ItemList<ParamPoint, 16> { unsigned int x_6_2_1; struct ParamPoint { float x_2_3_1; float x_2_3_2; } x_6_2_2[16]; } x_6_1_6; } x6; }*)arg1;
- (unsigned long long)paramID;
- (id)parameterCurve;
- (void)preprocessCommand:(const struct HapticCommand { struct MessageHeader { unsigned short x_1_1_1; unsigned short x_1_1_2; } x1; unsigned int x2; double x3; unsigned long long x4; unsigned long long x5; union u { struct TokenAndParams { unsigned long long x_1_2_1; struct ItemList<FixedParam, 8> { unsigned int x_2_3_1; struct FixedParam { unsigned int x_2_4_1; float x_2_4_2; } x_2_3_2[8]; } x_1_2_2; } x_6_1_1; struct SequenceChannelParam { unsigned long long x_2_2_1; unsigned long long x_2_2_2; float x_2_2_3; } x_6_1_2; struct SequenceParam { unsigned short x_3_2_1; float x_3_2_2; } x_6_1_3; float x_6_1_4; double x_6_1_5; struct ItemList<ParamPoint, 16> { unsigned int x_6_2_1; struct ParamPoint { float x_2_3_1; float x_2_3_2; } x_6_2_2[16]; } x_6_1_6; } x6; }*)arg1;
- (unsigned long long)sequenceID;
- (unsigned long long)serverID;
- (double)time;
- (id)tokenAndParams;
- (unsigned short)type;
- (float)value;

@end
