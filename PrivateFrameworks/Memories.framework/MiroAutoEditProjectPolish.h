/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroAutoEditProjectPolish : NSObject {
    MiroBlueprint * _blueprint;
    NSMutableArray * _conversionNeeded;
    MiroAutoEditController * _editController;
    NSDictionary * _featuredPersonsInMemoryAsFaceRanges;
    NSDictionary * _freezeRanges;
    PHAsset * _keyAsset;
    NSMutableArray * _layoutClips;
    MiroAutoEditLogger * _logger;
    unsigned long long  _memoryCategory;
    bool  _memoryFeaturesPeople;
    NSDictionary * _memoryFeaturesPersonInAsset;
    unsigned long long  _memorySubcategory;
    bool  _memoryTypeDisablesCropping;
    MiroAutoEditMultiUpController * _multiController;
    MiroPickList * _picklist;
    Project * _project;
    bool  _titleIsSupported;
    MiroAutoEditTransitionController * _transitionsController;
}

@property (nonatomic, retain) MiroBlueprint *blueprint;
@property (nonatomic, retain) NSMutableArray *conversionNeeded;
@property (nonatomic) MiroAutoEditController *editController;
@property (nonatomic, retain) NSDictionary *featuredPersonsInMemoryAsFaceRanges;
@property (nonatomic, retain) NSDictionary *freezeRanges;
@property (nonatomic, retain) PHAsset *keyAsset;
@property (nonatomic, retain) NSMutableArray *layoutClips;
@property (nonatomic, retain) MiroAutoEditLogger *logger;
@property (nonatomic) unsigned long long memoryCategory;
@property (nonatomic) bool memoryFeaturesPeople;
@property (nonatomic, retain) NSDictionary *memoryFeaturesPersonInAsset;
@property (nonatomic) unsigned long long memorySubcategory;
@property (nonatomic) bool memoryTypeDisablesCropping;
@property (nonatomic, retain) MiroAutoEditMultiUpController *multiController;
@property (nonatomic) MiroPickList *picklist;
@property (nonatomic, retain) Project *project;
@property (nonatomic) bool titleIsSupported;
@property (nonatomic, retain) MiroAutoEditTransitionController *transitionsController;

- (void).cxx_destruct;
- (id)_everyTitleDEBUG;
- (void)_updateSpeedRampsForClip:(id)arg1 beginningRampDurationSeconds:(double)arg2 endingRampDurationSeconds:(double)arg3;
- (void)adjustSlowMotionSpeedRamps;
- (void)adjustVideoPositioningBasedOnMetadata;
- (unsigned long long)allowedBurstStylesFromBlueprint:(id)arg1;
- (id)applyAudioPolish;
- (void)applyAutomaticThemeTitleToClip:(id)arg1 forPoster:(bool)arg2;
- (void)applyBurstEffect;
- (void)applyClipPolish;
- (void)applyIrisEffect;
- (void)applyMultiUpTreatments;
- (void)applyTitleToFirstClip;
- (void)applyTransitions;
- (void)batchConvertCompoundClipsToKenBurnsClips;
- (id)blueprint;
- (void)cleanup;
- (void)clearAllStandardClipEffects;
- (bool)clipIsViableZoomToPersonCandidate:(id)arg1;
- (id)conversionNeeded;
- (void)convertSpecialClipTypeToKenBurnsClip:(id)arg1;
- (void)createLayoutClips;
- (void)createTransitionControllerAndPrepare;
- (id)editController;
- (bool)extremeCropAllowed;
- (id)featuredPersonsInMemoryAsFaceRanges;
- (id)freezeRanges;
- (bool)isPortraitSquareVideo:(id)arg1;
- (id)keyAsset;
- (id)layoutClips;
- (id)logger;
- (unsigned long long)memoryCategory;
- (bool)memoryFeaturesPeople;
- (id)memoryFeaturesPersonInAsset;
- (bool)memoryFeaturesPersonInAsset:(id)arg1;
- (unsigned long long)memorySubcategory;
- (bool)memoryTypeDisablesCropping;
- (id)multiController;
- (bool)multiUpSupportedForAspect:(int)arg1;
- (id)picklist;
- (id)polishProject;
- (id)project;
- (void)removeIrisStylesFromFirstThreeClips;
- (void)setBlueprint:(id)arg1;
- (void)setConversionNeeded:(id)arg1;
- (void)setEditController:(id)arg1;
- (void)setFeaturedPersonsInMemoryAsFaceRanges:(id)arg1;
- (void)setFreezeRanges:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setLayoutClips:(id)arg1;
- (void)setLogger:(id)arg1;
- (void)setMemoryCategory:(unsigned long long)arg1;
- (void)setMemoryFeaturesPeople:(bool)arg1;
- (void)setMemoryFeaturesPersonInAsset:(id)arg1;
- (void)setMemorySubcategory:(unsigned long long)arg1;
- (void)setMemoryTypeDisablesCropping:(bool)arg1;
- (void)setMultiController:(id)arg1;
- (void)setPicklist:(id)arg1;
- (void)setProject:(id)arg1;
- (void)setTitleIsSupported:(bool)arg1;
- (void)setTransitionsController:(id)arg1;
- (void)setVideoScaleFactorXPostitionFor:(id)arg1 boundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)setVideoScaleFactorYPostitionFor:(id)arg1 boundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (float)sideScaleOffsetForScaleFactor:(float)arg1;
- (bool)titleIsSupported;
- (id)transitionsController;
- (id)videoFramingRangesFor:(id)arg1;

@end
