/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Vision.framework/Vision
 */

@interface VNImageSignatureDetector : VNDetector {
    struct unique_ptr<vision::mod::ImageDescriptorProcessorHyperplaneLSH<float>, std::__1::default_delete<vision::mod::ImageDescriptorProcessorHyperplaneLSH<float>>> { 
        struct __compressed_pair<vision::mod::ImageDescriptorProcessorHyperplaneLSH<float> *, std::__1::default_delete<vision::mod::ImageDescriptorProcessorHyperplaneLSH<float>>> { 
            struct ImageDescriptorProcessorHyperplaneLSH<float> {} *__value_; 
        } __ptr_; 
    }  _hyperplaneLSHProcessor;
    unsigned long long  _imageSignatureHashType;
    unsigned long long  _imageSignatureprintType;
}

@property (nonatomic, readonly) unsigned long long imageSignatureHashType;
@property (nonatomic, readonly) unsigned long long imageSignatureprintType;

+ (id)configurationOptionKeysForDetectorKey;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct shared_ptr<vision::mod::ImageDescriptorBufferAbstract> { struct ImageDescriptorBufferAbstract {} *x1; struct __shared_weak_count {} *x2; })_calculateImageSignatureHashDescriptorFrom:(const struct shared_ptr<vision::mod::ImageDescriptorBufferAbstract> { struct ImageDescriptorBufferAbstract {} *x1; struct __shared_weak_count {} *x2; }*)arg1 options:(id)arg2 error:(id*)arg3;
- (struct shared_ptr<vision::mod::ImageDescriptorBufferAbstract> { struct ImageDescriptorBufferAbstract {} *x1; struct __shared_weak_count {} *x2; })_calculateImageSignatureprintDescriptorFromOptions:(id)arg1 error:(id*)arg2;
- (bool)completeInitializationForSession:(id)arg1 error:(id*)arg2;
- (unsigned long long)imageSignatureHashType;
- (unsigned long long)imageSignatureprintType;
- (bool)needsMetalContext;
- (id)processWithOptions:(id)arg1 regionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 warningRecorder:(id)arg3 error:(id*)arg4;
- (bool)supportsProcessingDevice:(id)arg1;

@end
