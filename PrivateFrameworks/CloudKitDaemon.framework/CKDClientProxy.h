/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDClientProxy : NSObject <CKDSystemAvailabilityWatcher> {
    <NSObject> * _TCCDatabaseChangedNotificationObserver;
    CKDApplicationID * _applicationID;
    NSOperationQueue * _backgroundOperationThrottleQueue;
    NSString * _cachedApplicationBundleID;
    NSArray * _cachedSandboxExtensions;
    bool  _canOpenByID;
    bool  _canUsePackages;
    NSObject<OS_dispatch_queue> * _cancellationQueue;
    NSOperationQueue * _cleanupOperationQueue;
    NSOperationQueue * _cloudKitSupportOperationThrottleQueue;
    NSXPCConnection * _connection;
    NSDate * _connectionDate;
    NSDictionary * _connectionEntitlements;
    CKDClientContext * _context;
    CKDPCSFetchAggregator * _fetchAggregator;
    bool  _hasBeenThrottled;
    bool  _hasFakeEntitlements;
    long long  _hasTCCAuthorizationTernary;
    long long  _hasValidatedEntitlementsTernary;
    bool  _holdAllOperations;
    NSOperationQueue * _operationQueue;
    NSMutableDictionary * _operationStatisticsByClassName;
    NSMutableArray * _pendingContexts;
    NSMutableSet * _pendingOperationIDs;
    int  _pid;
    NSString * _procName;
    bool  _sandboxed;
    NSObject<OS_dispatch_queue> * _setupQueue;
    NSObject<OS_dispatch_queue> * _statusQueue;
    NSOperationQueue * _tccAuthOpQueue;
    NSObject<OS_dispatch_queue> * _tccAuthQueue;
}

@property (nonatomic, retain) <NSObject> *TCCDatabaseChangedNotificationObserver;
@property (nonatomic, readonly) unsigned long long _outstandingOperationCount;
@property (nonatomic, readonly) NSString *applicationBundleIdentifierForPush;
@property (retain) CKDApplicationID *applicationID;
@property (nonatomic, readonly) NSString *associatedApplicationBundleID;
@property (nonatomic, retain) NSOperationQueue *backgroundOperationThrottleQueue;
@property (nonatomic, retain) NSString *cachedApplicationBundleID;
@property (nonatomic, retain) NSArray *cachedSandboxExtensions;
@property (nonatomic) bool canOpenByID;
@property (nonatomic) bool canUsePackages;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *cancellationQueue;
@property (nonatomic, retain) NSOperationQueue *cleanupOperationQueue;
@property (nonatomic, retain) NSOperationQueue *cloudKitSupportOperationThrottleQueue;
@property (nonatomic) NSXPCConnection *connection;
@property (nonatomic, retain) NSDate *connectionDate;
@property (nonatomic, retain) NSDictionary *connectionEntitlements;
@property (nonatomic, retain) CKDClientContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CKDPCSFetchAggregator *fetchAggregator;
@property bool hasBeenThrottled;
@property (nonatomic) bool hasFakeEntitlements;
@property (nonatomic) long long hasTCCAuthorizationTernary;
@property (nonatomic) long long hasValidatedEntitlementsTernary;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool holdAllOperations;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (nonatomic, retain) NSMutableDictionary *operationStatisticsByClassName;
@property (nonatomic, retain) NSMutableArray *pendingContexts;
@property (nonatomic, retain) NSMutableSet *pendingOperationIDs;
@property (nonatomic, readonly) int pid;
@property (nonatomic, readonly) NSString *procName;
@property (getter=isSandboxed, nonatomic) bool sandboxed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *setupQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *statusQueue;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSOperationQueue *tccAuthOpQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *tccAuthQueue;

+ (id)accountStatusWorkloop;
+ (id)operationStatusReport:(id)arg1;
+ (id)sharedClientThrottlingOperationQueue;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)CKStatusReportArray;
- (id)CKStatusReportArrayIncludingSharedOperations:(bool)arg1;
- (id)TCCDatabaseChangedNotificationObserver;
- (long long)_accountStatusWithClientContext:(id)arg1;
- (void)_addOperationWithOperationInfo:(id)arg1 clientProvidedCallbackProxy:(id)arg2 factoryBlock:(id /* block */)arg3;
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;
- (id)_clientPrefixEntitlement;
- (void)_dumpStatusReportArrayToOsTrace:(id)arg1;
- (void)_finishClientSetupWithClientContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(id /* block */)arg2;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(id /* block */)arg2 customCompletionBlock:(id /* block */)arg3;
- (bool)_hasCustomAccountsEntitlement;
- (bool)_hasEntitlementForKey:(id)arg1;
- (bool)_hasEnvironmentEntitlement;
- (bool)_isConnectionAuthorizedForOperation:(id)arg1 error:(id*)arg2;
- (bool)_lockedHasTCCAuthorization;
- (void)_lockedSetHasTCCAuthorizationTernary:(long long)arg1;
- (id)_locked_eligiblePendingContextForApplicationID:(id)arg1;
- (unsigned long long)_outstandingOperationCount;
- (void)_performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 block:(id /* block */)arg3;
- (void)_performFetchCurrentUserRecordOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)_reallyPerformFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 setupInfo:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_setupClientWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_setupOperationQueues;
- (void)_startClientSetupWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)_updateConnectionEntitlementsWithFakeEntitlements:(id)arg1;
- (void)accountInfoWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)addThrottle:(id)arg1;
- (id)applicationBundleID;
- (id)applicationBundleIdentifierForPush;
- (id)applicationID;
- (id)applicationIdentifier;
- (id)apsEnvironmentEntitlement;
- (id)associatedApplicationBundleID;
- (id)backgroundOperationThrottleQueue;
- (id)cachedApplicationBundleID;
- (id)cachedSandboxExtensions;
- (id)callbackProxyForOperationInfo:(id)arg1 clientProvidedCallbackProxy:(id)arg2;
- (bool)canOpenByID;
- (bool)canOpenFileAtURL:(id)arg1;
- (bool)canRunGivenAvailabilityState:(unsigned long long)arg1;
- (bool)canUsePackages;
- (bool)canUsePackagesWithError:(id*)arg1;
- (void)cancelAllOperations;
- (void)cancelOperationWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)cancellationQueue;
- (id)cleanupOperationQueue;
- (id)cloudKitSupportOperationThrottleQueue;
- (id)codeServiceURLByContainerAndServiceEntitlement;
- (id)codeServiceURLByServiceEntitlement;
- (id)codeServiceURLEntitlement;
- (id)connection;
- (id)connectionDate;
- (id)connectionEntitlements;
- (id)context;
- (void)dealloc;
- (id)description;
- (void)displayInfoOnAccountWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fetchAggregator;
- (void)fetchAllLongLivedOperationIDsWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchLongLivedOperationsWithIDs:(id)arg1 setupInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)forceFinishClientSetupWithClientContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)forwardInvocation:(id)arg1;
- (void)getBehaviorOptionForKey:(id)arg1 isContainerOption:(bool)arg2 completionHandler:(id /* block */)arg3;
- (id)getFileMetadataWithFileHandle:(id)arg1 openInfo:(id)arg2 error:(id*)arg3;
- (void)getTCCAuthorizationWithCompletion:(id /* block */)arg1;
- (void)handleSignificantIssueBehavior:(unsigned long long)arg1 reason:(id)arg2;
- (bool)hasAllowAccessDuringBuddyEntitlement;
- (bool)hasAllowUnverifiedAccountEntitlement;
- (bool)hasBeenThrottled;
- (bool)hasCloudKitSupportServiceEntitlement;
- (bool)hasCloudKitSystemServiceEntitlement;
- (bool)hasDarkWakeNetworkReachabilityEnabledEntitlement;
- (bool)hasDeviceIdentifierEntitlement;
- (bool)hasDisplaysSystemAcceptPromptEntitlement;
- (bool)hasExplicitCodeOperationURLEntitlement;
- (bool)hasFakeEntitlements;
- (bool)hasLightweightPCSEntitlement;
- (bool)hasMasqueradingEntitlement;
- (bool)hasNonLegacyShareURLEntitlement;
- (bool)hasOutOfProcessUIEntitlement;
- (bool)hasParticipantPIIEntitlement;
- (bool)hasProtectionDataEntitlement;
- (bool)hasTCCAuthorization;
- (long long)hasTCCAuthorizationTernary;
- (bool)hasValidatedEntitlements;
- (long long)hasValidatedEntitlementsTernary;
- (bool)hasZoneProtectionDataEntitlement;
- (bool)holdAllOperations;
- (void)importantUserIDsWithSetupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithConnection:(id)arg1;
- (bool)isLongLived;
- (bool)isSandboxed;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)openFileWithOpenInfo:(id)arg1 error:(id*)arg2;
- (id)operationQueue;
- (id)operationStatisticsByClassName;
- (id)pendingContexts;
- (id)pendingOperationIDs;
- (void)performAcceptSharesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performCodeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performDiscoverAllUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performDiscoverUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchDatabaseChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchNotificationChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordZoneChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchShareMetadataOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchShareParticipantsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchSubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchWebAuthTokenOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performMarkNotificationsReadOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyBadgeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifySubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performQueryOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (int)pid;
- (id)procName;
- (id)readBytesOfInMemoryAssetContentWithUUID:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 error:(id*)arg4;
- (void)requestApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)resetThrottles;
- (id)serviceNameForContainerIdentifierMapEntitlement;
- (void)setApplicationID:(id)arg1;
- (void)setBackgroundOperationThrottleQueue:(id)arg1;
- (void)setCachedApplicationBundleID:(id)arg1;
- (void)setCachedSandboxExtensions:(id)arg1;
- (void)setCanOpenByID:(bool)arg1;
- (void)setCanUsePackages:(bool)arg1;
- (void)setCancellationQueue:(id)arg1;
- (void)setCleanupOperationQueue:(id)arg1;
- (void)setClientProxyAvailable:(bool)arg1;
- (void)setCloudKitSupportOperationThrottleQueue:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setConnectionDate:(id)arg1;
- (void)setConnectionEntitlements:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setFetchAggregator:(id)arg1;
- (void)setHasBeenThrottled:(bool)arg1;
- (void)setHasFakeEntitlements:(bool)arg1;
- (void)setHasTCCAuthorizationTernary:(long long)arg1;
- (void)setHasValidatedEntitlementsTernary:(long long)arg1;
- (void)setHoldAllOperations:(bool)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setOperationStatisticsByClassName:(id)arg1;
- (void)setPendingContexts:(id)arg1;
- (void)setPendingOperationIDs:(id)arg1;
- (void)setSandboxed:(bool)arg1;
- (void)setSetupQueue:(id)arg1;
- (void)setStatusQueue:(id)arg1;
- (void)setTCCDatabaseChangedNotificationObserver:(id)arg1;
- (void)setTccAuthOpQueue:(id)arg1;
- (void)setTccAuthQueue:(id)arg1;
- (id)setupQueue;
- (void)statusForApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)statusQueue;
- (void)submitClientEventMetric:(id)arg1 withSetupInfo:(id)arg2 completeWhenQueued:(bool)arg3 completionHandler:(id /* block */)arg4;
- (bool)systemAvailabilityChanged:(unsigned long long)arg1;
- (id)tccAuthOpQueue;
- (id)tccAuthQueue;
- (void)tearDown;
- (id)valueForEntitlement:(id)arg1;

@end
