/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDDemoDataMobilitySampleGenerator : HDDemoDataBaseSampleGenerator {
    double  _nextAsymmetryPercentageSampleTime;
    double  _nextDoubleSupportPercentageSampleTime;
    double  _nextSixMinuteWalkTestDistanceSampleTime;
    double  _nextStairAscentSpeedSampleTime;
    double  _nextStairDescentSpeedSampleTime;
    double  _nextStepLengthSampleTime;
    double  _nextWalkingSpeedSampleTime;
}

@property (nonatomic) double nextAsymmetryPercentageSampleTime;
@property (nonatomic) double nextDoubleSupportPercentageSampleTime;
@property (nonatomic) double nextSixMinuteWalkTestDistanceSampleTime;
@property (nonatomic) double nextStairAscentSpeedSampleTime;
@property (nonatomic) double nextStairDescentSpeedSampleTime;
@property (nonatomic) double nextStepLengthSampleTime;
@property (nonatomic) double nextWalkingSpeedSampleTime;

+ (bool)supportsSecureCoding;

- (void)_generateAsymmetryPercentageSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (void)_generateDoubleSupportPercentageSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (void)_generateSixMinuteWalkTestDistanceSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (void)_generateStairAscentSpeedSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (void)_generateStairDescentSpeedSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (void)_generateStepLengthSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (double)_generateWalkingDataSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 addFromWatch:(bool)arg4 shouldDecreaseDuringRehab:(bool)arg5 objectCollection:(id)arg6 nextSampleTime:(double)arg7 typeIdentifier:(id)arg8 unit:(id)arg9 sampleMean:(double)arg10 sampleMeanStdDev:(double)arg11 sampleFrequency:(double)arg12 sampleFrequencyStdDev:(double)arg13;
- (void)_generateWalkingSpeedSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (bool)_isDemoPersonWalkingAboveAverage;
- (void)encodeWithCoder:(id)arg1;
- (void)generateSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (double)nextAsymmetryPercentageSampleTime;
- (double)nextDoubleSupportPercentageSampleTime;
- (double)nextSixMinuteWalkTestDistanceSampleTime;
- (double)nextStairAscentSpeedSampleTime;
- (double)nextStairDescentSpeedSampleTime;
- (double)nextStepLengthSampleTime;
- (double)nextWalkingSpeedSampleTime;
- (void)setNextAsymmetryPercentageSampleTime:(double)arg1;
- (void)setNextDoubleSupportPercentageSampleTime:(double)arg1;
- (void)setNextSixMinuteWalkTestDistanceSampleTime:(double)arg1;
- (void)setNextStairAscentSpeedSampleTime:(double)arg1;
- (void)setNextStairDescentSpeedSampleTime:(double)arg1;
- (void)setNextStepLengthSampleTime:(double)arg1;
- (void)setNextWalkingSpeedSampleTime:(double)arg1;

@end
