/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts
 */

@interface WFWorkflowRunCoordinator : NSObject <UNUserNotificationCenterDelegate, WFDialogPresentationManagerDelegate, WFOutOfProcessWorkflowControllerDelegate> {
    <VCDatabaseProvider> * _databaseProvider;
    WFDialogPresentationManager * _dialogPresentationManager;
    NSHashTable * _observers;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableArray * _queuedPersistentRunRequests;
    NSMutableDictionary * _runEvents;
    NSMutableDictionary * _runRequests;
    NSMutableDictionary * _runningWorkflowCompletionHandlers;
    NSMutableDictionary * _runningWorkflowControllers;
    WFUserNotificationManager * _userNotificationManager;
}

@property (nonatomic, readonly) <VCDatabaseProvider> *databaseProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) WFDialogPresentationManager *dialogPresentationManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSHashTable *observers;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) NSMutableArray *queuedPersistentRunRequests;
@property (nonatomic, readonly) NSMutableDictionary *runEvents;
@property (nonatomic, readonly) NSMutableDictionary *runRequests;
@property (nonatomic, readonly) NSMutableDictionary *runningWorkflowCompletionHandlers;
@property (nonatomic, readonly) NSMutableDictionary *runningWorkflowControllers;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WFUserNotificationManager *userNotificationManager;

+ (id)errorCategory;
+ (id)errorWithActionCategory;
+ (long long)outOfProcessWorkflowControllerPresentationModeFromVCShortcutPresentationMode:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)addObserver:(id)arg1;
- (id)allRunningWorkflows;
- (id)bestErrorFromError:(id)arg1;
- (id)databaseProvider;
- (id)dialogPresentationManager;
- (void)dismissPresentedContentWithCompletion:(id /* block */)arg1;
- (void)enqueueDialog:(id)arg1 runningContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)initWithUserNotificationManager:(id)arg1 databaseProvider:(id)arg2;
- (id)observers;
- (void)outOfProcessWorkflowController:(id)arg1 didFinishWithError:(id)arg2 cancelled:(bool)arg3 reference:(id)arg4 dialogAttribution:(id)arg5;
- (void)outOfProcessWorkflowController:(id)arg1 didStartFromWorkflowReference:(id)arg2 dialogAttribution:(id)arg3;
- (void)postNotificationAboutFailure:(id)arg1 inWorkflow:(id)arg2 dialogAttribution:(id)arg3;
- (void)presentationManager:(id)arg1 cancelExecutionOfWorkflowWithContext:(id)arg2;
- (void)presentationManager:(id)arg1 pauseExecutionOfWorkflowWithContext:(id)arg2;
- (id)queue;
- (bool)queue_callWorkflowCompletionForContext:(id)arg1 withError:(id)arg2 cancelled:(bool)arg3;
- (id)queue_contextForWorkflowController:(id)arg1;
- (void)queue_finishWorkflowWithContext:(id)arg1 error:(id)arg2 cancelled:(bool)arg3;
- (void)queue_notifyObserversWorkflowDidFinishRunningWithError:(id)arg1 context:(id)arg2 cancelled:(bool)arg3;
- (void)queue_runWorkflowWithRequest:(id)arg1 context:(id)arg2 error:(out id*)arg3 completion:(id /* block */)arg4;
- (id)queue_workflowControllerWithContext:(id)arg1;
- (id)queuedPersistentRunRequests;
- (void)removeObserver:(id)arg1;
- (void)removeStaleNotifications;
- (void)resumeWorkflowFromContext:(id)arg1 presentationMode:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)runEvents;
- (void)runNextPersistentWorkflowIfAvailable;
- (id)runRequests;
- (void)runWorkflowWithRequest:(id)arg1 context:(id)arg2;
- (void)runWorkflowWithRequest:(id)arg1 context:(id)arg2 completion:(id /* block */)arg3;
- (id)runningWorkflowCompletionHandlers;
- (id)runningWorkflowControllers;
- (bool)shortcutWithIdentifierIsRunning:(id)arg1;
- (void)showSingleStepCompletionWithWebClipMetadata:(id)arg1 completion:(id /* block */)arg2;
- (void)stopRunningWorkflowWithRunningContext:(id)arg1;
- (id)unsupportedDialogResponseWithRequest:(id)arg1;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (id)userNotificationManager;

@end
