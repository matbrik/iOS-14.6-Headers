/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@interface _MTLBinaryArchive : _MTLObjectWithLabel <MTLBinaryArchiveSPI> {
    bool  _collectArchives;
    <MTLDevice> * _device;
    NSMutableDictionary * _entries;
    NSData * _fileData;
    struct map<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>, CompareHash, std::__1::allocator<std::__1::pair<const MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>>> { 
        struct __tree<std::__1::__value_type<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>, std::__1::__map_value_compare<MTLUINT256_t, std::__1::__value_type<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>, CompareHash, true>, std::__1::allocator<std::__1::__value_type<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>>> { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>, void *>>> { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __value_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<MTLUINT256_t, std::__1::__value_type<MTLUINT256_t, std::__1::pair<unsigned int, unsigned long long>>, CompareHash, true>> { 
                unsigned long long __value_; 
            } __pair3_; 
        } __tree_; 
    }  _fileIndex;
    MTLLoadedFile * _fileMapping;
    unsigned long long  _options;
    struct unique_ptr<MTLPipelineCollection, std::__1::default_delete<MTLPipelineCollection>> { 
        struct __compressed_pair<MTLPipelineCollection *, std::__1::default_delete<MTLPipelineCollection>> { 
            struct MTLPipelineCollection {} *__value_; 
        } __ptr_; 
    }  _pipelineCollection;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) <MTLDevice> *device;
@property (readonly) unsigned long long hash;
@property (readonly) NSArray *keys;
@property (copy) NSString *label;
@property (readonly) unsigned long long options;
@property (readonly) Class superclass;

+ (id)descriptorDataForArchive:(id)arg1;
+ (bool)deserializeBinaryArchiveDescriptorMachO:(struct { bool x1; bool x2; unsigned long long x3; unsigned long long x4; bool x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; }*)arg1 fileData:(id)arg2;
+ (bool)deserializeBinaryArchiveHeader:(struct { bool x1; bool x2; unsigned long long x3; unsigned long long x4; bool x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; }*)arg1 fileData:(id)arg2 device:(id)arg3;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addBinaryEntry:(id)arg1 forKey:(id)arg2;
- (bool)addComputePipelineFunctionsWithDescriptor:(id)arg1 error:(id*)arg2;
- (bool)addComputePipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (bool)addRenderPipelineFunctionsWithDescriptor:(id)arg1 error:(id*)arg2;
- (bool)addRenderPipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (bool)addTileRenderPipelineFunctionsWithDescriptor:(id)arg1 error:(id*)arg2;
- (bool)addTileRenderPipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (void)dealloc;
- (id)description;
- (id)device;
- (id)formattedDescription:(unsigned long long)arg1;
- (id)getBinaryDataForKey:(id)arg1;
- (id)initWithDevice:(id)arg1 descriptor:(id)arg2 error:(id*)arg3;
- (id)initWithOptions:(unsigned long long)arg1 device:(id)arg2 url:(id)arg3 error:(id*)arg4;
- (id)keys;
- (void)materializeAll;
- (id)materializeFromFileOffset:(unsigned long long)arg1 hash:(struct { unsigned char x1[32]; }*)arg2;
- (id)materializeFromHash:(struct { unsigned char x1[32]; }*)arg1;
- (unsigned long long)options;
- (bool)removeComputePipelineFunctionsWithDescriptor:(id)arg1 error:(id*)arg2;
- (bool)serializeToURL:(id)arg1 error:(id*)arg2;
- (bool)serializeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;

@end
