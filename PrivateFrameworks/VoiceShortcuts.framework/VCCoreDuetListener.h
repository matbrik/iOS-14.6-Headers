/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts
 */

@interface VCCoreDuetListener : NSObject {
    <VCDatabaseProvider> * _databaseProvider;
    VCDaemonXPCEventHandler * _eventHandler;
    VCTriggerEventQueue * _eventQueue;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableDictionary * _registrations;
    WFWorkflowRunCoordinator * _runCoordinator;
    <_CDUserContext> * _userContext;
}

@property (nonatomic, readonly) <VCDatabaseProvider> *databaseProvider;
@property (nonatomic, readonly) VCDaemonXPCEventHandler *eventHandler;
@property (nonatomic, retain) VCTriggerEventQueue *eventQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) NSMutableDictionary *registrations;
@property (nonatomic, readonly) WFWorkflowRunCoordinator *runCoordinator;
@property (nonatomic, readonly) <_CDUserContext> *userContext;

- (void).cxx_destruct;
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(id /* block */)arg2;
- (id)databaseProvider;
- (id)databaseWithError:(id*)arg1;
- (void)dealloc;
- (void)deleteTriggerWithIdentifier:(id)arg1 allowedDeletionClasses:(id)arg2 completion:(id /* block */)arg3;
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)deviceDidUnlockForFirstTime;
- (id)eventHandler;
- (id)eventQueue;
- (void)fireTriggerWithIdentifier:(id)arg1 force:(bool)arg2 eventInfo:(id)arg3 completion:(id /* block */)arg4;
- (void)getConfiguredTriggerDescriptionsWithCompletion:(id /* block */)arg1;
- (void)handleCallbackForTriggerWithIdentifier:(id)arg1 info:(id)arg2;
- (void)handleSunriseSunsetChanged;
- (id)initWithDatabaseProvider:(id)arg1 eventHandler:(id)arg2 runCoordinator:(id)arg3;
- (bool)isCallbackRegisteredWithIdentifier:(id)arg1;
- (id)queue;
- (void)queue_fireTriggerWithIdentifier:(id)arg1 force:(bool)arg2 eventInfo:(id)arg3 completion:(id /* block */)arg4;
- (bool)queue_registerAllTriggers:(id*)arg1;
- (void)registerAllTriggersWithCompletion:(id /* block */)arg1;
- (void)registerCallback:(id)arg1 withIdentifier:(id)arg2;
- (void)registerSunriseSunsetCallbackIfNeeded;
- (bool)registerTrigger:(id)arg1 error:(id*)arg2;
- (void)registerTriggerWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)registrations;
- (void)removeStalePendingNotifications;
- (id)runCoordinator;
- (void)setEventQueue:(id)arg1;
- (void)timeChangeDidOccur;
- (void)timezoneChangeDidOccur;
- (void)unregisterAllTriggers;
- (void)unregisterCallbackForIdentifier:(id)arg1;
- (void)unregisterTriggerWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)userContext;

@end
