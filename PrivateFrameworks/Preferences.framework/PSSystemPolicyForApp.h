/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences
 */

@interface PSSystemPolicyForApp : NSObject {
    PSAccountEnumerator * _accountEnumerator;
    NSUserDefaults * _appUserDefaults;
    NSString * _bundleIdentifier;
    PSSpecifier * _cinematicFramingSpecifier;
    PSContactsPolicyController * _contactsPrivacyController;
    NSString * _containerPathForCurrentApp;
    <PSSystemPolicyForAppDelegate> * _delegate;
    bool  _enServiceMatched;
    bool  _forcePolicyOptions;
    NSString * _matchingBundleIdentifier;
    NEConfiguration * _pathControllerConfiguration;
    PSPhotosPolicyController * _photosPrivacyController;
    unsigned long long  _policyOptions;
}

@property (nonatomic, retain) NSUserDefaults *appUserDefaults;
@property (nonatomic, copy) NSString *bundleIdentifier;
@property (nonatomic, retain) PSSpecifier *cinematicFramingSpecifier;
@property (nonatomic, retain) NSString *containerPathForCurrentApp;
@property (nonatomic) <PSSystemPolicyForAppDelegate> *delegate;
@property (nonatomic) bool enServiceMatched;
@property (nonatomic, retain) NSString *matchingBundleIdentifier;

+ (bool)isServiceRestricted:(id)arg1;

- (void).cxx_destruct;
- (bool)_accountModificationDisabledByRestrictions;
- (void)_handleAddAccountButtonAction:(id)arg1;
- (bool)_isAppClip;
- (bool)_isBackgroundAppRefreshAllowed;
- (bool)_isLocationServicesRestricted;
- (bool)_isWirelessDataRestricted;
- (id)_privacyAccessForService:(struct __CFString { }*)arg1;
- (bool)_supportsBackgroundAppRefresh;
- (id)accountsSpecifier;
- (id)appUserDefaults;
- (id)assistantAndSearchSpecifiers;
- (id)authLevelStringForStatus:(unsigned long long)arg1;
- (id)backgroundAppRefreshSpecifier;
- (id)bundleIdentifier;
- (id)cinematicFramingControlModeValue;
- (id)cinematicFramingFooterText;
- (id)cinematicFramingSpecifier;
- (id)cinematicFramingValue;
- (id)contactsServicesSpecifier;
- (id)containerPathForCurrentApp;
- (struct __CFBundle { }*)copyTCCBundleForService:(struct __CFString { }*)arg1;
- (id)dataUsageWorkspaceInfo;
- (void)dealloc;
- (id)defaultAppSpecifierWithAppRecordsMatchingBlock:(id /* block */)arg1 getter:(SEL)arg2 setter:(SEL)arg3 title:(id)arg4;
- (id)defaultBrowser:(id)arg1;
- (id)defaultBrowserSpecifier;
- (id)defaultMailApp:(id)arg1;
- (id)defaultMailAppSpecifier;
- (id)delegate;
- (id)documentSource:(id)arg1;
- (id)documentsSpecifier;
- (bool)enServiceMatched;
- (id)exposureSpecifiers;
- (bool)getMulticastAllowed:(bool*)arg1;
- (void)headerLinkWasTapped;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)isBackgroundRefreshEnabled:(id)arg1;
- (bool)isCellularBundleID:(id)arg1;
- (id)isCinematicFramingEnabled:(id)arg1;
- (bool)isFaceTimeSettings;
- (id)isLocalNetworkEnabled:(id)arg1;
- (void)loadNetworkConfigurationsForceRefresh:(bool)arg1;
- (id)locationServicesSpecifier;
- (id)locationStatus:(id)arg1;
- (id)matchingBundleIdentifier;
- (id)networkServicesSpecifier;
- (id)notificationSpecifier;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)pathRuleForBundleID:(id)arg1 create:(bool)arg2;
- (id)photosServicesSpecifier;
- (id)preferredLanguage:(id)arg1;
- (id)preferredLanguageSpecifier;
- (id)privacyAccessForSpecifier:(id)arg1;
- (id)privacySpecifierForService:(struct __CFString { }*)arg1;
- (id)privacySpecifiers;
- (void)saveNetworkConfiguration;
- (void)setAppUserDefaults:(id)arg1;
- (void)setBackgroundRefreshEnabled:(id)arg1 forSpecifier:(id)arg2;
- (void)setBundleIdentifier:(id)arg1;
- (void)setCinematicFramingEnabled:(id)arg1 forSpecifier:(id)arg2;
- (void)setCinematicFramingSpecifier:(id)arg1;
- (void)setContainerPathForCurrentApp:(id)arg1;
- (void)setDefaultBrowser:(id)arg1 specifier:(id)arg2;
- (void)setDefaultMailApp:(id)arg1 specifier:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setEnServiceMatched:(bool)arg1;
- (void)setLocalNetworkEnabled:(id)arg1 specifier:(id)arg2;
- (void)setMatchingBundleIdentifier:(id)arg1;
- (void)setPrivacyAccess:(id)arg1 forSpecifier:(id)arg2;
- (void)setupNetworkConfiguration;
- (bool)shouleShowCinematicFramingCellWithEnableValue:(id)arg1 andControlMode:(id)arg2;
- (id)specifiers;
- (id)specifiersForPolicyOptions:(unsigned long long)arg1 force:(bool)arg2;
- (id)trackingSpecifiers;
- (id)wirelessDataSpecifierWithAppName:(id)arg1;

@end
