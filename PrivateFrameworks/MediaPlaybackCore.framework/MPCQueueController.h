/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCQueueController : NSObject <MPAVQueueController, MPArtworkDataSource, MPCContinueListeningRadioQueueProviding, MPCPlaybackEngineEventObserving, MPCQueueItemProviding, MPSectionedIdentifierListAnnotationDelegate, MPShuffleableSectionedIdentifierListDelegate, MSVSegmentedCoding> {
    bool  _allowsQueueModifications;
    MPSectionedIdentifierListPosition * _autoPlayEndPosition;
    MPSectionedIdentifierList * _autoPlayIdentifierList;
    bool  _autoPlayIsTriggered;
    long long  _autoPlayState;
    NSMutableDictionary * _coderVersions;
    MPAVItem * _currentItem;
    NSMutableDictionary * _dataSources;
    NSString * _deferredNextContentItemAnchorID;
    <MPAVQueueControllerDelegate> * _delegate;
    bool  _hasUserMutations;
    MPShuffleableSectionedIdentifierList * _identifierList;
    double  _lastSavedTime;
    MPIdentifierSet * _missingIdentifierSetForDebugging;
    NSString * _nextContentItemID;
    long long  _nextContentItemIDReason;
    MPCPlaybackEngine * _playbackEngine;
    NSString * _preferredFirstContentItemID;
    NSArray * _previousSectionIDsForDebugging;
    <MPAVQueueCoordinating> * _queueCoordinator;
    long long  _repeatType;
    NSError * _restorationError;
    NSString * _restoreLastStartTimePositionToContentItemID;
    id  _rtcSessionHierarchyToken;
    long long  _shuffleType;
    long long  _state;
    unsigned long long  _stateHandle;
}

@property (nonatomic) bool allowsQueueModifications;
@property (nonatomic) bool autoPlayEnabled;
@property (nonatomic, retain) MPSectionedIdentifierListPosition *autoPlayEndPosition;
@property (nonatomic, retain) MPSectionedIdentifierList *autoPlayIdentifierList;
@property (nonatomic) bool autoPlayIsTriggered;
@property (nonatomic) long long autoPlayState;
@property (getter=_autoplayMode, nonatomic, readonly) long long autoplayMode;
@property (nonatomic, retain) NSMutableDictionary *coderVersions;
@property (nonatomic, readonly) bool containsTransportableContent;
@property (nonatomic, retain) MPAVItem *currentItem;
@property (getter=isCurrentItemFromAutoPlay, nonatomic, readonly) bool currentItemFromAutoPlay;
@property (nonatomic, retain) NSMutableDictionary *dataSources;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *deferredNextContentItemAnchorID;
@property (nonatomic) <MPAVQueueControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long displayCount;
@property (nonatomic, readonly) bool hasUserMutations;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MPShuffleableSectionedIdentifierList *identifierList;
@property (nonatomic, readonly) double lastSavedTime;
@property (nonatomic, copy) MPIdentifierSet *missingIdentifierSetForDebugging;
@property (nonatomic, copy) NSString *nextContentItemID;
@property (nonatomic) long long nextContentItemIDReason;
@property (nonatomic) MPCPlaybackEngine *playbackEngine;
@property (nonatomic, readonly, copy) NSString *preferredFirstContentItemID;
@property (nonatomic, copy) NSArray *previousSectionIDsForDebugging;
@property (nonatomic, retain) <MPAVQueueCoordinating> *queueCoordinator;
@property (nonatomic) long long repeatType;
@property (nonatomic, copy) NSError *restorationError;
@property (nonatomic, copy) NSString *restoreLastStartTimePositionToContentItemID;
@property (nonatomic, readonly, copy) NSString *revisionString;
@property (nonatomic, retain) id rtcSessionHierarchyToken;
@property (nonatomic) long long shuffleType;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long supportedInsertionPositions;
@property (nonatomic, readonly) NSString *uniqueIdentifier;
@property (nonatomic, readonly) bool userCanChangeShuffleAndRepeatType;
@property (nonatomic, readonly) bool userCanEnableAutoPlay;

+ (id)describePlayer:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_accountForAutoPlay;
- (void)_addAutoPlayPlaybackContext:(id)arg1 atPosition:(long long)arg2 afterContentItemID:(id)arg3 sectionIdentifier:(id)arg4 actions:(unsigned long long)arg5 completion:(id /* block */)arg6;
- (void)_addPlaybackContext:(id)arg1 atPosition:(long long)arg2 afterContentItemID:(id)arg3 sectionIdentifier:(id)arg4 actions:(unsigned long long)arg5 completion:(id /* block */)arg6;
- (bool)_allDataSourcesSupportInsertionPositionLast;
- (void)_applyVolumeNormalizationForQueuedItems;
- (long long)_autoplayMode;
- (id)_contentItemIDWithOffset:(long long)arg1 fromItem:(id)arg2 mode:(long long)arg3 didReachEnd:(bool*)arg4;
- (void)_currentItemDidChangeFromItem:(id)arg1 toItem:(id)arg2;
- (void)_emitEventsForAddingPlaybackContext:(id)arg1 sectionIdentifier:(id)arg2;
- (void)_emitEventsForItemChangeFromItem:(id)arg1 toCurrentItem:(id)arg2;
- (void)_emitEventsForPlaybackBehaviorChange;
- (id)_firstContentItemID;
- (id)_firstContentItemIDInSectionWithIdentifier:(id)arg1;
- (void)_highQualityMusicStreamingOnCellularDidChange:(id)arg1;
- (id)_identifierListForSection:(id)arg1;
- (id)_itemForContentItemID:(id)arg1 allowReuse:(bool)arg2;
- (id)_itemForPair:(id)arg1;
- (id)_nextValidIdentifierPairStartingAtContentItemID:(id)arg1 wasInvalid:(bool*)arg2;
- (long long)_privateListeningSourceForSection:(id)arg1;
- (void)_soundCheckEnabledChangedNotification:(id)arg1;
- (id)_stateDictionaryIncludingIdentifierList:(bool)arg1;
- (void)_transitionToAutoPlayState:(long long)arg1;
- (void)addPlaybackContext:(id)arg1 afterContentItemID:(id)arg2 completion:(id /* block */)arg3;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 completion:(id /* block */)arg3;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 jumpToIt:(bool)arg3 completion:(id /* block */)arg4;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 jumpToIt:(bool)arg3 userModification:(bool)arg4 completion:(id /* block */)arg5;
- (bool)allowsQueueModifications;
- (bool)areRepresentationsAvailableForCatalog:(id)arg1;
- (bool)autoPlayEnabled;
- (id)autoPlayEndPosition;
- (id)autoPlayIdentifierList;
- (bool)autoPlayIsTriggered;
- (long long)autoPlayState;
- (bool)canSkipInDirection:(long long)arg1 fromQueueItem:(id)arg2;
- (bool)canSkipItem:(id)arg1;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)arg1;
- (void)clearUpNext;
- (id)coderVersions;
- (bool)containsTransportableContent;
- (id)contentItemIDAtIndex:(long long)arg1;
- (id)contentItemIDWithCurrentItemOffset:(long long)arg1 mode:(long long)arg2 didReachEnd:(bool*)arg3;
- (id)contentItemIDsFromOffset:(long long)arg1 toOffset:(long long)arg2 nowPlayingIndex:(long long*)arg3;
- (id)currentItem;
- (id)dataSources;
- (void)dealloc;
- (id)debugDescriptionForItem:(id)arg1 inSection:(id)arg2;
- (id)debugDescriptionForSection:(id)arg1;
- (id)deferredNextContentItemAnchorID;
- (id)delegate;
- (void)didDequeueShuffledItemsInSectionedIdentifierList:(id)arg1;
- (void)didRestoreVersion:(long long)arg1 forSegment:(id)arg2;
- (long long)displayCount;
- (long long)displayIndexForContentItemID:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)engine:(id)arg1 didChangeItemElapsedTime:(double)arg2 rate:(float)arg3;
- (void)engine:(id)arg1 didChangeToState:(unsigned long long)arg2;
- (void)engine:(id)arg1 didReachEndOfQueueWithReason:(id)arg2;
- (id)existingRepresentationForArtworkCatalog:(id)arg1;
- (void)finalizeStateRestorationWithCompletion:(id /* block */)arg1;
- (id)firstContentItemIDForItemIntersectingIdentifierSet:(id)arg1;
- (bool)hasUserMutations;
- (id)identifierList;
- (void)incrementVersionForSegment:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isCurrentItemFromAutoPlay;
- (bool)isPlaceholderItemForContentItemID:(id)arg1;
- (bool)isRepresentation:(id)arg1 bestRepresentationForArtworkCatalog:(id)arg2;
- (id)itemForContentItemID:(id)arg1;
- (id)itemForContentItemID:(id)arg1 allowReuse:(bool)arg2;
- (id)itemToFollowItem:(id)arg1 direction:(long long)arg2 distance:(long long)arg3 jumpToItem:(bool)arg4 allowReuse:(bool)arg5;
- (void)jumpToContentItemID:(id)arg1;
- (void)jumpToContentItemID:(id)arg1 userInitiated:(bool)arg2;
- (void)jumpToFirstContentItem;
- (double)lastSavedTime;
- (void)loadRepresentationForArtworkCatalog:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)missingIdentifierSetForDebugging;
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(id /* block */)arg3;
- (void)moveContentItemID:(id)arg1 beforeContentItemID:(id)arg2 completion:(id /* block */)arg3;
- (id)nextContentItemID;
- (long long)nextContentItemIDReason;
- (id)playbackEngine;
- (void)player:(id)arg1 currentItemDidChangeFromItem:(id)arg2 toItem:(id)arg3;
- (void)playerItemDidBecomeCurrent:(id)arg1;
- (void)playerItemDidResignCurrent:(id)arg1;
- (id)preferredFirstContentItemID;
- (id)previousSectionIDsForDebugging;
- (id)queueCoordinator;
- (void)queueCoordinator:(id)arg1 didLoadItem:(id)arg2;
- (void)queueCoordinator:(id)arg1 failedToLoadItem:(id)arg2;
- (id)queueCoordinator:(id)arg1 itemToFollowItem:(id)arg2;
- (void)queueCoordinator:(id)arg1 willLoadItem:(id)arg2;
- (void)queueCoordinatorDidChangeItems:(id)arg1;
- (id)queueReferencesWithMaxCount:(long long)arg1;
- (void)reloadItemsKeepingCurrentItem:(bool)arg1;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeContentItemID:(id)arg1 completion:(id /* block */)arg2;
- (long long)repeatType;
- (void)reset;
- (void)resetWithIdentifier:(id)arg1;
- (void)reshuffle;
- (id)restorationError;
- (id)restoreLastStartTimePositionToContentItemID;
- (id)revisionString;
- (id)rtcSessionHierarchyToken;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidAddItems:(id)arg2 toSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidChangeItems:(id)arg2 inSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidMoveItems:(id)arg2 inSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidRemoveItems:(id)arg2 fromSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidUpdateSection:(id)arg2;
- (id)segmentForCodingKey:(id)arg1;
- (void)setAllowsQueueModifications:(bool)arg1;
- (void)setAutoPlayEnabled:(bool)arg1;
- (void)setAutoPlayEndPosition:(id)arg1;
- (void)setAutoPlayIdentifierList:(id)arg1;
- (void)setAutoPlayIsTriggered:(bool)arg1;
- (void)setAutoPlayState:(long long)arg1;
- (void)setCoderVersions:(id)arg1;
- (void)setCurrentItem:(id)arg1;
- (void)setDataSources:(id)arg1;
- (void)setDeferredNextContentItemAnchorID:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIdentifierList:(id)arg1;
- (void)setMissingIdentifierSetForDebugging:(id)arg1;
- (void)setNextContentItemID:(id)arg1;
- (void)setNextContentItemIDReason:(long long)arg1;
- (void)setPlaybackEngine:(id)arg1;
- (void)setPreviousSectionIDsForDebugging:(id)arg1;
- (void)setQueueCoordinator:(id)arg1;
- (void)setRepeatType:(long long)arg1;
- (void)setRestorationError:(id)arg1;
- (void)setRestoreLastStartTimePositionToContentItemID:(id)arg1;
- (void)setRtcSessionHierarchyToken:(id)arg1;
- (void)setShuffleType:(long long)arg1;
- (void)setState:(long long)arg1;
- (long long)shuffleType;
- (long long)state;
- (unsigned long long)supportedInsertionPositions;
- (id)uniqueIdentifier;
- (void)updateLocationDependentPropertiesForItem:(id)arg1;
- (bool)userCanChangeShuffleAndRepeatType;
- (bool)userCanEnableAutoPlay;
- (long long)versionForSegment:(id)arg1;
- (id)visualIdenticalityIdentifierForCatalog:(id)arg1;

@end
