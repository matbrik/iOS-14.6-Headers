/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WiFiKitUI.framework/WiFiKitUI
 */

@interface WFNetworkSettingsViewController : WFInsetTableViewController <UITableViewDataSource, UITableViewDelegate, WFNetworkView> {
    UIAlertController * _alert;
    UISwitch * _autoJoinSwitch;
    UISwitch * _autoLoginSwitch;
    UIColor * _backgroundColor;
    WFNetworkSettingsCellFactory * _cellFactory;
    WFNetworkSettingsConfig * _config;
    <WFDetailsProviderContext> * _context;
    <WFNetworkSettingsViewControllerDataCoordinator> * _dataCoordinator;
    <WFNetworkSettingsViewControllerDelegate> * _delegate;
    long long  _deviceCapability;
    NSString * _hardwareMACAddress;
    bool  _isUsingRandomMac;
    WFHyperlinkFooterView * _linkFooterView;
    UITableViewHeaderFooterView * _lowDataModeFooterView;
    bool  _randomFeatureEnabled;
    NSString * _randomMACAddress;
    UITableViewHeaderFooterView * _randomMACFooterView;
    UISwitch * _randomMACSwitch;
    bool  _randomMACSwitchOn;
    NSAttributedString * _recommendationLinkAttributedString;
    UISwitch * _saveDataModeSwitch;
    NSArray * _sections;
    bool  _useInsetGroupedTableView;
}

@property (nonatomic, retain) UIAlertController *alert;
@property (nonatomic, retain) UISwitch *autoJoinSwitch;
@property (nonatomic, retain) UISwitch *autoLoginSwitch;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic, retain) WFNetworkSettingsCellFactory *cellFactory;
@property (nonatomic, copy) WFNetworkSettingsConfig *config;
@property (nonatomic, retain) <WFDetailsProviderContext> *context;
@property (nonatomic) <WFNetworkSettingsViewControllerDataCoordinator> *dataCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WFNetworkSettingsViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long deviceCapability;
@property (nonatomic, retain) NSString *hardwareMACAddress;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isUsingRandomMac;
@property (nonatomic, retain) WFHyperlinkFooterView *linkFooterView;
@property (nonatomic) bool randomFeatureEnabled;
@property (nonatomic, retain) NSString *randomMACAddress;
@property (nonatomic, retain) UISwitch *randomMACSwitch;
@property (nonatomic) bool randomMACSwitchOn;
@property (nonatomic, retain) NSAttributedString *recommendationLinkAttributedString;
@property (nonatomic, retain) UISwitch *saveDataModeSwitch;
@property (retain) NSArray *sections;
@property (readonly) Class superclass;
@property (nonatomic) bool useInsetGroupedTableView;
@property (nonatomic, readonly) bool wantsModalPresentation;

- (void).cxx_destruct;
- (void)_autoJoinSwitchChanged:(id)arg1;
- (void)_autoLoginSwitchChanged:(id)arg1;
- (bool)_canShowWhileLocked;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_httpProxyAuthChanged:(id)arg1;
- (void)_httpProxyConfigChanged:(long long)arg1;
- (bool)_isChinaDevice;
- (bool)_isIPv4ConfigAuto;
- (void)_logSections:(id)arg1;
- (id)_lowDataModeFooterView;
- (id)_macAddressToDisplay;
- (void)_openRecommendationsLink:(id)arg1;
- (void)_presentDetailViewController:(id)arg1;
- (void)_presentRenewLeaseAlertWithSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_promptChangePrivateAddress;
- (void)_promptForgetNetwork;
- (id)_randomAddressToDisplay;
- (id)_randomMACFooterTextToDisplay;
- (id)_randomMACFooterView;
- (void)_saveAutoJoinEnabledChanged:(bool)arg1;
- (void)_saveAutoLoginEnabledChanged:(bool)arg1;
- (void)_saveConfig:(id)arg1;
- (void)_saveDataModeSwitchChanged:(id)arg1;
- (void)_saveSaveDataModeChanged:(bool)arg1;
- (long long)_sectionTypeAtSection:(long long)arg1;
- (id)_sectionsFromConfig:(id)arg1;
- (bool)_shouldShowIPv6ForConfig:(id)arg1;
- (bool)_shouldShowRandomConfigSwith;
- (bool)_showRecommendationSupportLink;
- (id)_stringForSettingsSection:(long long)arg1;
- (void)_updateRandomMACValueChanged:(bool)arg1;
- (void)_usingRandomMACSwitchChanged:(id)arg1;
- (id)alert;
- (id)autoJoinSwitch;
- (id)autoLoginSwitch;
- (id)backgroundColor;
- (id)cellFactory;
- (id)config;
- (id)context;
- (id)dataCoordinator;
- (void)dealloc;
- (id)delegate;
- (long long)deviceCapability;
- (id)hardwareMACAddress;
- (id)initWithConfig:(id)arg1;
- (id)initWithConfig:(id)arg1 detailsContext:(id)arg2 hardwareMACAddress:(id)arg3;
- (id)initWithConfig:(id)arg1 detailsContext:(id)arg2 hardwareMACAddress:(id)arg3 useInsetGroupedTableView:(bool)arg4;
- (bool)isUsingRandomMac;
- (id)linkFooterView;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (bool)randomFeatureEnabled;
- (id)randomMACAddress;
- (id)randomMACSwitch;
- (bool)randomMACSwitchOn;
- (id)recommendationLinkAttributedString;
- (void)refreshConfig:(id)arg1;
- (id)saveDataModeSwitch;
- (id)sections;
- (void)setAlert:(id)arg1;
- (void)setAutoJoinSwitch:(id)arg1;
- (void)setAutoLoginSwitch:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCellFactory:(id)arg1;
- (void)setConfig:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDataCoordinator:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceCapability:(long long)arg1;
- (void)setHardwareMACAddress:(id)arg1;
- (void)setIsUsingRandomMac:(bool)arg1;
- (void)setLinkFooterView:(id)arg1;
- (void)setRandomFeatureEnabled:(bool)arg1;
- (void)setRandomMACAddress:(id)arg1;
- (void)setRandomMACSwitch:(id)arg1;
- (void)setRandomMACSwitchOn:(bool)arg1;
- (void)setRecommendationLinkAttributedString:(id)arg1;
- (void)setSaveDataModeSwitch:(id)arg1;
- (void)setSections:(id)arg1;
- (void)setUseInsetGroupedTableView:(bool)arg1;
- (bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (bool)useInsetGroupedTableView;
- (void)viewDidLoad;
- (void)viewWillDisappear:(bool)arg1;

@end
