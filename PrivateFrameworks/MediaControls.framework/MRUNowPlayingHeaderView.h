/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MRUNowPlayingHeaderView : UIControl <MRUVisualStylingProviderObserver, UIPointerInteractionDelegate> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _artworkOverrideFrame;
    MRUArtworkView * _artworkView;
    long long  _context;
    MRUNowPlayingLabelView * _labelView;
    long long  _layout;
    MRUNowPlayingRoutingButton * _routingButton;
    bool  _showArtworkView;
    bool  _showRoutingButton;
    bool  _showTransportButton;
    MRUVisualStylingProvider * _stylingProvider;
    double  _textCenterOffsetY;
    MRUTransportButton * _transportButton;
    bool  _useArtworkOverrideFrame;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } artworkOverrideFrame;
@property (nonatomic, readonly) MRUArtworkView *artworkView;
@property (nonatomic) long long context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MRUNowPlayingLabelView *labelView;
@property (nonatomic) long long layout;
@property (getter=isMarqueeEnabled, nonatomic) bool marqueeEnabled;
@property (nonatomic, copy) NSString *placeholderText;
@property (nonatomic, retain) MPAVRoute *route;
@property (nonatomic, readonly) MRUNowPlayingRoutingButton *routingButton;
@property (nonatomic) bool showArtworkView;
@property (nonatomic) bool showPlaceholderText;
@property (nonatomic) bool showRoutingButton;
@property (nonatomic) bool showTransportButton;
@property (nonatomic, retain) MRUVisualStylingProvider *stylingProvider;
@property (nonatomic, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic) double textCenterOffsetY;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, readonly) MRUTransportButton *transportButton;
@property (nonatomic) bool useArtworkOverrideFrame;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })artworkOverrideFrame;
- (id)artworkView;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (long long)context;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isMarqueeEnabled;
- (id)labelView;
- (long long)layout;
- (void)layoutSubviews;
- (id)placeholderText;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (void)prepareForReuse;
- (id)route;
- (id)routingButton;
- (void)setArtworkOverrideFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContext:(long long)arg1;
- (void)setLabelView:(id)arg1;
- (void)setLayout:(long long)arg1;
- (void)setMarqueeEnabled:(bool)arg1;
- (void)setPlaceholderText:(id)arg1;
- (void)setRoute:(id)arg1;
- (void)setShowArtworkView:(bool)arg1;
- (void)setShowPlaceholderText:(bool)arg1;
- (void)setShowRoutingButton:(bool)arg1;
- (void)setShowTransportButton:(bool)arg1;
- (void)setStylingProvider:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTextCenterOffsetY:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setUseArtworkOverrideFrame:(bool)arg1;
- (bool)showArtworkView;
- (bool)showPlaceholderText;
- (bool)showRoutingButton;
- (bool)showTransportButton;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)stylingProvider;
- (id)subtitle;
- (double)textCenterOffsetY;
- (double)textInsetForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)title;
- (id)transportButton;
- (void)updateArtworkStyle;
- (void)updateVisibility;
- (void)updateVisualStyling;
- (bool)useArtworkOverrideFrame;
- (void)visualStylingProviderDidChange:(id)arg1;

@end
