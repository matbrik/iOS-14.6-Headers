/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UIInteractivePageControlVisualProvider : _UIPageControlVisualProvider <UIGestureRecognizerDelegate, _UIPageIndicatorFeedDelegate, _UIPageIndicatorStoreDelegate, _UITrackingGestureRecognizerDelegate> {
    UIVisualEffectView * _backgroundView;
    _UIPageControlContentView * _contentView;
    UIViewFloatAnimatableProperty * _continuousDisplayedPage;
    double  _continuousStartIndex;
    long long  _currentTick;
    CADisplayLink * _displayLink;
    _UIPageControlIndicatorContentView * _indicatorContentView;
    _UIPageIndicatorFeed * _indicatorFeed;
    double  _indicatorPaddingOffset;
    long long  _indicatorStartIndex;
    _UIPageIndicatorStore * _indicatorStore;
    CAMediaTimingFunction * _indicatorTransformCurve;
    _UIPageControlInteractor * _interactor;
    UIImpactFeedbackGenerator * _joggingFeedbackGenerator;
    long long  _numberOfVisibleIndicators;
    double  _panDistance;
    long long  _previousMoveDirection;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousTouchLocation;
    UIViewFloatAnimatableProperty * _scrubProgress;
    UIGestureRecognizer * _scrubbingGestureRecognizer;
    UISelectionFeedbackGenerator * _selectionFeedbackGenerator;
    struct { 
        unsigned int scrubbing : 1; 
        unsigned int platterExpanded : 1; 
        unsigned int didScrubPastInitialThreshold : 1; 
    }  _state;
    UIDelayedAction * _successiveTapAction;
    long long  _targetPage;
    long long  _tickThreshold;
}

@property (nonatomic, retain) UIVisualEffectView *backgroundView;
@property (nonatomic, retain) _UIPageControlContentView *contentView;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *continuousDisplayedPage;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CADisplayLink *displayLink;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) _UIPageControlIndicatorContentView *indicatorContentView;
@property (nonatomic, retain) _UIPageIndicatorFeed *indicatorFeed;
@property (nonatomic, retain) _UIPageIndicatorStore *indicatorStore;
@property (nonatomic, retain) CAMediaTimingFunction *indicatorTransformCurve;
@property (nonatomic, retain) _UIPageControlInteractor *interactor;
@property (nonatomic) bool isPlatterExpanded;
@property (nonatomic) bool isScrubbing;
@property (nonatomic, retain) UIImpactFeedbackGenerator *joggingFeedbackGenerator;
@property (nonatomic) long long previousMoveDirection;
@property (nonatomic) struct CGPoint { double x1; double x2; } previousTouchLocation;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *scrubProgress;
@property (nonatomic, retain) UIGestureRecognizer *scrubbingGestureRecognizer;
@property (nonatomic, retain) UISelectionFeedbackGenerator *selectionFeedbackGenerator;
@property (nonatomic, retain) UIDelayedAction *successiveTapAction;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_currentDisplayModeHasContentPadding;
- (double)_currentIndicatorContentViewOffsetForMovingDirection:(long long)arg1;
- (double)_currentJogDistance;
- (double)_defaultContentWidthForNumberOfIndicators:(long long)arg1;
- (double)_displayLinkTickThresholdForTouchPage:(double)arg1 scrubPage:(double)arg2;
- (id)_indicatorColorForEnabled:(bool)arg1;
- (id)_indicatorColorForPage:(long long)arg1;
- (double)_indicatorScaleForPage:(long long)arg1;
- (struct CGSize { double x1; double x2; })_intrinsicContentSizeWithPageControlSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_isPageWithinPermittedDisplayedRange:(long long)arg1;
- (bool)_isPageWithinValidJoggingOffset:(double)arg1;
- (void)_layoutImmediately;
- (long long)_numberOfJoggingIndicators;
- (long long)_numberOfVisibleIndicatorsFittingContentWidthForStartIndex:(long long)arg1;
- (double)_preciseIndicatorPageForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_resetSuccessiveTapAction;
- (void)_setDisplayedPage:(long long)arg1 completion:(id /* block */)arg2;
- (void)_transitionIndicatorForPage:(long long)arg1 toEnabled:(bool)arg2;
- (void)_updateCurrentPage:(long long)arg1 completion:(id /* block */)arg2;
- (void)_updateCurrentPlatterMode;
- (void)_updateReuseQueue;
- (id)_visibleLeftIndicator;
- (id)_visibleRightIndicator;
- (void)animateTransitionIndicatorsFromPage:(long long)arg1 toPage:(long long)arg2 ripple:(bool)arg3;
- (id)backgroundView;
- (void)configureIndicator:(id)arg1 atPage:(long long)arg2;
- (id)contentView;
- (id)continuousDisplayedPage;
- (id)customIndicatorImageForPage:(long long)arg1;
- (unsigned long long)defaultVisibleIndicators;
- (void)didScrubPageControl:(id)arg1;
- (void)didTapPageControl:(id)arg1;
- (void)didUpdateAllowsContinuousInteraction;
- (void)didUpdateBackgroundStyle;
- (void)didUpdateCurrentPageIndicatorTintColor;
- (void)didUpdateCustomLayoutValues;
- (void)didUpdateNumberOfPages;
- (void)didUpdatePageIndicatorTintColor;
- (id)displayLink;
- (void)displayLinkTicked:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)indicatorContentView;
- (id)indicatorFeed;
- (id)indicatorImageForPage:(long long)arg1;
- (struct CGSize { double x1; double x2; })indicatorSizeForImage:(id)arg1;
- (id)indicatorStore;
- (id)indicatorTransformCurve;
- (id)interactor;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIndicators;
- (bool)isPlatterExpanded;
- (bool)isScrubbing;
- (id)joggingFeedbackGenerator;
- (void)layoutSubviews;
- (unsigned long long)maxVisibleIndicators;
- (id)preferredIndicatorImage;
- (void)prepare;
- (long long)previousMoveDirection;
- (struct CGPoint { double x1; double x2; })previousTouchLocation;
- (void)pruneArchivedSubviews:(id)arg1;
- (void)resetSuccessiveTapInfo;
- (double)retargetedStartIndexForNumberOfVisibleIndicators:(long long)arg1;
- (id)scrubProgress;
- (id)scrubbingGestureRecognizer;
- (id)selectionFeedbackGenerator;
- (void)setBackgroundView:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setContinuousDisplayedPage:(id)arg1;
- (void)setCustomIndicatorImage:(id)arg1 forPage:(long long)arg2;
- (void)setDisplayLink:(id)arg1;
- (void)setIndicatorContentView:(id)arg1;
- (void)setIndicatorFeed:(id)arg1;
- (void)setIndicatorStore:(id)arg1;
- (void)setIndicatorTransformCurve:(id)arg1;
- (void)setInteractor:(id)arg1;
- (void)setIsPlatterExpanded:(bool)arg1;
- (void)setIsScrubbing:(bool)arg1;
- (void)setJoggingFeedbackGenerator:(id)arg1;
- (void)setPreferredIndicatorImage:(id)arg1;
- (void)setPreviousMoveDirection:(long long)arg1;
- (void)setPreviousTouchLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setScrubProgress:(id)arg1;
- (void)setScrubbingGestureRecognizer:(id)arg1;
- (void)setSelectionFeedbackGenerator:(id)arg1;
- (void)setSuccessiveTapAction:(id)arg1;
- (bool)shouldDisableTouchTracking;
- (struct CGSize { double x1; double x2; })sizeForNumberOfPages:(long long)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)successiveTapAction;
- (void)trackingGestureRecognizer:(id)arg1 recognizedControlEvent:(unsigned long long)arg2 withEvent:(id)arg3;
- (void)traitCollectionDidChangeOnSubtree:(id)arg1;
- (void)updateDisplayedPageToCurrentPage;
- (void)updateScrubbingGestureRecognizer;

@end
