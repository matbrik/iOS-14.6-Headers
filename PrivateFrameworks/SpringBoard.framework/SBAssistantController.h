/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBAssistantController : NSObject <CSCoverSheetOverlaying, CSExternalBehaviorProviding, PTSettingsKeyObserver, SBFAuthenticationResponder, SBFIdleTimerBehaviorProviding, SBFluidGestureDismissable, SBHomeGesturePanGestureRecognizerInterfaceDelegate, SBHomeGestureParticipantDelegate, SBHomeGrabberPointerClickDelegate, SBIdleTimerProviding, SBSystemGestureRecognizerDelegate, SiriPresentationSpringBoardMainScreenViewControllerDelegate, UIGestureRecognizerDelegate> {
    NSString * _appDisplayIDBeingHosted;
    SBAssistantActiveInterfaceOrientationWindow * _assistantActiveInterfaceOrientationWindow;
    SBAssistantWindow * _assistantWindow;
    NSSet * _audioCategoriesDisablingVolumeHUD;
    SBHomeGesturePanGestureRecognizer * _bottomEdgeDismissGestureRecognizer;
    <BSInvalidatable> * _deferOrientationUpdatesAssertion;
    SBFAuthenticationAssertion * _disableAssertion;
    bool  _dismissing;
    SBFluidDismissalState * _fluidDismissalState;
    <BSInvalidatable> * _hideApplicationModalAlertsAssertion;
    long long  _homeAffordanceSuppression;
    SBHomeGestureParticipant * _homeGestureParticipant;
    <SBIdleTimer> * _idleTimer;
    <SBIdleTimerCoordinating> * _idleTimerCoordinator;
    bool  _isHidingOtherWindows;
    FBDisplayLayoutElement * _mainDisplayLayoutElement;
    SiriPresentationSpringBoardMainScreenViewController * _mainScreenSiriPresentation;
    NSHashTable * _observers;
    BSEventQueue * _operationQueue;
    UIPanGestureRecognizer * _panToDismissSiriGestureRecognizer;
    SiriPresentationSpringBoardMainScreenViewController * _presentedMainScreenSiriPresentation;
    UIApplicationSceneDeactivationAssertion * _resignActiveAssertion;
    bool  _screenShotServicesIsRunning;
    SBSystemAnimationSettings * _settings;
    bool  _shareHomeGesture;
    bool  _shouldPassTapsThroughToSiri;
    bool  _siriWantsToShowHomeAffordance;
    <BSInvalidatable> * _suspendWallpaperAnimationAssertion;
    bool  _swipesDismissSiri;
    UITapGestureRecognizer * _tapToDismissSiriGestureRecognizer;
    bool  _tapsDismissSiri;
    SBTransientOverlayViewController * _topmostTransientViewControllerAtPresentation;
    bool  _unlockedDevice;
    bool  _visible;
    NSMutableArray * _windowLevelAssertions;
}

@property (nonatomic, readonly) bool contentObscuresScreen;
@property (nonatomic, readonly, copy) NSString *coverSheetIdentifier;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (nonatomic, retain) SBFluidDismissalState *fluidDismissalState;
@property (readonly) unsigned long long hash;
@property (getter=_idleTimerCoordinator, setter=_setIdleTimerCoordinator:, nonatomic) <SBIdleTimerCoordinating> *idleTimerCoordinator;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (nonatomic, readonly) long long notificationBehavior;
@property (nonatomic, readonly) long long participantState;
@property (nonatomic, readonly) bool preventsCoverSheetPresentation;
@property (nonatomic, readonly) long long proximityDetectionMode;
@property (nonatomic, readonly) unsigned long long restrictedCapabilities;
@property (nonatomic, readonly) long long scrollingStrategy;
@property (readonly) Class superclass;
@property (nonatomic, retain) <BSInvalidatable> *suspendWallpaperAnimationAssertion;
@property (nonatomic, readonly) bool unlockedDevice;
@property (getter=isVisible, nonatomic, readonly) bool visible;

+ (void)bootstrapServices;
+ (bool)isVisible;
+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
+ (bool)shouldBreadcrumbLaunchedApplicationWithBundleIdentifier:(id)arg1;
+ (bool)shouldDismissSiriForGestureTranslation:(struct CGPoint { double x1; double x2; })arg1 velocity:(struct CGPoint { double x1; double x2; })arg2;

- (void).cxx_destruct;
- (id)_activationSettingsWithPunchoutStyle:(long long)arg1;
- (void)_bioAuthenticated:(id)arg1;
- (void)_commonHandlerForSiriDismissalGesture:(id)arg1;
- (void)_configureHomeGesture;
- (void)_configurePanToDismissGestureDependencies;
- (void)_createAssistantWindowIfNecessaryForSiriPresentationOptions:(id)arg1;
- (id)_createPanToDismissSiriGestureRecognizer;
- (id)_createTapToDimissSiriGestureRecognizer;
- (double)_defaultAnimatedDismissDurationForMainScreen;
- (void)_deviceBlocked:(id)arg1;
- (void)_dismissForMainScreenWithFactory:(id)arg1 dismissalOptions:(id)arg2 completion:(id /* block */)arg3;
- (void)_dockFrameDidChange:(id)arg1;
- (void)_handleBottomEdgeDismissGesture:(id)arg1;
- (id)_idleTimerBehavior;
- (id)_idleTimerCoordinator;
- (id)_init;
- (void)_noteDeviceLockedOrBlocked;
- (void)_pannedToDismissSiri:(id)arg1;
- (void)_presentForMainScreenAnimated:(bool)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)_prototypeSettingsChanged;
- (void)_remoteLocked:(id)arg1;
- (void)_removeHomeGesture;
- (void)_removeScreenEdgePanGestureRecognizerIfNecessary;
- (void)_resetSystemGestures;
- (void)_restoreOrientation;
- (void)_setIdleTimerCoordinator:(id)arg1;
- (void)_setShareHomeGesture:(bool)arg1;
- (void)_setStatusBarHidden:(bool)arg1 animated:(bool)arg2;
- (void)_setTouchesPassThroughToSpringBoard:(bool)arg1;
- (void)_setUnlockedDevice:(bool)arg1;
- (void)_setVisible:(bool)arg1;
- (void)_setupSystemGestures;
- (id)_siriHomeAffordanceSuppressionAsString:(long long)arg1;
- (void)_tappedToDismissSiri:(id)arg1;
- (void)_tearDownSystemGestures;
- (void)_teardownWindowInUse;
- (void)_toggleModalAlertHidingAssertion:(bool)arg1;
- (void)_turnScreenOffWithCompletion:(id /* block */)arg1;
- (void)_uiLocked:(id)arg1;
- (void)_updateDockViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateHomeGestureParticipant;
- (void)_updateOrbLocation:(id)arg1;
- (void)_updateOrientationLock;
- (void)_updateRootViewControllerOwnsHomeGesture;
- (void)_updateRootViewControllerShowsHomeAffordance:(bool)arg1;
- (void)_updateSceneClientSettings;
- (void)_updateShouldPassTapsThrough;
- (void)_updateWindowLevel;
- (void)_viewDidAppearOnMainScreen:(bool)arg1;
- (void)_viewDidDisappearOnMainScreen:(bool)arg1;
- (void)_viewWillAppearOnMainScreen:(bool)arg1;
- (void)_viewWillDisappearOnMainScreen:(bool)arg1;
- (id)acquireWindowLevelAssertionWithPriority:(long long)arg1 windowLevel:(double)arg2 reason:(id)arg3;
- (id)activationSettings;
- (void)addObserver:(id)arg1;
- (void)applicationProcessDidChangeState:(id)arg1;
- (void)conformsToCSBehaviorProviding;
- (void)conformsToCSExternalBehaviorProviding;
- (bool)contentObscuresScreen;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)coverSheetIdentifier;
- (void)dealloc;
- (void)deviceUnlockRequestedWithPassword:(id)arg1;
- (void)dismissAssistantViewIfNecessary;
- (void)dismissAssistantViewIfNecessaryForGestureTranslation:(struct CGPoint { double x1; double x2; })arg1 velocity:(struct CGPoint { double x1; double x2; })arg2;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 completion:(id /* block */)arg2;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 factory:(id)arg2 completion:(id /* block */)arg3;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 factory:(id)arg2 dismissalOptions:(id)arg3 completion:(id /* block */)arg4;
- (void)dismissAssistantViewIfNecessaryWithDismissalOptions:(id)arg1;
- (void)dismissOverlayForDashBoardAnimated:(bool)arg1;
- (id)fluidDismissalState;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleFailedAuthenticationRequest:(id)arg1 error:(id)arg2;
- (void)handleInvalidAuthenticationRequest:(id)arg1;
- (void)handleSuccessfulAuthenticationRequest:(id)arg1;
- (void)homeGestureParticipantOwningHomeGestureDidChange:(id)arg1;
- (void)homeGestureParticipantResolvedHomeAffordanceSuppressionDidChange:(id)arg1;
- (void)homeGrabberViewDidReceiveClick:(id)arg1;
- (long long)idleTimerDuration;
- (long long)idleTimerMode;
- (long long)idleWarnMode;
- (id)init;
- (bool)isEnabled;
- (bool)isVisible;
- (id)mainScreenView;
- (long long)notificationBehavior;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)overrideInterfaceOrientation:(long long*)arg1;
- (long long)participantState;
- (bool)preventsCoverSheetPresentation;
- (long long)proximityDetectionMode;
- (void)removeObserver:(id)arg1;
- (bool)requestPasscodeUnlockWithCompletion:(id /* block */)arg1;
- (unsigned long long)restrictedCapabilities;
- (id)rootViewController;
- (void)screenWakeIdleTimerResetRequested;
- (void)screenWakeRequested;
- (long long)scrollingStrategy;
- (void)setFluidDismissalState:(id)arg1;
- (void)setSuspendWallpaperAnimationAssertion:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldShowLockStatusBarTime;
- (bool)shouldShowSystemVolumeHUDForCategory:(id)arg1;
- (void)siriPresentation:(id)arg1 didUpdateAudioCategoriesDisablingVolumeHUD:(id)arg2;
- (void)siriPresentation:(id)arg1 didUpdateHomeGestureSharing:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldDismissForSwipesOutsideContent:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldDismissForTapsOutsideContent:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldPassTapsThroughTo:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldPassTouchesThroughToSpringBoard:(bool)arg2;
- (void)siriPresentation:(id)arg1 isEnabledDidChange:(bool)arg2;
- (bool)siriPresentation:(id)arg1 requestsDeviceUnlockWithPassword:(id)arg2;
- (void)siriPresentation:(id)arg1 requestsDismissalWithOptions:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 requestsPresentationWithOptions:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 requestsPunchout:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 setHomeAffordanceSuppression:(long long)arg2;
- (void)siriPresentation:(id)arg1 setShowsHomeAffordance:(bool)arg2;
- (id)suspendWallpaperAnimationAssertion;
- (long long)touchInterfaceOrientationForGestureRecognizer:(id)arg1;
- (bool)unlockedDevice;
- (id)viewForSystemGestureRecognizer:(id)arg1;
- (id)window;

@end
