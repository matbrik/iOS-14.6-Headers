/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKStrokeSpatialCache : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedBounds;
    PKDrawing * _cachedDrawing;
    long long  _currentGenerationCount;
    <PKStrokeSpatialCacheDelegate> * _delegate;
    id /* block */  _generateOnscreenVisibleStrokesBlock;
    bool  _hasValidOnscreenVisibleStrokes;
    NSArray * _onscreenVisibleStrokes;
    NSObject<OS_dispatch_queue> * _onscreenVisibleStrokesQueue;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedBounds;
@property (nonatomic, retain) PKDrawing *cachedDrawing;
@property (nonatomic) long long currentGenerationCount;
@property (nonatomic) <PKStrokeSpatialCacheDelegate> *delegate;
@property (nonatomic, copy) id /* block */ generateOnscreenVisibleStrokesBlock;
@property (nonatomic) bool hasValidOnscreenVisibleStrokes;
@property (nonatomic, retain) NSArray *onscreenVisibleStrokes;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *onscreenVisibleStrokesQueue;

- (void).cxx_destruct;
- (void)_cancelCacheGeneration;
- (void)_cancelGenerateVisibleStrokesBlockIfNecessary;
- (void)_clearCache;
- (void)_clearOnscreenVisibleStrokeCacheAndCancelBlockIfNecessary;
- (void)_findOnscreenVisibleStrokesForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inDrawing:(id)arg2 completion:(id /* block */)arg3;
- (void)_generateStrokesOnCanvasForVisibleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inDrawing:(id)arg2;
- (void)_invalidateCacheForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inDrawing:(id)arg2;
- (void)_invalidateCacheForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inDrawing:(id)arg2 force:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedBounds;
- (id)cachedDrawing;
- (long long)currentGenerationCount;
- (void)dealloc;
- (id)delegate;
- (id /* block */)generateOnscreenVisibleStrokesBlock;
- (bool)hasValidOnscreenVisibleStrokes;
- (id)init;
- (id)onscreenVisibleStrokes;
- (id)onscreenVisibleStrokesQueue;
- (void)setCachedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCachedDrawing:(id)arg1;
- (void)setCurrentGenerationCount:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGenerateOnscreenVisibleStrokesBlock:(id /* block */)arg1;
- (void)setHasValidOnscreenVisibleStrokes:(bool)arg1;
- (void)setOnscreenVisibleStrokes:(id)arg1;
- (void)setOnscreenVisibleStrokesQueue:(id)arg1;

@end
