/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface CTLCropSupport : NSObject

+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateCropRectWithAsset:(id)arg1 aspectRatio:(double)arg2 destinationSize:(struct CGSize { double x1; double x2; })arg3 cropMethodType:(long long)arg4;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateSuggestedCropRectWithAsset:(id)arg1 aspectRatio:(double)arg2 destinationSize:(struct CGSize { double x1; double x2; })arg3;
+ (struct CGImage { }*)createCGImageWithSourceCGImage:(id)arg1 normalizedSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 destinationSize:(struct CGSize { double x1; double x2; })arg3;
+ (bool)createImageFileWithAsset:(id)arg1 fileType:(id)arg2 normalizedSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 destinationSize:(struct CGSize { double x1; double x2; })arg4 scale:(double)arg5 url:(id)arg6 error:(id*)arg7;
+ (bool)createImageFileWithAsset:(id)arg1 fileType:(id)arg2 scale:(double)arg3 rects:(id)arg4 url:(id)arg5 error:(id*)arg6;
+ (struct CGImage { }*)createScaledImageForImage:(struct CGImage { }*)arg1 scale:(double)arg2;
+ (struct CGImage { }*)createScaledImageForImage:(struct CGImage { }*)arg1 scale:(double)arg2 rectAndColors:(id)arg3;
+ (struct CGImage { }*)croppedImageForAsset:(id)arg1 normalizedSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 destinationSize:(struct CGSize { double x1; double x2; })arg3;
+ (id)fetchNewCGImageForAsset:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
+ (struct CGSize { double x1; double x2; })playbackSizeForAsset:(id)arg1;
+ (id)rectAndColorStringFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 colorIndex:(long long)arg2;
+ (id)sourceImageForAsset:(id)arg1;
+ (bool)writeImage:(struct CGImage { }*)arg1 toURL:(id)arg2 fileType:(id)arg3;

@end
