/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Transparency.framework/Transparency
 */

@interface KTTransparentData : NSObject <NSSecureCoding> {
    NSMutableArray * _accounts;
    NSDate * _currentTreeEpochBeginDate;
    NSData * _inclusionProof;
    NSData * _uriVRFOutput;
}

@property (retain) NSMutableArray *accounts;
@property (retain) NSDate *currentTreeEpochBeginDate;
@property (retain) NSData *inclusionProof;
@property (retain) NSData *uriVRFOutput;

+ (id)filterLoggableDatas:(id)arg1 clientDataVRFOutput:(id)arg2;
+ (id)filterLoggableDatas:(id)arg1 deviceIdVRFOutput:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accountForAccountId:(id)arg1;
- (id)accounts;
- (void)addAccountsObject:(id)arg1;
- (id)clientDatasMissingVRFs:(id)arg1 maximum:(long long)arg2;
- (id)copy;
- (id)currentTreeEpochBeginDate;
- (id)debugDescription;
- (id)description;
- (id)devicesMissingVRFs:(id)arg1 maximum:(long long)arg2;
- (id)earliestAddedDate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)inclusionProof;
- (id)initWithCoder:(id)arg1;
- (id)initWithUriVRFOutput:(id)arg1;
- (id)initWithUriVRFOutput:(id)arg1 mapLeaf:(id)arg2 pendingSMTs:(id)arg3 error:(id*)arg4;
- (bool)isEqual:(id)arg1;
- (void)markAccountsWithMutationMs:(unsigned long long)arg1;
- (id)mutationsFromSMTs:(id)arg1 error:(id*)arg2;
- (void)removeAccountsObject:(id)arg1;
- (id)serialize;
- (void)setAccounts:(id)arg1;
- (void)setCurrentTreeEpochBeginDate:(id)arg1;
- (void)setInclusionProof:(id)arg1;
- (void)setUriVRFOutput:(id)arg1;
- (id)sortMutationsByTimestamp:(id)arg1;
- (bool)updateWithMapLeaf:(id)arg1 error:(id*)arg2;
- (bool)updateWithMutation:(id)arg1 error:(id*)arg2;
- (bool)updateWithSMTs:(id)arg1 error:(id*)arg2;
- (id)uriVRFOutput;
- (bool)validateActiveClientDatasForAccountId:(id)arg1 error:(id*)arg2;
- (bool)validateAndUpdateWithServerLoggableDatas:(id)arg1 accountId:(id)arg2 requestTime:(double)arg3 error:(id*)arg4;
- (bool)validateAndUpdateWithSyncedLoggableDatas:(id)arg1 accountId:(id)arg2 error:(id*)arg3;
- (bool)validateOtherAccountIDsInactiveForAccountId:(id)arg1 requestTime:(double)arg2 error:(id*)arg3;

@end
