/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface RMConnectionEndpoint : NSObject {
    <RMConnectionLifecycleDelegate> * _connectionDelegate;
    <RMConnectionDataDelegate> * _dataDelegate;
    NSObject<OS_xpc_object> * _messagingConnection;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_xpc_object> * _streamingClientConnection;
    NSObject<OS_xpc_object> * _streamingClientListener;
    NSObject<OS_xpc_object> * _streamingServerConnection;
}

@property (nonatomic, readonly) NSObject<OS_xpc_object> *connection;
@property (nonatomic) <RMConnectionLifecycleDelegate> *connectionDelegate;
@property (nonatomic) <RMConnectionDataDelegate> *dataDelegate;
@property (nonatomic, retain) NSObject<OS_xpc_object> *messagingConnection;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSObject<OS_xpc_object> *streamingClientConnection;
@property (nonatomic, retain) NSObject<OS_xpc_object> *streamingClientListener;
@property (nonatomic, retain) NSObject<OS_xpc_object> *streamingServerConnection;

- (void).cxx_destruct;
- (id)connection;
- (id)connectionDelegate;
- (id)dataDelegate;
- (void)handleInterruption;
- (void)handleStreamXpcError:(id)arg1 withErrorHandler:(id /* block */)arg2;
- (void)handleStreamXpcReply:(id)arg1 withErrorHandler:(id /* block */)arg2;
- (void)handleXpcMessage:(id)arg1 replyBlock:(id /* block */)arg2;
- (id)initWithConnection:(id)arg1 queue:(id)arg2;
- (void)invalidate;
- (bool)isValid;
- (id)messagingConnection;
- (void)pause;
- (id)queue;
- (void)requestStreamWithMessage:(id)arg1 data:(id)arg2 errorHandler:(id /* block */)arg3;
- (void)sendMessage:(id)arg1 withData:(id)arg2;
- (void)sendMessage:(id)arg1 withData:(id)arg2 reply:(id /* block */)arg3;
- (void)setConnectionDelegate:(id)arg1;
- (void)setDataDelegate:(id)arg1;
- (void)setMessagingConnection:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setStreamingClientConnection:(id)arg1;
- (void)setStreamingClientListener:(id)arg1;
- (void)setStreamingServerConnection:(id)arg1;
- (void)start;
- (void)startReceivingStreamOnConnection:(id)arg1 errorHandler:(id /* block */)arg2;
- (void)startServingStreamToEndpoint:(id)arg1 error:(id*)arg2;
- (bool)startServingStreamWithHandler:(id)arg1;
- (void)stopReceivingStream;
- (void)stopServingStream;
- (id)streamingClientConnection;
- (id)streamingClientListener;
- (id)streamingServerConnection;
- (void)wrapReplyToXpcMessage:(id)arg1 withName:(id)arg2 data:(id)arg3;

@end
