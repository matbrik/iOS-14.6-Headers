/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/DesktopServicesPriv
 */

@interface DSNSHelperContext : NSObject {
    struct TErrorOperationReporter { int (**x1)(); unsigned long long x2; unsigned int x3; long long x4; int x5; struct shared_ptr<TCFURLInfo> { struct TCFURLInfo {} *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; id x7; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString {} *x_1_2_1; } x_8_1_1; } x8; unsigned int x9; int x10; } * _operationReporter;
    struct TDSHelperContext { int (**x1)(); struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_2_1_1; struct _opaque_pthread_t {} *x_2_1_2; } x2; struct TConditionVariable { struct condition_variable_any { struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_4_1; BOOL x_1_4_2[40]; } x_1_3_1; } x_1_2_1; struct shared_ptr<std::__1::mutex> { struct mutex {} *x_2_3_1; struct __shared_weak_count {} *x_2_3_2; } x_1_2_2; } x_3_1_1; int x_3_1_2; } x3; bool x4; unsigned int x5; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_6_1_1; } x6; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString {} *x_1_2_1; } x_7_1_1; } x7; unsigned char x8[16]; struct AuthorizationOpaqueRef {} *x9; struct TRef<NSObject<OS_xpc_object> *, TRetainReleasePolicy<xpc_object_t>> { id x_10_1_1; } x10; struct TNSRef<DS_TDSHelperConnectionHandler, void> { id x_11_1_1; } x11; } * impl;
}

- (void)cancelHelper;
- (bool)copyItemsAtURLs:(id)arg1 toURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4;
- (bool)copyItemsV2AtURLs:(id)arg1 toURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4;
- (bool)copyRootMetadataAtURL:(id)arg1 toDestinationURL:(id)arg2 targetName:(id)arg3 error:(id*)arg4;
- (bool)createLockNamed:(id)arg1 destinationURL:(id)arg2 sourceURL:(id)arg3 clonedInstead:(bool*)arg4 error:(id*)arg5;
- (void)dealloc;
- (bool)ensureFreeSpace:(long long)arg1 onVolume:(id)arg2 error:(id*)arg3;
- (id)initWithOptions:(unsigned int)arg1 delegate:(id)arg2;
- (bool)launchDesktopServicesHelper:(id*)arg1;
- (bool)preflightAndCloneIfPossible:(id)arg1 toURL:(id)arg2 clonesCreated:(id*)arg3 sourceURLsToCopy:(id*)arg4 targetNames:(id*)arg5 bounceOnCollision:(bool)arg6 error:(id*)arg7;
- (void)quit;
- (bool)sizeURL:(id)arg1 destinationURL:(id)arg2 targetName:(id)arg3 spaceNeeds:(struct DestinationSpaceNeeds { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; long long x10; long long x11; long long x12; long long x13; BOOL x14[1024]; BOOL x15[1024]; long long x16; unsigned long long x17; bool x18; unsigned int x19; int x20; }*)arg4 error:(id*)arg5;

@end
