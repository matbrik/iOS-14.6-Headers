/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBHWidgetStackViewController : UIViewController <BSUIScrollViewDelegate, PTSettingsKeyObserver, SBIconViewCustomImageViewControllerObserving, SBIconViewCustomImageViewControlling, SBLeafIconObserver> {
    <SBLeafIconDataSource> * _activeWidget;
    bool  _alwaysShowsAsStack;
    SBFFluidBehaviorSettings * _animationSettings;
    bool  _automaticallyUpdatesVisiblySettled;
    unsigned long long  _backgroundAnimationCount;
    bool  _backgroundBlurEnabled;
    UIView * _backgroundView;
    id /* block */  _backgroundViewProvider;
    double  _brightness;
    UIView * _containerView;
    <SBHWidgetStackViewControllerDataSource> * _dataSource;
    <SBHWidgetStackViewControllerDelegate> * _delegate;
    UIView * _dimmingView;
    bool  _editing;
    bool  _flashPageControlOnNextAlphaChange;
    bool  _flashPageControlOnNextAppearance;
    bool  _forcesEdgeAntialiasing;
    bool  _highlightsAtAnySize;
    SBWidgetIcon * _icon;
    struct SBIconImageInfo { 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
        double scale; 
        double continuousCornerRadius; 
    }  _iconImageInfo;
    NSHashTable * _imageUpdateDisableAssertions;
    <BSInvalidatable> * _imageUpdatesDisabledForContextMenuAssertion;
    unsigned long long  _imageViewAlignment;
    _UILegibilitySettings * _legibilitySettings;
    NSHashTable * _observers;
    bool  _overlapping;
    UIPageControl * _pageControl;
    NSTimer * _pageControlHidingTimer;
    unsigned long long  _pauseReasons;
    unsigned long long  _presentationMode;
    bool  _privateModeEnabled;
    BSUIScrollView * _scrollView;
    <BSInvalidatable> * _scrollingTouchCancellationAssertion;
    bool  _showStackBorderWhenShowingPageControl;
    bool  _showingContextMenu;
    bool  _showsSquareCorners;
    bool  _userInteractionEnabled;
    unsigned long long  _userVisibilityStatus;
    NSMutableDictionary * _widgetContainerViewControllers;
    unsigned long long  _widgetScaleAnimationCount;
    SBHWidgetSettings * _widgetSettings;
}

@property (nonatomic, retain) <SBLeafIconDataSource> *activeWidget;
@property (nonatomic) bool alwaysShowsAsStack;
@property (nonatomic, retain) SBFFluidBehaviorSettings *animationSettings;
@property (nonatomic, readonly, copy) NSArray *applicationShortcutItems;
@property (nonatomic) bool automaticallyUpdatesVisiblySettled;
@property (nonatomic) unsigned long long backgroundAnimationCount;
@property (getter=isBackgroundBlurEnabled, nonatomic) bool backgroundBlurEnabled;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, copy) id /* block */ backgroundViewProvider;
@property (nonatomic) double brightness;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic, readonly) double continuousCornerRadius;
@property (nonatomic) <SBHWidgetStackViewControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBHWidgetStackViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIView *dimmingView;
@property (getter=isDropping, nonatomic) bool dropping;
@property (getter=isEditing, nonatomic) bool editing;
@property (nonatomic) bool flashPageControlOnNextAlphaChange;
@property (nonatomic) bool flashPageControlOnNextAppearance;
@property (nonatomic) bool forcesEdgeAntialiasing;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool highlightsAtAnySize;
@property (nonatomic, retain) SBWidgetIcon *icon;
@property (nonatomic) struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; } iconImageInfo;
@property (nonatomic, retain) NSHashTable *imageUpdateDisableAssertions;
@property (nonatomic, retain) <BSInvalidatable> *imageUpdatesDisabledForContextMenuAssertion;
@property (nonatomic) unsigned long long imageViewAlignment;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (getter=isOverlapping, nonatomic) bool overlapping;
@property (nonatomic, retain) UIPageControl *pageControl;
@property (nonatomic, retain) NSTimer *pageControlHidingTimer;
@property (nonatomic) unsigned long long pauseReasons;
@property (nonatomic) unsigned long long presentationMode;
@property (getter=isPrivateModeEnabled, nonatomic) bool privateModeEnabled;
@property (nonatomic, retain) BSUIScrollView *scrollView;
@property (nonatomic, retain) <BSInvalidatable> *scrollingTouchCancellationAssertion;
@property (nonatomic) bool showStackBorderWhenShowingPageControl;
@property (getter=isShowingContextMenu, nonatomic) bool showingContextMenu;
@property (nonatomic) bool showsSquareCorners;
@property (nonatomic, readonly) UIView *snapshotView;
@property (readonly) Class superclass;
@property (getter=isUserInteractionEnabled, nonatomic) bool userInteractionEnabled;
@property (nonatomic) unsigned long long userVisibilityStatus;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleBounds;
@property (nonatomic, readonly) <SBLeafIconDataSource> *visiblyActiveDataSource;
@property (nonatomic, readonly) bool wantsCaptureOnlyBackgroundView;
@property (nonatomic, readonly) bool wantsLabelHidden;
@property (nonatomic, retain) NSMutableDictionary *widgetContainerViewControllers;
@property (nonatomic, readonly) SBWidgetIcon *widgetIcon;
@property (nonatomic) unsigned long long widgetScaleAnimationCount;
@property (nonatomic, retain) SBHWidgetSettings *widgetSettings;
@property (nonatomic, readonly) NSArray *widgetViewControllers;

- (void).cxx_destruct;
- (bool)_alwaysShowStackBorder;
- (bool)_alwaysShowStackPageControl;
- (bool)_canShowWhileLocked;
- (void)_createBackgroundViewIfNecessary;
- (bool)_createViewControllerForWidgetIfNecessary:(id)arg1 usingSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_decrementBackgroundAnimationCount;
- (void)_decrementWidgetScaleAnimationCount;
- (id)_disableImageUpdatesForReason:(id)arg1 animateChangesUponInvalidation:(bool)arg2;
- (void)_flashPageControlAnimated:(bool)arg1;
- (void)_handleInstalledAppsChanged:(id)arg1;
- (void)_incrementBackgroundAnimationCount;
- (void)_incrementWidgetScaleAnimationCount;
- (bool)_insetWidgetsForTrackingAppearance;
- (bool)_isScrollViewTracking;
- (void)_layoutWithAnimationUpdateMode:(long long)arg1;
- (long long)_newActiveWidgetIndexForContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_pageControlIsHorizontallyConstrained;
- (struct CGSize { double x1; double x2; })_pageSize;
- (void)_removeWidget:(id)arg1 animated:(bool)arg2;
- (void)_restartPageControlTimer;
- (struct CGPoint { double x1; double x2; })_restingContentOffset;
- (bool)_scrollToActiveWidgetAnimated:(bool)arg1;
- (struct CGSize { double x1; double x2; })_scrollViewContentSize;
- (void)_setPageControlHidden:(bool)arg1 animated:(bool)arg2;
- (bool)_shouldDrawSystemBackgroundMaterialForWidget:(id)arg1;
- (bool)_showAdjacentWidgets;
- (void)_updateAccessibilityValue;
- (void)_updateActiveWidgetIndexAndScrollViewContentOffset;
- (void)_updateBackgroundViewWithAnimationUpdateMode:(long long)arg1;
- (void)_updatePageControlWithAnimationUpdateMode:(long long)arg1;
- (void)_updatePauseReasonForWidgetViewControllers;
- (void)_updatePresentationModeForWidgetViewControllers;
- (void)_updatePrivateModeForWidgetViewControllers;
- (void)_updateScrollViewDelaysContentTouches;
- (void)_updateVisiblySettledForWidgetViewControllers;
- (void)_updateWidgetViewClippingAndBackgroundView;
- (void)_updateWidgetViewEdgeAntialiasing;
- (void)_updateWidgetViewHitTesting;
- (void)_updateWidgetViewsWithAnimationUpdateMode:(long long)arg1;
- (id)_widgetContextMenuController;
- (bool)_widgetHitTestingDisabled;
- (id)activeWidget;
- (void)addCustomImageViewControllerObserver:(id)arg1;
- (bool)alwaysShowsAsStack;
- (id)animationSettings;
- (id)applicationShortcutItems;
- (bool)automaticallyUpdatesVisiblySettled;
- (unsigned long long)backgroundAnimationCount;
- (id)backgroundView;
- (id /* block */)backgroundViewProvider;
- (double)brightness;
- (id)cancelTouchesForCurrentEventInHostedContent;
- (id)containerView;
- (double)continuousCornerRadius;
- (void)customImageViewControllerWantsLabelHiddenDidChange:(id)arg1;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (void)didSelectApplicationShortcutItem:(id)arg1;
- (id)dimmingView;
- (id)disableImageUpdatesForReason:(id)arg1;
- (bool)flashPageControlOnNextAlphaChange;
- (bool)flashPageControlOnNextAppearance;
- (bool)forcesEdgeAntialiasing;
- (bool)highlightsAtAnySize;
- (id)icon;
- (struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })iconImageInfo;
- (id)imageUpdateDisableAssertions;
- (id)imageUpdatesDisabledForContextMenuAssertion;
- (unsigned long long)imageViewAlignment;
- (id)initWithIcon:(id)arg1;
- (bool)isBackgroundBlurEnabled;
- (bool)isEditing;
- (bool)isOverlapping;
- (bool)isPrivateModeEnabled;
- (bool)isShowingContextMenu;
- (bool)isUserInteractionEnabled;
- (void)leafIcon:(id)arg1 didAddIconDataSource:(id)arg2;
- (void)leafIcon:(id)arg1 didChangeActiveDataSource:(id)arg2;
- (void)leafIcon:(id)arg1 didRemoveIconDataSource:(id)arg2;
- (id)legibilitySettings;
- (void)loadView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)pageControl;
- (id)pageControlHidingTimer;
- (unsigned long long)pauseReasons;
- (unsigned long long)presentationMode;
- (void)removeCustomImageViewControllerObserver:(id)arg1;
- (id)scrollView;
- (void)scrollViewDidEndScrolling:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (id)scrollingTouchCancellationAssertion;
- (void)setActiveWidget:(id)arg1;
- (void)setAlwaysShowsAsStack:(bool)arg1;
- (void)setAnimationSettings:(id)arg1;
- (void)setAutomaticallyUpdatesVisiblySettled:(bool)arg1;
- (void)setBackgroundAnimationCount:(unsigned long long)arg1;
- (void)setBackgroundBlurEnabled:(bool)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBackgroundViewProvider:(id /* block */)arg1;
- (void)setBrightness:(double)arg1;
- (void)setContainerView:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmingView:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setFlashPageControlOnNextAlphaChange:(bool)arg1;
- (void)setFlashPageControlOnNextAppearance:(bool)arg1;
- (void)setForcesEdgeAntialiasing:(bool)arg1;
- (void)setHighlightsAtAnySize:(bool)arg1;
- (void)setIcon:(id)arg1;
- (void)setIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (void)setImageUpdateDisableAssertions:(id)arg1;
- (void)setImageUpdatesDisabledForContextMenuAssertion:(id)arg1;
- (void)setImageViewAlignment:(unsigned long long)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setOverlapping:(bool)arg1;
- (void)setPageControl:(id)arg1;
- (void)setPageControlHidingTimer:(id)arg1;
- (void)setPauseReasons:(unsigned long long)arg1;
- (void)setPresentationMode:(unsigned long long)arg1;
- (void)setPrivateModeEnabled:(bool)arg1;
- (void)setScrollView:(id)arg1;
- (void)setScrollingTouchCancellationAssertion:(id)arg1;
- (void)setShowStackBorderWhenShowingPageControl:(bool)arg1;
- (void)setShowingContextMenu:(bool)arg1;
- (void)setShowsSquareCorners:(bool)arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (void)setUserVisibilityStatus:(unsigned long long)arg1;
- (void)setWidgetContainerViewControllers:(id)arg1;
- (void)setWidgetScaleAnimationCount:(unsigned long long)arg1;
- (void)setWidgetSettings:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)showStackBorderWhenShowingPageControl;
- (bool)showsSquareCorners;
- (id)snapshotView;
- (id)sourceView;
- (void)updateImageAnimated:(bool)arg1;
- (unsigned long long)userVisibilityStatus;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleBounds;
- (id)visiblyActiveDataSource;
- (bool)wantsCaptureOnlyBackgroundView;
- (id)widgetContainerViewControllers;
- (id)widgetIcon;
- (unsigned long long)widgetScaleAnimationCount;
- (id)widgetSettings;
- (id)widgetViewControllers;
- (void)willShowContextMenuAtLocation:(struct CGPoint { double x1; double x2; })arg1;

@end
