/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRNMS : NSObject {
    unsigned long long  _forestFeatureType;
    unsigned long long  _outputTextFeatureLevel;
    struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double>>> { 
        struct __split_buffer<nms::RectForest<unsigned short, double> *, std::__1::allocator<nms::RectForest<unsigned short, double> *>> { 
            struct RectForest<unsigned short, double> {} **__first_; 
            struct RectForest<unsigned short, double> {} **__begin_; 
            struct RectForest<unsigned short, double> {} **__end_; 
            struct __compressed_pair<nms::RectForest<unsigned short, double> **, std::__1::allocator<nms::RectForest<unsigned short, double> *>> { 
                struct RectForest<unsigned short, double> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, double>>> { 
            unsigned long long __value_; 
        } __size_; 
    }  _postNMSForests;
    struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double>>> { 
        struct __split_buffer<nms::RectForest<unsigned short, double> *, std::__1::allocator<nms::RectForest<unsigned short, double> *>> { 
            struct RectForest<unsigned short, double> {} **__first_; 
            struct RectForest<unsigned short, double> {} **__begin_; 
            struct RectForest<unsigned short, double> {} **__end_; 
            struct __compressed_pair<nms::RectForest<unsigned short, double> **, std::__1::allocator<nms::RectForest<unsigned short, double> *>> { 
                struct RectForest<unsigned short, double> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, double>>> { 
            unsigned long long __value_; 
        } __size_; 
    }  _preNMSForests;
    struct PyramidNMS<unsigned short, double, unsigned char> { 
        int (**_vptr$PyramidNMS)(); 
        struct deque<bool, std::__1::allocator<bool>> { 
            struct __split_buffer<bool *, std::__1::allocator<bool *>> { 
                bool **__first_; 
                bool **__begin_; 
                bool **__end_; 
                struct __compressed_pair<bool **, std::__1::allocator<bool *>> { 
                    bool **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<bool>> { 
                unsigned long long __value_; 
            } __size_; 
        } fullySpecifiedForests; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool>>> { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *>> { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *>> { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool>>> { 
                unsigned long long __value_; 
            } __size_; 
        } masksValid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool>>> { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *>> { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *>> { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool>>> { 
                unsigned long long __value_; 
            } __size_; 
        } masksInvalid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool>>> { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *>> { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *>> { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool>>> { 
                unsigned long long __value_; 
            } __size_; 
        } masksPendingInvalid; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordOverlap; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *>> { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char>>> { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> *>> { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short>>>>>>>> { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineOverlap; 
        struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double>>> {} *pForests; 
        struct PyramidNMSConfig { 
            int (**_vptr$PyramidNMSConfig)(); 
            unsigned long long methodType; 
            unsigned long long scoreType; 
            double scoreMinThreshold; 
            unsigned char scoreMapMinThreshold; 
            bool scoreUseScaleIndex; 
            bool scoreUseArea; 
            double scoreAggregationScalingFactor; 
            bool scoreUseNumSubDatums; 
            unsigned long long scoreNumSubDatumsUpperClip; 
            unsigned long long scoreNumSubDatumsLowerClip; 
            bool ignoreOrphansInFullTile; 
            double heightRatioMinThresholdForContainment; 
            bool computeIntrascaleGeometricRelationships; 
            unsigned long long intersectionNumSamples; 
            bool pendingInvalidRejectCompetingDatums; 
            bool computeAndFilterByIndividualScores; 
            bool processCoincidence; 
            bool processContainment; 
            bool processOverlap; 
            bool processPendingInvalid; 
            unsigned long long favorSubDatumUndersegmentationInProcessingCoincidence; 
            bool favorLargerAreaInProcessingCoincidence; 
            bool favorFineScaleInProcessingCoincidence; 
            double datumMinHeightRatioToUseFullTile; 
            bool useOverlappingWordsInProcessingContainment; 
            double minValidCosAngleInDistributionCheckInProcessingContainment; 
            unsigned long long favorSubDatumUndersegmentationInProcessingContainment; 
            bool favorLargerAreaInProcessingContainment; 
            bool favorFullTileInProcessingContainment; 
            double heightRatioFineToFullMinThresholdFavorFullTileInProcessingContainment; 
            double heightRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment; 
            double widthRatioFineToFullMinThresholdFavorFullTileInProcessingContainment; 
            double widthRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment; 
            double favorFullTileInProcessingOverlap; 
            double coincidenceIOUMinThreshold; 
            double coincidenceIOMinMinThreshold; 
            double containmentIOUMaxThreshold; 
            double containmentIOMinMinThreshold; 
            double constitutionIOUMaxThreshold; 
            double constitutionIOMinMinThreshold; 
            double overlapIOUMinThreshold; 
            double overlapIOUMaxThreshold; 
            double overlapIOMinMinThreshold; 
            double overlapIOMinMaxThreshold; 
        } config; 
    }  _pyrNMS;
    struct PyramidTokenizer<unsigned short, double> { 
        int (**_vptr$PyramidTokenizer)(); 
        struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double>>> {} *pForests; 
        struct PyramidTokenizerConfig { 
            int (**_vptr$PyramidTokenizerConfig)(); 
            unsigned long long methodType; 
            bool isRecursive; 
            double spacingClipMin; 
            double spacingUniformityMinThresholdClipMin; 
            double spacingUniformityMinThresholdClipMax; 
            double spacingUniformityMinThresholdTrueProbability; 
            double spacingRatioMultiplier; 
            bool useAdpativeSpacingRatioMultiplier; 
            unsigned long long adpativeSpacingRatioMultiplierMinNumRects; 
            double adaptiveSpacingRatioMultiplierMinVariationThreshold; 
            double adaptiveSpacingRatioMultiplierLowerBound; 
            unsigned long long singleTokenNumCharsMaxThreshold; 
            unsigned long long singleTokenNumCutpointCandidatesMaxThreshold; 
        } config; 
    }  _pyrTokenizer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x1; struct CRTextDetectorQuadFeature {} *x2; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x_3_1_1; } x3; }*)arg1 withInputSize:(struct CGSize { double x1; double x2; })arg2 andScoreMap:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg3 options:(id)arg4;
- (bool)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x1; struct CRTextDetectorQuadFeature {} *x2; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x_3_1_1; } x3; }*)arg1 withInputSize:(struct CGSize { double x1; double x2; })arg2 scoreMap:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg3 andScoreMapScaleFactor:(double)arg4 options:(id)arg5;
- (bool)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x1; struct CRTextDetectorQuadFeature {} *x2; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x_3_1_1; } x3; }*)arg1 withInputSize:(struct CGSize { double x1; double x2; })arg2 scoreMap:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg3 scoreMapScaleFactor:(double)arg4 andTileRects:(id)arg5 options:(id)arg6;
- (bool)addTextFeatures:(id)arg1 options:(id)arg2;
- (bool)buildRectForest:(struct RectForest<unsigned short, double> { int (**x1)(); unsigned long long x2; struct vImage_Buffer { void *x_3_1_1; unsigned long long x_3_1_2; unsigned long long x_3_1_3; unsigned long long x_3_1_4; } x3; struct QuantizedScoreMap { unsigned long long x_4_1_1; unsigned long long x_4_1_2; struct valarray<unsigned char> { char *x_3_2_1; char *x_3_2_2; } x_4_1_3; } x4; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double>>> { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_1_2_1; struct valarray<double> {} **x_1_2_2; struct valarray<double> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_4_3_1; } x_1_2_4; } x_5_1_1; unsigned long long x_5_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double>>> { unsigned long long x_3_2_1; } x_5_1_3; } x5; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>>> { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; }*)arg1 fromTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x1; struct CRTextDetectorQuadFeature {} *x2; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x_3_1_1; } x3; }*)arg2 forestFeatureType:(unsigned long long)arg3 withInputSize:(struct CGSize { double x1; double x2; })arg4 scoreMap:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg5 andScoreMapScaleFactor:(double)arg6 options:(id)arg7;
- (bool)buildRectForest:(struct RectForest<unsigned short, double> { int (**x1)(); unsigned long long x2; struct vImage_Buffer { void *x_3_1_1; unsigned long long x_3_1_2; unsigned long long x_3_1_3; unsigned long long x_3_1_4; } x3; struct QuantizedScoreMap { unsigned long long x_4_1_1; unsigned long long x_4_1_2; struct valarray<unsigned char> { char *x_3_2_1; char *x_3_2_2; } x_4_1_3; } x4; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double>>> { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_1_2_1; struct valarray<double> {} **x_1_2_2; struct valarray<double> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_4_3_1; } x_1_2_4; } x_5_1_1; unsigned long long x_5_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double>>> { unsigned long long x_3_2_1; } x_5_1_3; } x5; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>>> { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; }*)arg1 fromTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x1; struct CRTextDetectorQuadFeature {} *x2; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature>> { struct CRTextDetectorQuadFeature {} *x_3_1_1; } x3; }*)arg2 forestFeatureType:(unsigned long long)arg3 withInputSize:(struct CGSize { double x1; double x2; })arg4 scoreMap:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg5 scoreMapScaleFactor:(double)arg6 andTileRects:(id)arg7 options:(id)arg8;
- (bool)buildRectForest:(struct RectForest<unsigned short, double> { int (**x1)(); unsigned long long x2; struct vImage_Buffer { void *x_3_1_1; unsigned long long x_3_1_2; unsigned long long x_3_1_3; unsigned long long x_3_1_4; } x3; struct QuantizedScoreMap { unsigned long long x_4_1_1; unsigned long long x_4_1_2; struct valarray<unsigned char> { char *x_3_2_1; char *x_3_2_2; } x_4_1_3; } x4; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double>>> { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_1_2_1; struct valarray<double> {} **x_1_2_2; struct valarray<double> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_4_3_1; } x_1_2_4; } x_5_1_1; unsigned long long x_5_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double>>> { unsigned long long x_3_2_1; } x_5_1_3; } x5; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>>> { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; }*)arg1 fromTextFeatures:(id)arg2 forestFeatureType:(unsigned long long)arg3 options:(id)arg4;
- (id)buildTextFeaturesFromRectForest:(const struct RectForest<unsigned short, double> { int (**x1)(); unsigned long long x2; struct vImage_Buffer { void *x_3_1_1; unsigned long long x_3_1_2; unsigned long long x_3_1_3; unsigned long long x_3_1_4; } x3; struct QuantizedScoreMap { unsigned long long x_4_1_1; unsigned long long x_4_1_2; struct valarray<unsigned char> { char *x_3_2_1; char *x_3_2_2; } x_4_1_3; } x4; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double>>> { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_1_2_1; struct valarray<double> {} **x_1_2_2; struct valarray<double> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *>> { struct valarray<double> {} **x_4_3_1; } x_1_2_4; } x_5_1_1; unsigned long long x_5_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double>>> { unsigned long long x_3_2_1; } x_5_1_3; } x5; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>>>> { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> *>> { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short>>> {} **x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; }*)arg1 byEdge:(unsigned long long)arg2 options:(id)arg3;
- (unsigned long long)convertSubTextFeatures:(id)arg1 toRects:(struct valarray<double> { double *x1; double *x2; }*)arg2;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x1; unsigned long long x2; unsigned long long x3; }*)arg1 asDimType:(unsigned long long)arg2 withCGRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x1; unsigned long long x2; unsigned long long x3; }*)arg1 asDimType:(unsigned long long)arg2 withCRTextDetectorQuad:(const struct CRTextDetectorQuad { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1[4]; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; bool x5; }*)arg3 andInputSize:(struct CGSize { double x1; double x2; })arg4;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x1; unsigned long long x2; unsigned long long x3; }*)arg1 asDimType:(unsigned long long)arg2 withQuad:(const struct valarray<double> { double *x1; double *x2; }*)arg3 andDimType:(unsigned long long)arg4;
- (void)fillTextFeature:(id)arg1 withRectDatum:(const struct valarray<double> { double *x1; double *x2; }*)arg2;
- (id)generateConsolidatedTextFeatures:(id)arg1;
- (id)getTextFeatureFromQuadAngleDatum:(const struct valarray<double> { double *x1; double *x2; }*)arg1;
- (id)initWithNMSMethodType:(unsigned long long)arg1 NMSScoreType:(unsigned long long)arg2 TKZMethodType:(unsigned long long)arg3;
- (bool)preprocessScoreMaps;
- (unsigned long long)tokenizeTextFeature:(id)arg1 intoCutpoints:(struct deque<unsigned short, std::__1::allocator<unsigned short>> { struct __split_buffer<unsigned short *, std::__1::allocator<unsigned short *>> { unsigned short **x_1_1_1; unsigned short **x_1_1_2; unsigned short **x_1_1_3; struct __compressed_pair<unsigned short **, std::__1::allocator<unsigned short *>> { unsigned short **x_4_2_1; } x_1_1_4; } x1; unsigned long long x2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned short>> { unsigned long long x_3_1_1; } x3; }*)arg2 options:(id)arg3;

@end
