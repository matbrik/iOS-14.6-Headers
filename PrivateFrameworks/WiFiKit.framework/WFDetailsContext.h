/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 */

@interface WFDetailsContext : NSObject <WFContextPresenting, WFDetailsProviderContext> {
    id /* block */  _actionHandler;
    bool  _autoJoinEnabled;
    bool  _autoLoginEnabled;
    bool  _connectedWithHardwareAddress;
    bool  _current;
    bool  _diagnosable;
    WFDiagnosticsContext * _diagnosticsContext;
    NSString * _hardwareMACAddress;
    WFIPMonitor * _ipMonitor;
    bool  _isInSaveDataMode;
    bool  _knownNetwork;
    WFKnownNetworkStore * _knownNetworkStore;
    WFNetworkScanRecord * _network;
    WFNetworkProfile * _profile;
    UIViewController<WFNetworkView> * _provider;
    NSString * _randomMACAddress;
    bool  _randomMACAddressConfigurable;
    bool  _randomMACAddressDisabled;
    bool  _randomMACFeatureEnabled;
    bool  _randomMACSwitchOn;
    NSArray * _recommendations;
    long long  _requestedFields;
    NSString * _staticPrivateMACFooterText;
    bool  _supportsAirportManagement;
    NSString * _turnOFFPrivateMACFooterText;
    NSString * _turnONPrivateMACFooterText;
}

@property (nonatomic, copy) id /* block */ actionHandler;
@property (nonatomic) bool autoJoinEnabled;
@property (nonatomic) bool autoLoginEnabled;
@property (getter=isConnectedWithHardwareAddress, nonatomic) bool connectedWithHardwareAddress;
@property (getter=isCurrent, nonatomic) bool current;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool diagnosable;
@property (nonatomic, retain) WFDiagnosticsContext *diagnosticsContext;
@property (nonatomic, copy) NSString *hardwareMACAddress;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) WFIPMonitor *ipMonitor;
@property (nonatomic) bool isInSaveDataMode;
@property (getter=isKnownNetwork, nonatomic) bool knownNetwork;
@property (nonatomic, retain) WFKnownNetworkStore *knownNetworkStore;
@property (nonatomic, readonly) bool needsDismissal;
@property (nonatomic, retain) WFNetworkScanRecord *network;
@property (nonatomic, retain) WFNetworkProfile *profile;
@property (nonatomic) UIViewController<WFNetworkView> *provider;
@property (nonatomic, readonly, copy) NSString *randomMACAddress;
@property (getter=isRandomMACAddressConfigurable, nonatomic, readonly) bool randomMACAddressConfigurable;
@property (getter=isRandomMACAddressDisabled, nonatomic) bool randomMACAddressDisabled;
@property (getter=isRandomMACFeatureEnabled, nonatomic, readonly) bool randomMACFeatureEnabled;
@property (getter=isRandomMACSwitchOn, nonatomic) bool randomMACSwitchOn;
@property (nonatomic, retain) NSArray *recommendations;
@property (nonatomic) long long requestedFields;
@property (nonatomic, copy) NSString *staticPrivateMACFooterText;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsAirportManagement;
@property (nonatomic, copy) NSString *turnOFFPrivateMACFooterText;
@property (nonatomic, copy) NSString *turnONPrivateMACFooterText;

- (void).cxx_destruct;
- (id /* block */)actionHandler;
- (bool)autoJoinEnabled;
- (bool)autoLoginEnabled;
- (void)cancel;
- (void)dealloc;
- (id)description;
- (bool)diagnosable;
- (id)diagnosticsContext;
- (void)disableRandomMAC;
- (void)enableRandomMAC;
- (void)forget;
- (id)hardwareMACAddress;
- (id)initWithNetwork:(id)arg1 profile:(id)arg2 knownNetworkStore:(id)arg3 ipMonitor:(id)arg4 privateMACConfig:(id)arg5;
- (id)ipMonitor;
- (bool)isConnectedWithHardwareAddress;
- (bool)isCurrent;
- (bool)isInSaveDataMode;
- (bool)isKnownNetwork;
- (bool)isRandomMACAddressConfigurable;
- (bool)isRandomMACAddressDisabled;
- (bool)isRandomMACFeatureEnabled;
- (bool)isRandomMACSwitchOn;
- (void)join;
- (id)knownNetworkStore;
- (void)manage;
- (bool)needsDismissal;
- (id)network;
- (void)openRecommendationLink;
- (id)profile;
- (id)provider;
- (id)randomMACAddress;
- (id)recommendations;
- (void)renewLease;
- (long long)requestedFields;
- (void)setActionHandler:(id /* block */)arg1;
- (void)setAutoJoinEnabled:(bool)arg1;
- (void)setAutoLoginEnabled:(bool)arg1;
- (void)setConnectedWithHardwareAddress:(bool)arg1;
- (void)setCurrent:(bool)arg1;
- (void)setDiagnosable:(bool)arg1;
- (void)setDiagnosticsContext:(id)arg1;
- (void)setHardwareMACAddress:(id)arg1;
- (void)setIpMonitor:(id)arg1;
- (void)setIsInSaveDataMode:(bool)arg1;
- (void)setKnownNetwork:(bool)arg1;
- (void)setKnownNetworkStore:(id)arg1;
- (void)setNetwork:(id)arg1;
- (void)setProfile:(id)arg1;
- (void)setProvider:(id)arg1;
- (void)setRandomMACAddressDisabled:(bool)arg1;
- (void)setRandomMACSwitchOn:(bool)arg1;
- (void)setRecommendations:(id)arg1;
- (void)setRequestedFields:(long long)arg1;
- (void)setStaticPrivateMACFooterText:(id)arg1;
- (void)setSupportsAirportManagement:(bool)arg1;
- (void)setTurnOFFPrivateMACFooterText:(id)arg1;
- (void)setTurnONPrivateMACFooterText:(id)arg1;
- (id)staticPrivateMACFooterText;
- (bool)supportsAirportManagement;
- (id)turnOFFPrivateMACFooterText;
- (id)turnONPrivateMACFooterText;

@end
