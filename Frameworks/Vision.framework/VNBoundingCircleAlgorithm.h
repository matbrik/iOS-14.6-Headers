/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Vision.framework/Vision
 */

@interface VNBoundingCircleAlgorithm : NSObject

+ (void)_boundThreePoints:(const struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; }*)arg1 circleCenter:(struct CGPoint { double x1; double x2; }*)arg2 circleRadius:(double*)arg3;
+ (void)_boundingCircle:(const struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; }*)arg1 circleCenter:(struct CGPoint { double x1; double x2; }*)arg2 circleRadius:(double*)arg3;
+ (id)_boundingCircleForPoints:(const struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; }*)arg1 aspectRatioForCentroid:(float)arg2;
+ (void)_findBoundingCircle:(const struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; }*)arg1 count:(unsigned long long)arg2 circleCenter:(struct CGPoint { double x1; double x2; }*)arg3 circleRadius:(double*)arg4;
+ (struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; })_randomizePointsIndexes:(id)arg1;
+ (struct vector<CGPoint, std::__1::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; })_randomizePointsIndexes:(const /* Warning: Unrecognized filer type: '1' using 'void*' */ void**)arg1 pointCount:(long long)arg2;
+ (id)boundingCircleForPoints:(id)arg1 error:(id*)arg2;
+ (id)boundingCircleForSIMDPoints:(const /* Warning: Unrecognized filer type: '1' using 'void*' */ void**)arg1 pointCount:(long long)arg2 aspectRatioForCentroid:(float)arg3 error:(id*)arg4;
+ (double)epsilon;

@end
