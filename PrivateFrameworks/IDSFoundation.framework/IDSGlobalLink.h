/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
 */

@interface IDSGlobalLink : NSObject <IDSLink, IDSLinkDelegate, IDSStunCandidatePairDelegate> {
    unsigned int  _acceptDelayU32;
    NSString * _acceptedRelaySessionID;
    NSMutableArray * _activeProbingLinkIDs;
    NSObject<OS_dispatch_source> * _activityTimer;
    NSMutableArray * _allocateTimeReportBlocks;
    double  _allocbindEndTime;
    double  _allocbindStartTime;
    bool  _allowConcurrentQRSetup;
    bool  _allowOnlyOneQR;
    bool  _allowP2P;
    <IDSLinkDelegate> * _alternateDelegate;
    unsigned short  _basebandPacketChannelNumber;
    BOOL  _basebandPacketLinkID;
    double  _calleeAcceptTime;
    NSString * _cbuuid;
    unsigned short  _cellularNWPathFlags;
    NSObject<OS_nw_path_evaluator> * _cellularPathEvaluator;
    struct IDSSimpleUInt16List { 
        unsigned long long listSize; 
        unsigned long long itemCount; 
        unsigned short *items; 
    }  _channelNumberList;
    NSMutableDictionary * _channelToCandidatePairs;
    long long  _clientType;
    unsigned char  _clientUUID;
    id /* block */  _connectReadyHandler;
    NSMutableArray * _connectedLinkIDs;
    NSMutableDictionary * _connectingCandidatePairSessionInfo;
    NSData * _controlMessageKey;
    long long  _delayFirstConnectionData;
    bool  _delaySessionConnected;
    NSMutableArray * _delayedCellInterfaces;
    bool  _delayedConnData;
    <IDSLinkDelegate> * _delegate;
    NSString * _deviceUniqueID;
    bool  _disallowCellular;
    bool  _disallowWiFi;
    id /* block */  _disconnectCompletionHandler;
    NSObject<OS_dispatch_source> * _disconnectTimer;
    bool  _enableSKE;
    double  _firstClientPacketTime;
    double  _firstDataReceivedTime;
    bool  _hasPendingAllocation;
    bool  _hasPendingSelfAllocation;
    unsigned long long  _headerOverhead;
    NSString * _idsSessionID;
    NSMutableArray * _interfaceAddressArray;
    double  _inviteRecvTime;
    double  _inviteSentTime;
    bool  _isInitiator;
    bool  _isSecondOrLaterParticipant;
    bool  _isSessionAcceptedWithNoCandidatePair;
    bool  _islocalCellAttributeInexpensive;
    double  _linkConnectTime;
    BOOL  _linkIDCounter;
    NSMutableDictionary * _linkIDToCandidatePairs;
    NSMutableArray * _localCandidateList;
    int  _localConnDataCounter;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    struct IDSNAT64PrefixCache_ { } * _nat64PrefixCache;
    double  _natMappingTimeout;
    int  _nominateCount;
    NSMutableArray * _nonAcceptedQRSessions;
    int  _portRange;
    bool  _preferCellularForCallSetup;
    unsigned long long  _previousBytesReceived;
    unsigned long long  _previousBytesSent;
    unsigned long long  _previousPacketsReceived;
    unsigned long long  _previousPacketsSent;
    double  _previousReportTime;
    unsigned int  _probingTimeout;
    IDSGlobalLinkBlocks * _qraBlocks;
    struct IDSSimpleUInt16List { 
        unsigned long long listSize; 
        unsigned long long itemCount; 
        unsigned short *items; 
    }  _reallocChannelList;
    NSMutableDictionary * _reallocNewCandidatePairToOldCandidatePair;
    bool  _receivedAllocbindResponse;
    bool  _recvRemoteSKEData;
    bool  _reduceCellularUsage;
    bool  _reduceRelayLinkCreation;
    NSMutableArray * _remoteCandidateList;
    long long  _remoteCapabilityFlag;
    int  _remoteConnDataCounter;
    unsigned int  _remoteDeviceVersion;
    short  _remoteGlobalLinkVersion;
    bool  _reportClientPacketTime;
    bool  _reportDataReceivedTime;
    NSMutableDictionary * _retryCountPerLinkType;
    NSMutableArray * _selfAllocateRequestIDs;
    struct tagIDSQRSendInfoList { } * _sendInfoList;
    bool  _shouldProcessBasebandNotification;
    NSData * _skeData;
    double  _skeStartTime;
    bool  _skeToRemoteComplete;
    unsigned short  _startPort;
    NSMutableDictionary * _startTimeToStunReqID;
    unsigned long long  _state;
    bool  _supportChannelData;
    NSMutableArray * _targetedAllocations;
    IDSTCPLink * _tcpLink;
    IDSTCPLink * _tcpSSLLink;
    NSMutableDictionary * _tokenToCandidatePairs;
    NSMutableDictionary * _tokenToHBCounter;
    NSMutableDictionary * _tokenToReallocBlocks;
    NSMutableDictionary * _tokenToReorderedPackets;
    NSMutableDictionary * _tokenToRequestTimeStampAndRTT;
    NSMutableDictionary * _tokenToStunCheckPairs;
    NSMutableDictionary * _tokenToStunReqID;
    unsigned long long  _totalBytesReceived;
    unsigned long long  _totalBytesSent;
    unsigned long long  _totalPacketsReceived;
    unsigned long long  _totalPacketsSent;
    IDSUDPLink * _udpLink;
    IDSUDPLink * _udpLinkv6;
    NSMutableDictionary * _unallocbindRequestToReason;
    bool  _useSecureControlMessage;
    unsigned short  _wifiNWPathFlags;
    NSObject<OS_nw_path_evaluator> * _wifiPathEvaluator;
}

@property <IDSLinkDelegate> *alternateDelegate;
@property (retain) NSString *cbuuid;
@property (readonly, copy) NSString *debugDescription;
@property <IDSLinkDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) NSString *deviceUniqueID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long headerOverhead;
@property (getter=linkTypeString, readonly) NSString *linkTypeString;
@property (readonly) unsigned long long state;
@property (readonly) Class superclass;

+ (Class)getGLClassWithOptions:(id)arg1;

- (void).cxx_destruct;
- (bool)_IsExtIPDiscoveryNeeded:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1 candidatePairList:(id)arg2;
- (bool)_addCandidate:(id)arg1 isRemoteCandidate:(bool)arg2;
- (void)_addQRAAWDBlock:(id)arg1 allocateRequestTime:(double)arg2 inferredExternalRAT:(unsigned int)arg3 stunTransport:(long long)arg4 relayProviderType:(long long)arg5 idsSessionID:(id)arg6 reportingDataBlob:(id)arg7 isInitiator:(bool)arg8;
- (id)_addSocketAndInterfaceAddress:(unsigned long long)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(bool)arg2;
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(bool)arg2 excludeLocalAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (void)_callDisconnectCompletionHandler:(id)arg1;
- (void)_connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(bool)arg3 allocbindFailover:(bool)arg4 completionHandler:(id /* block */)arg5 withLocalInterfacePreference:(int)arg6;
- (void)_convergeSharedSessions:(id)arg1;
- (id)_createCommandData:(long long)arg1 options:(id)arg2 candidatePair:(id)arg3;
- (id)_createInterfaceAddressArray:(unsigned long long)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (id)_delayProcessingCellularInterfaces:(id)arg1;
- (void)_discardAllCandidatePairs;
- (void)_discardCandidatePairsWithOption:(bool)arg1;
- (void)_discardNonAcceptedCandidatePairs;
- (void)_discardSelfAllocateCandidatePairs;
- (id)_findCandidatePairWithRelaySessionID:(id)arg1;
- (id)_getAllocbindReportingDataBlob:(id)arg1;
- (id)_getCandidatePairsWithSessionID:(id)arg1 inState:(unsigned long long)arg2;
- (int)_getExpensiveLinkFlags:(bool)arg1 candidatePair:(id)arg2;
- (unsigned int)_getExternalIPAddressRAT:(id)arg1;
- (id)_getLink:(int)arg1 stunTransport:(long long)arg2;
- (void)_getNAT64PrefixForInterface:(int)arg1 interfaceName:(id)arg2 completionBlock:(id /* block */)arg3;
- (unsigned char)_getNewLinkType:(id)arg1 remoteInterface:(int*)arg2;
- (bool)_getPacketBufferSendInfo:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; unsigned int x12; struct sockaddr_storage { unsigned char x_13_1_1; unsigned char x_13_1_2; BOOL x_13_1_3[6]; long long x_13_1_4; BOOL x_13_1_5[112]; } x13; struct sockaddr_storage { unsigned char x_14_1_1; unsigned char x_14_1_2; BOOL x_14_1_3[6]; long long x_14_1_4; BOOL x_14_1_5[112]; } x14; unsigned short x15; unsigned char x16; int x17; struct { char *x_18_1_1; unsigned short x_18_1_2; int x_18_1_3; unsigned short x_18_1_4[12]; long long x_18_1_5; unsigned char x_18_1_6; unsigned short x_18_1_7; unsigned char x_18_1_8; bool x_18_1_9; bool x_18_1_10; unsigned short x_18_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_18_1_12; bool x_18_1_13; unsigned int x_18_1_14; } x18[8]; BOOL x19; BOOL x20; int x21; double x22; unsigned long long x23; unsigned char x24[0]; }*)arg1 channelNumber:(unsigned short*)arg2 transport:(long long*)arg3;
- (long long)_getQRAllocateType;
- (bool)_getSessionParticipants:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;
- (bool)_getSessionStreamInfo:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;
- (void)_handleActivityTimer;
- (void)_handleAllocbindFailoverTimer:(id)arg1 failoverTimerOnCandidatePair:(id)arg2 onInterface:(int)arg3;
- (void)_handleDisconnectTimer;
- (void)_handleNewRATChange;
- (void)_handleNoRemotePacket;
- (void)_handleRemapping:(id)arg1;
- (void)_handleSelfAllocationTimeout:(id)arg1;
- (void)_handle_cellular_path:(id)arg1 nwEndPoind:(id)arg2;
- (void)_handle_wifi_path:(id)arg1 nwEndPoind:(id)arg2;
- (bool)_hasActiveAllocbindFailoverTimerForSessionID:(id)arg1;
- (bool)_hasCandidatePairInState:(unsigned long long)arg1 anotherState:(unsigned long long)arg2 relayCandidatePairsOnly:(bool)arg3 excludeSelfAlloc:(bool)arg4;
- (bool)_hasCandidatePairInState:(unsigned long long)arg1 relayCandidatePairsOnly:(bool)arg2 excludeSelfAlloc:(bool)arg3;
- (bool)_hasConnectingRelayCandidatePair;
- (bool)_isAcceptedRelaySessionForAllocationRequestID:(id)arg1 acceptedRelaySessionID:(id)arg2;
- (bool)_isCellularInterfaceForCandidatePair:(id)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2;
- (bool)_isExtIPDiscoveryDone;
- (bool)_isInterfaceConstrainedWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isInterfaceDelegatedWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isInterfaceExpensiveWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isNWPathFlagsChanged:(id)arg1 existingPath:(unsigned short*)arg2;
- (void)_nominateCandidatePair:(id)arg1;
- (void)_notifyCandidatePairConnected:(id)arg1;
- (void)_notifyCandidatePairDisconnected:(id)arg1 withReason:(unsigned char)arg2;
- (void)_notifyDefaultUnderlyingLinkChanged:(id)arg1 error:(long long)arg2;
- (void)_notifyLinkDisconnectedWithError:(long long)arg1 reason:(unsigned char)arg2;
- (void)_notifyQRSessionConnected:(id)arg1;
- (void)_notifySessionInfoReceived:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 success:(bool)arg4;
- (void)_parseClientUUID:(id)arg1;
- (bool)_postProcessAllocbindResponse:(id)arg1 candidatePair:(id)arg2 candidatePairToken:(id)arg3;
- (bool)_processAllocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processBindingRequest:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processBindingResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processCommandConnected:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandConnectionData:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandDisconnected:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandHeartbeat:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3;
- (void)_processCommandNominate:(id)arg1 candidatePairToken:(id)arg2;
- (bool)_processDataIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processDataOnReallocChannel:(unsigned short)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (void)_processDelayedCellularInterfaces;
- (bool)_processDiagnosticIndication:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3;
- (bool)_processGoAwayIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processIncomingIndicationData:(char *)arg1 length:(int)arg2 candidatePairToken:(id)arg3 arrivalTime:(double)arg4;
- (void)_processNewLocalAddressList:(id)arg1;
- (void)_processNewRemoteCandidates:(id)arg1;
- (void)_processReallocChannelData:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; unsigned int x12; struct sockaddr_storage { unsigned char x_13_1_1; unsigned char x_13_1_2; BOOL x_13_1_3[6]; long long x_13_1_4; BOOL x_13_1_5[112]; } x13; struct sockaddr_storage { unsigned char x_14_1_1; unsigned char x_14_1_2; BOOL x_14_1_3[6]; long long x_14_1_4; BOOL x_14_1_5[112]; } x14; unsigned short x15; unsigned char x16; int x17; struct { char *x_18_1_1; unsigned short x_18_1_2; int x_18_1_3; unsigned short x_18_1_4[12]; long long x_18_1_5; unsigned char x_18_1_6; unsigned short x_18_1_7; unsigned char x_18_1_8; bool x_18_1_9; bool x_18_1_10; unsigned short x_18_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_18_1_12; bool x_18_1_13; unsigned int x_18_1_14; } x18[8]; BOOL x19; BOOL x20; int x21; double x22; unsigned long long x23; unsigned char x24[0]; }*)arg1 channelNumber:(unsigned short)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 arrivalTime:(double)arg5;
- (bool)_processReallocIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processRemoteCandidates:(id)arg1;
- (void)_processRemoteLinkUUID:(id)arg1 candidatePair:(id)arg2;
- (bool)_processRemovedLocalAddressList:(id)arg1;
- (void)_processRemovedRemoteCandidates:(id)arg1;
- (bool)_processStunPacket:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; unsigned int x12; struct sockaddr_storage { unsigned char x_13_1_1; unsigned char x_13_1_2; BOOL x_13_1_3[6]; long long x_13_1_4; BOOL x_13_1_5[112]; } x13; struct sockaddr_storage { unsigned char x_14_1_1; unsigned char x_14_1_2; BOOL x_14_1_3[6]; long long x_14_1_4; BOOL x_14_1_5[112]; } x14; unsigned short x15; unsigned char x16; int x17; struct { char *x_18_1_1; unsigned short x_18_1_2; int x_18_1_3; unsigned short x_18_1_4[12]; long long x_18_1_5; unsigned char x_18_1_6; unsigned short x_18_1_7; unsigned char x_18_1_8; bool x_18_1_9; bool x_18_1_10; unsigned short x_18_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_18_1_12; bool x_18_1_13; unsigned int x_18_1_14; } x18[8]; BOOL x19; BOOL x20; int x21; double x22; unsigned long long x23; unsigned char x24[0]; }*)arg1 fromDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 arrivalTime:(double)arg4 headerOverhead:(unsigned long long)arg5;
- (bool)_processUnallocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processXORMappedAddress:(id)arg1 arrivalTime:(double)arg2;
- (bool)_qrLinkLimitExceededWithNewLinkType:(unsigned char)arg1 cellularRelayLinkCount:(unsigned short)arg2 wifiRelayLinkCount:(unsigned short)arg3;
- (void)_removeChannelFromChannelToCandidatePair:(id)arg1;
- (void)_removePacketNotificationFilter;
- (void)_removeStunRequest:(id)arg1;
- (void)_reportAWDAllocateTime;
- (void)_reportSessionSetupTime;
- (void)_requestNewTwoWayQRAllocation:(id)arg1;
- (void)_requestNonUDPRelayAllocation:(long long)arg1 relaySessionID:(id)arg2;
- (bool)_requestSelfAllocationForInterfaceAddress:(id)arg1;
- (void)_resetRetryCountForCandidatePair:(id)arg1;
- (void)_saveStunRequest:(id)arg1 startTime:(double)arg2 token:(id)arg3;
- (void)_selectBetterDefaultCandidatePair:(id)arg1;
- (void)_sendAllocbindRequest:(id)arg1 stunMessage:(id)arg2 isRealloc:(bool)arg3 inResponseToNoSessionState:(bool)arg4;
- (void)_sendAllocbindRequestForExtIP:(id)arg1 startTime:(double)arg2;
- (void)_sendBindingRequest:(id)arg1 stunMessage:(id)arg2;
- (void)_sendCommandMessage:(long long)arg1 stunMessage:(id)arg2 options:(id)arg3 candidatePairToken:(id)arg4;
- (void)_sendConnectionDataWithRemovedAddressList:(id)arg1;
- (void)_sendNowConnectionDataWithRemovedAddressList:(id)arg1;
- (void)_sendSKEDataToSucceededCandidatePairs;
- (void)_sendSKEDataWithSelectedCandidatePair;
- (void)_sendSessionDisconnectedCommand;
- (long long)_sendStunMessage:(id)arg1 sourceIfIndex:(int)arg2 source:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3 destination:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 stunTransport:(long long)arg5 token:(id)arg6;
- (void)_sendUnallocbindRequest:(id)arg1 stunMessage:(id)arg2 reason:(unsigned char)arg3;
- (void)_setChannelToCandidatePair:(id)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3 channelNumber:(unsigned short)arg4;
- (void)_setDefaultCandidatePairForNonFT;
- (void)_setFirstDefaultCandidatePair:(id)arg1;
- (void)_setRemoteGlobalLinkVersionWithCommand:(long long)arg1 receivedRemoteVersion:(bool)arg2 versionValue:(unsigned short)arg3 receivedSKE:(bool)arg4;
- (bool)_setupNewQRLinkIfNecessary:(id)arg1;
- (void)_setupRelayConnectionForNetworkAddressChanges;
- (bool)_shouldSkipCommand:(long long)arg1 withCandidatePair:(id)arg2 connectionDataCounter:(int)arg3;
- (bool)_skipCommandMessage:(long long)arg1 candidatePair:(id)arg2 timeNow:(double)arg3;
- (void)_startActivityTimer;
- (void)_startAllocbindFailoverTimerOnCandidatePair:(id)arg1;
- (void)_startDisconnectTimer;
- (void)_startExtIPDiscovery;
- (void)_startHB:(id)arg1;
- (void)_startStunCheck:(id)arg1;
- (double)_startTimeForStunRequest:(id)arg1;
- (void)_stopActivityTimer;
- (void)_stopAllocbindFailoverTimer:(id)arg1;
- (void)_stopDisconnectTimer;
- (bool)_synthesizeNAT64ForAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1 withPrefix:(struct { int x1; unsigned char x2[12]; }*)arg2 toAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (bool)_triggerSymptomsWithCandidatePairToken:(id)arg1 subType:(id)arg2 subTypeContext:(id)arg3 duration:(unsigned short)arg4;
- (void)_updateDefaultCandidatePair:(id)arg1;
- (void)_updateInterfaceAddressesWithAddList:(id)arg1 removeList:(id)arg2;
- (void)_updateNominatedCandidatePair:(id)arg1;
- (void)_updateSendStatsWithResult:(unsigned long long)arg1 bytesSent:(long long)arg2 packetsSent:(int)arg3 linkID:(BOOL)arg4 token:(id)arg5 useRelay:(bool)arg6 isClientData:(bool)arg7 sendTime:(double)arg8 stunTransport:(long long)arg9;
- (id)alternateDelegate;
- (void)candidatePair:(id)arg1 didAddQREvent:(id)arg2;
- (void)candidatePair:(id)arg1 didReceiveSessionInfo:(id)arg2 success:(bool)arg3;
- (void)candidatePair:(id)arg1 didReceiveStunErrorResponse:(long long)arg2 errorCode:(unsigned short)arg3;
- (id)cbuuid;
- (void)connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(bool)arg3 completionHandler:(id /* block */)arg4 withLocalInterfacePreference:(int)arg5;
- (id)copyLinkStatsDict;
- (void)currentCellularSignalStrength:(int*)arg1 signalStrength:(int*)arg2 signalGrade:(int*)arg3;
- (void)dealloc;
- (unsigned long long)defaultLinkType;
- (id)delegate;
- (id)deviceUniqueID;
- (void)disconnectCandidatePair:(id)arg1;
- (void)disconnectWithCompletionHandler:(id /* block */)arg1;
- (void)dropIPPackets:(BOOL)arg1 payloadArray:(id)arg2;
- (void)flushLinkProbingStatus:(id)arg1;
- (id)generateLinkReport:(double)arg1 isCurrentLink:(bool)arg2;
- (void)getSessionInfo:(id)arg1 relaySessionID:(id)arg2 requestType:(long long)arg3 options:(id)arg4;
- (void)handleCellularRATChange;
- (void)handleNetworkAddressChanges:(bool)arg1 hasIPv6AddressChange:(bool)arg2;
- (bool)hasReachableInterface:(unsigned long long)arg1;
- (unsigned long long)headerOverhead;
- (id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;
- (void)invalidate;
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (bool)link:(id)arg1 didReceivePacket:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; unsigned int x12; struct sockaddr_storage { unsigned char x_13_1_1; unsigned char x_13_1_2; BOOL x_13_1_3[6]; long long x_13_1_4; BOOL x_13_1_5[112]; } x13; struct sockaddr_storage { unsigned char x_14_1_1; unsigned char x_14_1_2; BOOL x_14_1_3[6]; long long x_14_1_4; BOOL x_14_1_5[112]; } x14; unsigned short x15; unsigned char x16; int x17; struct { char *x_18_1_1; unsigned short x_18_1_2; int x_18_1_3; unsigned short x_18_1_4[12]; long long x_18_1_5; unsigned char x_18_1_6; unsigned short x_18_1_7; unsigned char x_18_1_8; bool x_18_1_9; bool x_18_1_10; unsigned short x_18_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_18_1_12; bool x_18_1_13; unsigned int x_18_1_14; } x18[8]; BOOL x19; BOOL x20; int x21; double x22; unsigned long long x23; unsigned char x24[0]; }*)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (id)linkTypeString;
- (void)queryLinkProbingStatus:(id)arg1;
- (bool)remoteHostAwake;
- (void)sendAllocbindRequest:(id)arg1 isRealloc:(bool)arg2 inResponseToNoSessionState:(bool)arg3;
- (unsigned long long)sendPacketBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; unsigned int x12; struct sockaddr_storage { unsigned char x_13_1_1; unsigned char x_13_1_2; BOOL x_13_1_3[6]; long long x_13_1_4; BOOL x_13_1_5[112]; } x13; struct sockaddr_storage { unsigned char x_14_1_1; unsigned char x_14_1_2; BOOL x_14_1_3[6]; long long x_14_1_4; BOOL x_14_1_5[112]; } x14; unsigned short x15; unsigned char x16; int x17; struct { char *x_18_1_1; unsigned short x_18_1_2; int x_18_1_3; unsigned short x_18_1_4[12]; long long x_18_1_5; unsigned char x_18_1_6; unsigned short x_18_1_7; unsigned char x_18_1_8; bool x_18_1_9; bool x_18_1_10; unsigned short x_18_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_18_1_12; bool x_18_1_13; unsigned int x_18_1_14; } x18[8]; BOOL x19; BOOL x20; int x21; double x22; unsigned long long x23; unsigned char x24[0]; }*)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (unsigned long long)sendPacketBufferArray:(struct { /* ? */ }**)arg1 arraySize:(int)arg2 toDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (void)sendProbingRequestWithoptions:(id)arg1 candidatePairToken:(id)arg2;
- (void)sendSKEData:(id)arg1;
- (void)setAcceptedRelaySession:(id)arg1 options:(id)arg2;
- (void)setAlternateDelegate:(id)arg1;
- (void)setCbuuid:(id)arg1;
- (void)setDefaultUnderlyingLink:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceUniqueID:(id)arg1;
- (void)setHasPendingAllocation:(bool)arg1;
- (void)setPacketNotificationFilter:(BOOL)arg1 uniqueTag:(unsigned int)arg2 isEnabled:(bool)arg3;
- (void)setRemoteDeviceVersion:(unsigned int)arg1;
- (void)setWiFiAssistState:(bool)arg1;
- (void)startLinkProbing:(id)arg1;
- (void)startWithOptions:(id)arg1;
- (unsigned long long)state;
- (void)stopKeepAlive:(id)arg1;
- (void)stopLinkProbing:(id)arg1;
- (void)updateProtocolQualityOfService:(BOOL)arg1 isGood:(bool)arg2;
- (void)updateSessionParticipants:(id)arg1 relaySessionID:(id)arg2 participants:(id)arg3;

@end
