/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeRecommendationEngine.framework/HomeRecommendationEngine
 */

@interface HREActionableHomeObject : NSObject <HFHomeContainedObject, HFRoomContextProviding> {
    <HFHomeKitObject> * _homeKitObject;
}

@property (nonatomic, readonly) NSSet *actionTypes;
@property (nonatomic, readonly) NSSet *characteristics;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMRoom *hf_parentRoom;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic, readonly) <HFHomeKitObject> *homeKitObject;
@property (nonatomic, readonly) bool isActionable;
@property (nonatomic, readonly) NSSet *matchingTypes;
@property (nonatomic, readonly) NSString *primaryType;
@property (nonatomic, readonly) NSSet *profiles;
@property (nonatomic, readonly) HMService *service;
@property (nonatomic, readonly) NSSet *services;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;

+ (id)_types:(id)arg1 notMatchedByActionableObjects:(id)arg2;
+ (bool)actionableObjects:(id)arg1 matchAllTypeGroups:(id)arg2;
+ (bool)actionableObjects:(id)arg1 matchAllTypes:(id)arg2;
+ (id)actionableObjectsFromHomeKitObjects:(id)arg1;
+ (id)filterActionableObjects:(id)arg1 excludingObjectsInActions:(id)arg2;
+ (id)filterActionableObjects:(id)arg1 toMatchTypes:(id)arg2;
+ (id)filterActionableObjects:(id)arg1 toRooms:(id)arg2;

- (void).cxx_destruct;
- (bool)_actionMap:(id)arg1 includesType:(id)arg2;
- (id)_characteristicsInServices:(id)arg1;
- (bool)_matchesAnyInTypes:(id)arg1;
- (id)_profileTypeForProfile:(id)arg1;
- (id)actionBuildersDerivedFromActions:(id)arg1;
- (id)actionTypes;
- (id)characteristicMapFromActionMap:(id)arg1;
- (id)characteristics;
- (id)debugDescription;
- (id)description;
- (unsigned long long)hash;
- (id)hf_parentRoom;
- (id)home;
- (id)homeKitObject;
- (id)initWithHomeKitObject:(id)arg1;
- (bool)involvedInAction:(id)arg1;
- (bool)involvedInActionMap:(id)arg1;
- (bool)isActionable;
- (bool)isEqual:(id)arg1;
- (id)matchingTypes;
- (id)primaryType;
- (id)profiles;
- (id)service;
- (id)serviceGroup;
- (id)services;
- (id)singularProfile;
- (id)uniqueIdentifier;

@end
