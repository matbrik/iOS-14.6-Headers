/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@interface GKMultiplayerViewController : GKCollectionViewController <GKDashboardMultiplayerPickerDelegate, GKMultiplayerCustomInviteMessageViewControllerDelegate, GKMultiplayerDataSourceDelegate> {
    bool  _addButtonEnabled;
    _TtC12GameCenterUI29GKMultiplayerButtonHeaderView * _buttonHeaderView;
    NSString * _defaultInvitationMessage;
    bool  _didAcceptGameInvite;
    bool  _didStartForcedAutomatch;
    _TtC12GameCenterUI23GKMultiplayerFooterView * _footerView;
    GKGame * _game;
    long long  _invitationType;
    GKMatchRequest * _matchRequest;
    long long  _matchmakingMode;
    unsigned long long  _messagesInviteStatus;
    <GKDashboardNearbyBrowserDelegate> * _nearbyDelegate;
    GKMatchRequest * _originalMatchRequest;
    GKDashboardMultiplayerPickerViewController * _playerPickerViewController;
    NSURL * _shareURL;
    bool  _showCancelButton;
}

@property (nonatomic) bool addButtonEnabled;
@property (nonatomic, retain) _TtC12GameCenterUI29GKMultiplayerButtonHeaderView *buttonHeaderView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *defaultInvitationMessage;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didAcceptGameInvite;
@property (nonatomic) bool didStartForcedAutomatch;
@property (nonatomic, retain) _TtC12GameCenterUI23GKMultiplayerFooterView *footerView;
@property (nonatomic, retain) GKGame *game;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long invitationType;
@property (nonatomic, readonly, copy) GKMatchRequest *matchRequest;
@property (nonatomic) long long matchmakingMode;
@property (nonatomic) unsigned long long messagesInviteStatus;
@property (nonatomic, readonly) GKMultiplayerDataSource *multiplayerDataSource;
@property (nonatomic) <GKDashboardNearbyBrowserDelegate> *nearbyDelegate;
@property (nonatomic, readonly, copy) GKMatchRequest *originalMatchRequest;
@property (nonatomic, retain) GKDashboardMultiplayerPickerViewController *playerPickerViewController;
@property (nonatomic, retain) NSURL *shareURL;
@property (nonatomic) bool showCancelButton;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addAutomatchPlayer;
- (bool)addButtonEnabled;
- (void)addMessageButtonPressed;
- (bool)allowPlayerCountSelection;
- (long long)automatchParticipantStatus;
- (id)buttonHeaderView;
- (bool)canStartForcedAutomatch;
- (void)cancel;
- (void)cancelButtonPressed;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionViewContentInset;
- (void)configureDataSource;
- (void)customInviteViewController:(id)arg1 didFinishWithMessage:(id)arg2;
- (void)dataSource:(id)arg1 didRefreshSections:(id)arg2;
- (void)dealloc;
- (id)defaultInvitationMessage;
- (void)determineInvitationType;
- (bool)didAcceptGameInvite;
- (void)didClickCancelForServiceUnavailableAlert;
- (void)didEnterLoadedState;
- (void)didInviteContactPlayers;
- (bool)didStartForcedAutomatch;
- (void)didTapInviteOnCell:(id)arg1;
- (void)didTapRemoveParticipant:(id)arg1;
- (void)didUpdateParticipants;
- (void)dismissPickerViewController;
- (id)existingMessageForInviteViewController:(id)arg1;
- (id)footerView;
- (id)game;
- (void)handleNewParticipantCount:(long long)arg1;
- (void)handleServiceUnavailable:(id)arg1;
- (id)init;
- (id)initWithMatchRequest:(id)arg1;
- (long long)invitationType;
- (void)inviteContactPlayers:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)invitePlayers:(id)arg1;
- (bool)isCanceling;
- (bool)isInSetupMode;
- (bool)isLoading;
- (void)layoutSubviews;
- (void)loadShareURLWithCompletion:(id /* block */)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (id)makeButtonHeaderView;
- (id)matchRequest;
- (long long)matchmakingMode;
- (long long)maxAvailablePlayers;
- (unsigned long long)messagesInviteStatus;
- (long long)multiplayerCellLayoutMode;
- (id)multiplayerDataSource;
- (void)multiplayerPicker:(id)arg1 didPickPlayers:(id)arg2;
- (void)multiplayerPickerDidCancel:(id)arg1;
- (id)nearbyDelegate;
- (id)originalMatchRequest;
- (void)performActionsForButtonCancelCurrentMatching;
- (void)performActionsForButtonStartGame;
- (void)playNow;
- (id)playerPickerViewController;
- (void)playersToInvite:(id)arg1;
- (void)preparePlayerPicker;
- (void)presentPlayerPicker;
- (void)refreshHeaderAndFooterMaterials;
- (void)removeAutomatchPlayer;
- (void)removePlayer:(id)arg1;
- (void)removedPlayer:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)sendInvitesToContactPlayers:(id)arg1 legacyPlayers:(id)arg2;
- (void)setAddButtonEnabled:(bool)arg1;
- (void)setButtonHeaderView:(id)arg1;
- (void)setDefaultInvitationMessage:(id)arg1;
- (void)setDidAcceptGameInvite:(bool)arg1;
- (void)setDidStartForcedAutomatch:(bool)arg1;
- (void)setFooterView:(id)arg1;
- (void)setGame:(id)arg1;
- (void)setInvitationType:(long long)arg1;
- (void)setInvitesFailedWithError:(id)arg1;
- (void)setMatchmakingMode:(long long)arg1;
- (void)setMessagesInviteStatus:(unsigned long long)arg1;
- (void)setNearbyDelegate:(id)arg1;
- (void)setPlayerPickerViewController:(id)arg1;
- (void)setShareInvitees;
- (void)setShareURL:(id)arg1;
- (void)setShowCancelButton:(bool)arg1;
- (void)setViewNeedsLayout;
- (void)setupCancelButton;
- (id)shareURL;
- (bool)showCancelButton;
- (void)startGameButtonPressed;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateAddMessageButtonVisibility;
- (void)updateCollectionViewContentInset;
- (void)updateDataSourceInvitationEnabled;
- (void)updateHeaderFooterLayoutMargins;
- (void)updateStartGameButtonTitle;
- (id)viewControllerLayout;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(bool)arg1;
- (void)willPresentPlayerPicker:(id)arg1;

@end
