/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Vision.framework/Vision
 */

@interface VNImageAnalyzerMultiDetector : VNDetector {
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _VN5kJNH3eYuyaLxNpZr5Z7ziCustomClassifiers;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _VNVYvzEtX1JlUdu8xx5qhDICustomClassifiers;
    struct vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>>> { 
        struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *__begin_; 
        struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *__end_; 
        struct __compressed_pair<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> *, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>>> { 
            struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *__value_; 
        } __end_cap_; 
    }  _cachedAllSceneClassificationsFromLastAnalysis;
    NSMutableDictionary * _cachedSaliencyHeatmapBoundingBoxGenerators;
    struct shared_ptr<vision::mod::ImageClassifier_HierarchicalModel> { 
        struct ImageClassifier_HierarchicalModel {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _defaultSceneClassificationHierarchicalModel;
    struct unique_ptr<vision::mod::ImageAnalyzer, std::__1::default_delete<vision::mod::ImageAnalyzer>> { 
        struct __compressed_pair<vision::mod::ImageAnalyzer *, std::__1::default_delete<vision::mod::ImageAnalyzer>> { 
            struct ImageAnalyzer {} *__value_; 
        } __ptr_; 
    }  _imageAnalyzer;
    struct unordered_map<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>>> { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>>>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _imageAnalyzerJunkCustomClassifiers;
    struct unique_ptr<vision::mod::ImageAnalyzer_PCA, std::__1::default_delete<vision::mod::ImageAnalyzer_PCA>> { 
        struct __compressed_pair<vision::mod::ImageAnalyzer_PCA *, std::__1::default_delete<vision::mod::ImageAnalyzer_PCA>> { 
            struct ImageAnalyzer_PCA {} *__value_; 
        } __ptr_; 
    }  _imageAnalyzerPCA256;
    unsigned long long  _model;
    _VNImageAnalyzerMultiDetectorSceneOperationPointsCache * _operationPointsCache;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _potentialLandmarkCustomClassifiers;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>>> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *>>> { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::hash<unsigned long>, true>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>, std::__1::equal_to<unsigned long>, true>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _significantEventCustomClassifiers;
}

@property (readonly) bool hasObjDetNet;

+ (id)blacklistForModel:(unsigned long long)arg1;
+ (id)configurationOptionKeysForDetectorKey;
+ (struct shared_ptr<vision::mod::ImageClassifier_HierarchicalModel> { struct ImageClassifier_HierarchicalModel {} *x1; struct __shared_weak_count {} *x2; })createHierarchicalModelForMultiDetectorModel:(unsigned long long)arg1 requestRevision:(unsigned long long)arg2 error:(id*)arg3;
+ (Class)detectorClassForConfigurationOptions:(id)arg1 error:(id*)arg2;
+ (unsigned long long)modelForRequestClass:(Class)arg1 revision:(unsigned long long)arg2 detectionLevel:(unsigned long long)arg3;
+ (void)recordDefaultConfigurationOptionsInDictionary:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VN5kJNH3eYuyaLxNpZr5Z7ziCustomClassifiersForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VN5kJNH3eYuyaLxNpZr5Z7ziLoadCustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_VN5kJNH3eYuyaLxNpZr5Z7ziObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VNVYvzEtX1JlUdu8xx5qhDICustomClassifiersForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VNVYvzEtX1JlUdu8xx5qhDILoadCustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_VNVYvzEtX1JlUdu8xx5qhDIObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VNdGg5skzXHSAENO6T3enHECustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_VNdGg5skzXHSAENO6T3enHELoadCustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_VNdGg5skzXHSAENO6T3enHEObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (id)_aestheticsObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (unsigned int)_analysisTypeForScene:(bool)arg1 junk:(bool)arg2 VNVYvzEtX1JlUdu8xx5qhDI:(bool)arg3 landmark:(bool)arg4 sceneprint:(bool)arg5 includingLabelsAndConfidences:(bool)arg6 compressedSceneprint:(bool)arg7 aesthetics:(bool)arg8 saliencyAHeatMap:(bool)arg9 saliencyOHeatMap:(bool)arg10 recognizedObjects:(bool)arg11 VN5kJNH3eYuyaLxNpZr5Z7zi:(bool)arg12 VNdGg5skzXHSAENO6T3enHE:(bool)arg13;
- (struct __CVBuffer { }*)_createScaledImagePixelBufferFromCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 ofImageBuffer:(id)arg2 forNetworkInputImageSize:(struct _Geometry2D_size2D_ { float x1; float x2; })arg3 imageCropAndScaleOption:(unsigned long long)arg4 options:(id)arg5 error:(id*)arg6;
- (struct __CVBuffer { }*)_createScaledImagePixelBufferFromImageBuffer:(id)arg1 forNetworkInputImageSize:(struct _Geometry2D_size2D_ { float x1; float x2; })arg2 imageCropAndScaleOption:(unsigned long long)arg3 options:(id)arg4 error:(id*)arg5;
- (void)_getImageCropAndScaleOption:(unsigned long long*)arg1 networkRequiredInputImageSize:(struct _Geometry2D_size2D_ { float x1; float x2; }*)arg2 forOptions:(id)arg3;
- (bool)_getLeafSceneObservations:(id*)arg1 hierarchySceneObservations:(id*)arg2 of32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)arg3 withOptions:(id)arg4 error:(id*)arg5;
- (struct shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { struct vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>> {} *x1; struct __shared_weak_count {} *x2; })_junkCustomClassifiersForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_junkObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (struct vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>>> { struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *x1; struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *x2; struct __compressed_pair<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> *, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool>>> { struct tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, bool> {} *x_3_1_1; } x3; }*)_lastAnalysisSceneClassifications;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_loadCustomClassifierWithModelName:(id)arg1 labelsFileName:(id)arg2 classifierName:(id)arg3 inputBlobName:(id)arg4 outputBlobName:(id)arg5 espressoEngine:(int)arg6 espressoPlanFlags:(int)arg7 espressoStorageType:(int)arg8 espressoDeviceID:(int)arg9 error:(id*)arg10;
- (struct shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>>> { struct vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>>> {} *x1; struct __shared_weak_count {} *x2; })_loadJunkCustomClassifiersForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_loadPotentialLandmarksCustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_observationsForObjectsRecognizedInLastAnalysisWithOptions:(id)arg1 warningRecorder:(id)arg2 error:(id*)arg3;
- (id)_observationsForScene:(bool)arg1 junk:(bool)arg2 VNVYvzEtX1JlUdu8xx5qhDI:(bool)arg3 landmark:(bool)arg4 sceneprint:(bool)arg5 includingLabelsAndConfidences:(bool)arg6 compressedSceneprint:(bool)arg7 aesthetics:(bool)arg8 saliencyAHeatMap:(bool)arg9 saliencyOHeatMap:(bool)arg10 recognizedObjects:(bool)arg11 VN5kJNH3eYuyaLxNpZr5Z7zi:(bool)arg12 VNdGg5skzXHSAENO6T3enHE:(bool)arg13 of32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)arg14 withOptions:(id)arg15 originalImageSize:(struct CGSize { double x1; double x2; })arg16 regionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg17 warningRecorder:(id)arg18 error:(id*)arg19;
- (id)_observationsForTopN:(const unsigned long long*)arg1 lastAnalysisSceneLabelsWithMinimumConfidence:(float)arg2 excludeObfuscatedLabels:(bool)arg3 labelBlackList:(id)arg4 sceneRequestRevisionNumber:(unsigned long long)arg5 operationPointsProvider:(id)arg6;
- (id)_observationsForTopN:(const unsigned long long*)arg1 sceneClassificationsInMap:(const struct unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>>> { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>>> { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> *>>> { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> *>>> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> *>> { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, float>, void *> *> *>> { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; } x1; }*)arg2 withMinimumConfidence:(float)arg3 labelBlackList:(id)arg4 sceneRequestRevisionNumber:(unsigned long long)arg5 operationPointsProvider:(id)arg6;
- (bool)_performAnalysis:(unsigned int)arg1 on32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)arg2 error:(id*)arg3;
- (bool)_populateLeafSceneObservations:(id)arg1 hierarchySceneObservations:(id)arg2 forLastAnalysisWithOptions:(id)arg3 error:(id*)arg4;
- (id)_potentialLandmarkObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier {} *x1; struct __shared_weak_count {} *x2; })_potentialLandmarksCustomClassifierForRequestRevision:(unsigned long long)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_saliencyAObservationsForLastAnalysisWithRegionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 originalImageSize:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3 warningRecorder:(id)arg4 error:(id*)arg5;
- (id)_saliencyGeneratorOfType:(id)arg1 forSession:(id)arg2 error:(id*)arg3;
- (id)_saliencyOObservationsForLastAnalysisWithRegionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 originalImageSize:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3 warningRecorder:(id)arg4 error:(id*)arg5;
- (id)_saliencyObservationsForTensor:(const struct ImageAnalyzer_Tensor2D { struct { void *x_1_1_1; void *x_1_1_2; unsigned long long x_1_1_3[4]; unsigned long long x_1_1_4[4]; unsigned long long x_1_1_5; unsigned long long x_1_1_6; unsigned long long x_1_1_7; unsigned long long x_1_1_8; unsigned long long x_1_1_9; unsigned long long x_1_1_10; unsigned long long x_1_1_11; unsigned long long x_1_1_12; unsigned long long x_1_1_13; unsigned long long x_1_1_14; int x_1_1_15; } x1; void *x2; unsigned long long x3; struct vImage_Buffer { void *x_4_1_1; unsigned long long x_4_1_2; unsigned long long x_4_1_3; unsigned long long x_4_1_4; } x4; }*)arg1 regionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 originalImageSize:(struct CGSize { double x1; double x2; })arg3 options:(id)arg4 saliencyRequestRevisionKey:(id)arg5 saliencyGeneratorType:(id)arg6 startCode:(unsigned int)arg7 finishCode:(unsigned int)arg8 warningRecorder:(id)arg9 error:(id*)arg10;
- (id)_sceneObservationsForLastAnalysisWithOptions:(id)arg1 error:(id*)arg2;
- (struct ImageAnalyzer_PCA { struct vector<float, std::__1::allocator<float>> { float *x_1_1_1; float *x_1_1_2; struct __compressed_pair<float *, std::__1::allocator<float>> { float *x_3_2_1; } x_1_1_3; } x1; unsigned long long x2; unsigned long long x3; }*)_sceneprintCompressorForCompression:(unsigned long long)arg1 error:(id*)arg2;
- (id)_sceneprintObservationsForLastAnalysisOfSceneprint:(bool)arg1 includingLabelsAndConfidencesInSceneprint:(bool)arg2 compressedSceneprint:(bool)arg3 options:(id)arg4 error:(id*)arg5;
- (void)_tileRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 horizontally:(bool)arg2 vertically:(bool)arg3 windowAspectRatio:(double)arg4 overlapPercentage:(double)arg5 usingBlock:(id /* block */)arg6;
- (id)allJunkClassificationObservationsForOptions:(id)arg1 error:(id*)arg2;
- (id)allKnownSceneClassificationsWithOptions:(id)arg1 error:(id*)arg2;
- (id)allRecognizedObjectsIdentifiersWithOptions:(id)arg1 error:(id*)arg2;
- (id)allSignificantEventClassificationsWithOptions:(id)arg1 error:(id*)arg2;
- (id)allVN5kJNH3eYuyaLxNpZr5Z7ziClassificationsWithOptions:(id)arg1 error:(id*)arg2;
- (bool)canBehaveAsDetectorOfClass:(Class)arg1 withConfiguration:(id)arg2;
- (bool)completeInitializationForSession:(id)arg1 error:(id*)arg2;
- (bool)hasObjDetNet;
- (id)processWithOptions:(id)arg1 regionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 warningRecorder:(id)arg3 error:(id*)arg4;
- (id)sceneLabelOperationPointsForRequestRevision:(unsigned long long)arg1 error:(id*)arg2;
- (bool)shouldBeReplacedByDetectorOfClass:(Class)arg1 withConfiguration:(id)arg2;
- (id)supportedImageSizeSetForProcessingOptions:(id)arg1;
- (bool)supportsProcessingDevice:(id)arg1;
- (bool)warmUpSession:(id)arg1 withOptions:(id)arg2 error:(id*)arg3;

@end
