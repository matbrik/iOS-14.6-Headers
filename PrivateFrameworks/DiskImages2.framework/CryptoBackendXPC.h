/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DiskImages2.framework/DiskImages2
 */

@interface CryptoBackendXPC : BackendXPC {
    BackendXPC * _baseBackendXPC;
    struct shared_ptr<crypto::format> { 
        struct format {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _cryptoFormat;
}

@property (nonatomic, retain) BackendXPC *baseBackendXPC;
@property (nonatomic) struct shared_ptr<crypto::format> { struct format {} *x1; struct __shared_weak_count {} *x2; } cryptoFormat;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)baseBackendXPC;
- (bool)checkIfEncryptedWithErrno:(int*)arg1;
- (void)createBackendWithKeys:(struct keys { struct vector<std::byte, std::__1::allocator<std::byte>> { unsigned char *x_1_1_1; unsigned char *x_1_1_2; struct __compressed_pair<std::byte *, std::__1::allocator<std::byte>> { unsigned char *x_3_2_1; } x_1_1_3; } x1; struct vector<std::byte, std::__1::allocator<std::byte>> { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<std::byte *, std::__1::allocator<std::byte>> { unsigned char *x_3_2_1; } x_2_1_3; } x2; struct unique_ptr<crypto::format::header_v2, std::__1::default_delete<crypto::format::header_v2>> { struct __compressed_pair<crypto::format::header_v2 *, std::__1::default_delete<crypto::format::header_v2>> { struct header_v2 {} *x_1_2_1; } x_3_1_1; } x3; struct shared_ptr<Backend> { struct Backend {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; }*)arg1;
- (struct shared_ptr<crypto::format> { struct format {} *x1; struct __shared_weak_count {} *x2; })cryptoFormat;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKeys:(struct keys { struct vector<std::byte, std::__1::allocator<std::byte>> { unsigned char *x_1_1_1; unsigned char *x_1_1_2; struct __compressed_pair<std::byte *, std::__1::allocator<std::byte>> { unsigned char *x_3_2_1; } x_1_1_3; } x1; struct vector<std::byte, std::__1::allocator<std::byte>> { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<std::byte *, std::__1::allocator<std::byte>> { unsigned char *x_3_2_1; } x_2_1_3; } x2; struct unique_ptr<crypto::format::header_v2, std::__1::default_delete<crypto::format::header_v2>> { struct __compressed_pair<crypto::format::header_v2 *, std::__1::default_delete<crypto::format::header_v2>> { struct header_v2 {} *x_1_2_1; } x_3_1_1; } x3; struct shared_ptr<Backend> { struct Backend {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; }*)arg1 baseBackendXPC:(id)arg2;
- (void)setBaseBackendXPC:(id)arg1;
- (void)setCryptoFormat:(struct shared_ptr<crypto::format> { struct format {} *x1; struct __shared_weak_count {} *x2; })arg1;

@end
