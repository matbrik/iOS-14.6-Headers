/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreML.framework/CoreML
 */

@interface MLNeuralNetworkUpdateUtils : NSObject

+ (id)createClassLabelToIndexMapWith:(id)arg1;
+ (id)loadParameterDescriptionsAndContainerFromUpdateParameters:(const struct NetworkUpdateParameters { int (**x1)(); struct InternalMetadataWithArenaLite { void *x_2_1_1; } x2; struct RepeatedPtrField<CoreML::Specification::LossLayer> { struct Arena {} *x_3_1_1; int x_3_1_2; int x_3_1_3; struct Rep {} *x_3_1_4; } x3; struct Optimizer {} *x4; struct Int64Parameter {} *x5; struct BoolParameter {} *x6; struct Int64Parameter {} *x7; int x8; }*)arg1 modelDescription:(id)arg2;
+ (bool)loadUpdateParameters:(struct NetworkUpdateParameters { int (**x1)(); struct InternalMetadataWithArenaLite { void *x_2_1_1; } x2; struct RepeatedPtrField<CoreML::Specification::LossLayer> { struct Arena {} *x_3_1_1; int x_3_1_2; int x_3_1_3; struct Rep {} *x_3_1_4; } x3; struct Optimizer {} *x4; struct Int64Parameter {} *x5; struct BoolParameter {} *x6; struct Int64Parameter {} *x7; int x8; }*)arg1 fromCompiledArchive:(struct _MLModelInputArchiver { struct IArchive { struct shared_ptr<Archiver::_IArchiveImpl> { struct _IArchiveImpl {} *x_1_2_1; struct __shared_weak_count {} *x_1_2_2; } x_1_1_1; struct map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>>> { struct __tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>>> { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>, void *>>> { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, IArchive>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>> { unsigned long long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_1_1_2; } x1; }*)arg2 error:(id*)arg3;

@end
