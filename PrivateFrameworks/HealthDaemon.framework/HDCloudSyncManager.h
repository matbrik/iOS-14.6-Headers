/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDCloudSyncManager : NSObject <HDAnalyticsSubmissionCoordinatorDelegate, HDContentProtectionObserver, HDDatabaseProtectedDataObserver, HDHealthDaemonReadyObserver> {
    long long  _inProgressSyncCount;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSDate * _lock_lastDataUploadRequestCompletionDate;
    NSDate * _lock_lastDataUploadRequestStartDate;
    NSDate * _lock_lastSuccessfulPullDate;
    NSDate * _lock_lastSuccessfulPushDate;
    long long  _lock_uploadRequestStatus;
    HKObserverSet * _observers;
    HDAssertion * _preparedDatabaseAccessibilityAssertion;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _supportsRebase;
}

@property (readonly) long long bytesPerChangeRecordAssetThreshold;
@property (readonly) long long bytesPerChangeRecordAssetThresholdHardLimit;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inProgressSyncCount;
@property (nonatomic, readonly) NSDate *lastSuccessfulPullDate;
@property (nonatomic, readonly) NSDate *lastSuccessfulPushDate;
@property (retain) HDAssertion *preparedDatabaseAccessibilityAssertion;
@property (nonatomic, readonly) HDProfile *profile;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsRebase;

+ (void)_containerIdentifiersWithEncryptionSupportEnabled:(bool)arg1 accountManateeEnabled:(bool)arg2 internalSettingManateeEnabled:(bool)arg3 resultHandler:(id /* block */)arg4;

- (void).cxx_destruct;
- (void)_addFinalProgressUpdateWithTaskTree:(id)arg1 progress:(id)arg2;
- (void)_containerIdentifiersForCurrentAccountWithCompletion:(id /* block */)arg1;
- (id)_containerWithIdentifier:(id)arg1 error:(id*)arg2;
- (id)_errorForNilProfile;
- (bool)_isValidOwnerParticipant:(id)arg1;
- (bool)_persistErrorRequiringUserAction:(id)arg1;
- (void)_primaryContainerIdentifiersForCurrentAccountWithCompletion:(id /* block */)arg1;
- (void)_queue_considerStartingBackstopSyncForThreshold:(double)arg1;
- (void)_queue_updateAccessibilityAssertion;
- (id)_removeParticipants:(id)arg1 fromSharesWithCompletion:(id /* block */)arg2;
- (void)_scheduleOwnershipRollForLocalDataLoss;
- (void)_scheduleResetReceivedCloudSyncAnchorsAndRebaseForHFDRecovery;
- (void)_subscribeToSubscriptions:(id)arg1 completion:(id /* block */)arg2;
- (id)_syncCircleIdentifierForProfile:(id)arg1 error:(id*)arg2;
- (void)_tinkerContainerIdentifiersWithCompletion:(id /* block */)arg1;
- (void)_updateDataUploadRequestStatus:(long long)arg1;
- (void)acceptShare:(id)arg1 completion:(id /* block */)arg2;
- (void)addObserver:(id)arg1 queue:(id)arg2;
- (long long)bytesPerChangeRecordAssetThreshold;
- (long long)bytesPerChangeRecordAssetThresholdHardLimit;
- (bool)canPerformCloudSyncWithError:(id*)arg1;
- (void)cloudSyncRepositoriesWithCompletion:(id /* block */)arg1;
- (void)configureForShareSetupMetadata:(id)arg1 acceptedShares:(id)arg2 completion:(id /* block */)arg3;
- (void)contentProtectionStateChanged:(long long)arg1 previousState:(long long)arg2;
- (void)daemonReady:(id)arg1;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(bool)arg2;
- (void)dealloc;
- (void)didCompleteSuccessfulPullOfUpdateWithDate:(id)arg1;
- (void)didCompleteSuccessfulPullWithDate:(id)arg1;
- (void)didCompleteSuccessfulPushWithDate:(id)arg1;
- (id)disableAndDeleteAllSyncDataWithCompletion:(id /* block */)arg1;
- (void)fetchCloudKitEmailAddressWithCompletion:(id /* block */)arg1;
- (id)fetchDescriptionWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchServerPreferredPushEnvironment:(id /* block */)arg1;
- (id)fetchShareParticipantsWithCompletion:(id /* block */)arg1;
- (id)fetchSharingStatusForCurrentAppleIDWithOwnerEmailAddress:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchSyncStatusWithCompletion:(id /* block */)arg1;
- (long long)inProgressSyncCount;
- (id)initWithProfile:(id)arg1;
- (id)lastPushForwardProgressDate;
- (id)lastSuccessfulPullDate;
- (id)lastSuccessfulPushDate;
- (id)leaveSharesWithCompletion:(id /* block */)arg1;
- (id)lookupParticipantWithIdentityLookUpInfo:(id)arg1 completion:(id /* block */)arg2;
- (bool)persistRestoreCompletionDate:(id)arg1 withError:(id*)arg2;
- (id)prepareForSharingWithCompletion:(id /* block */)arg1;
- (void)prepareForSync;
- (id)preparedDatabaseAccessibilityAssertion;
- (id)profile;
- (id)queue;
- (void)queue_cloudSyncRepositoriesWithCompletion:(id /* block */)arg1;
- (id)removeAllParticipantsFromSharesWithCompletion:(id /* block */)arg1;
- (void)removeObserver:(id)arg1;
- (id)removeParticipants:(id)arg1 fromSharesWithCompletion:(id /* block */)arg2;
- (void)reportDailyAnalyticsWithCoordinator:(id)arg1 completion:(id /* block */)arg2;
- (void)requestDataUploadWithCompletion:(id /* block */)arg1;
- (id)resetWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)setInProgressSyncCount:(long long)arg1;
- (void)setPreparedDatabaseAccessibilityAssertion:(id)arg1;
- (bool)setShareOwnerParticipant:(id)arg1 error:(id*)arg2;
- (id)setupSharingToAccountWithIdentityLookupInfo:(id)arg1 requireExistingRelationship:(bool)arg2 requireZoneDeviceMode:(id)arg3 completion:(id /* block */)arg4;
- (id)shareOwnerParticipantWithError:(id*)arg1;
- (void)subscribeToDataAvailableNotificationsWithCompletion:(id /* block */)arg1;
- (void)subscribeToDataUploadRequestsWithCompletion:(id /* block */)arg1;
- (bool)supportsRebase;
- (id)syncMedicalIDDataWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)syncSessionForSyncStore:(id)arg1 reason:(id)arg2 delegate:(id)arg3 accessibilityAssertion:(id)arg4 excludedStores:(id)arg5;
- (id)syncWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)unitTest_setSupportsRebase:(bool)arg1;
- (void)updateErrorRequiringUserAction:(id)arg1;

@end
