/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph
 */

@interface PGPhotosChallengeMetricEvent : NSObject <PLMetricEvent> {
    unsigned long long  _algorithmVersion;
    PGPrecisionRecallEvaluation * _evaluation;
    unsigned long long  _graphSchemaVersion;
    NSString * _identifier;
    PGManager * _manager;
    PGPhotosChallengeMetricEventFetchHelper * _metricsCache;
    NSDictionary * _payload;
    NSString * _photoLibrarySize;
    unsigned long long  _photosModelVersion;
    unsigned short  _questionMetricType;
    NSString * _questionTypeString;
    unsigned long long  _questionVersion;
}

@property (nonatomic) unsigned long long algorithmVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PGPrecisionRecallEvaluation *evaluation;
@property (nonatomic) unsigned long long graphSchemaVersion;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, retain) PGManager *manager;
@property (nonatomic, retain) PGPhotosChallengeMetricEventFetchHelper *metricsCache;
@property (nonatomic, readonly) NSDictionary *payload;
@property (nonatomic, readonly) NSString *photoLibrarySize;
@property (nonatomic) unsigned long long photosModelVersion;
@property (nonatomic) unsigned short questionMetricType;
@property (nonatomic, retain) NSString *questionTypeString;
@property (nonatomic) unsigned long long questionVersion;
@property (readonly) Class superclass;

+ (unsigned long long)algorithmVersionFromQuestionMetricType:(unsigned short)arg1;
+ (id)allMetricEventsWithGraphManager:(id)arg1;
+ (id)meaningLabelFromMeaningQuestionMetricType:(unsigned short)arg1;
+ (unsigned short)questionEntityTypeFromQuestionMetricType:(unsigned short)arg1;
+ (unsigned short)questionTypeFromQuestionMetricType:(unsigned short)arg1;
+ (id)relationshipLabelFromRelationshipQuestionMetricType:(unsigned short)arg1;
+ (id)stringFromQuestionMetricType:(unsigned short)arg1;

- (void).cxx_destruct;
- (id)_ageCategoryInferenceResultsForAgeCategoryByPersonIds:(id)arg1;
- (id)_businessInferenceResultsForBusinessIdByAssetIds:(id)arg1;
- (id)_featuredPhotoInferenceResultsForAnswerDateByAssetIds:(id)arg1 questionMetricType:(unsigned short)arg2;
- (id)_frequentLocationInferenceResultsForLocationByAssetIds:(id)arg1 locationType:(id)arg2;
- (void)_gatherMetricsForAgeCategoryQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForBusinessQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForFeaturedPhotoQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForFrequentLocationQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForHolidayQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForMeaningQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForMemoryQuestions:(id)arg1 fromGraph:(id)arg2 questionMetricType:(unsigned short)arg3 progressBlock:(id /* block */)arg4;
- (void)_gatherMetricsForNamingQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPetKnowledgeQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPetQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPublicEventQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForRelationshipQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForTripKeyQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (id)_groundTruthByAssetIdentifiersFromQuestions:(id)arg1;
- (id)_groundTruthByPersonIdentifiersFromQuestions:(id)arg1;
- (id)_groundTruthForAgeCategoryFromQuestions:(id)arg1;
- (id)_groundTruthForBusinessFromQuestions:(id)arg1;
- (id)_groundTruthForFeaturedPhotoFromQuestions:(id)arg1;
- (id)_groundTruthForFrequentLocationFromQuestions:(id)arg1;
- (id)_groundTruthForHolidayFromQuestions:(id)arg1;
- (id)_groundTruthForNamingFromQuestions:(id)arg1;
- (id)_groundTruthForPublicEventFromQuestions:(id)arg1;
- (id)_holidayInferenceResultsForHolidayNameByAssetIds:(id)arg1;
- (id)_meaningInferenceResultsForMeaningLabel:(id)arg1 assetIds:(id)arg2;
- (id)_namingInferenceResultsForContactIdByPersonIds:(id)arg1;
- (id)_petInferenceResultsForAssetIds:(id)arg1;
- (id)_publicEventInferenceResultsForPublicEventIdByAssetIds:(id)arg1;
- (id)_relationshipInferenceResultsForQuestionMetricType:(unsigned short)arg1 personIds:(id)arg2;
- (unsigned long long)algorithmVersion;
- (id)description;
- (id)evaluation;
- (void)gatherMetricsWithProgressBlock:(id /* block */)arg1;
- (unsigned long long)graphSchemaVersion;
- (id)identifier;
- (id)initWithGraphManager:(id)arg1 questionMetricType:(unsigned short)arg2 metricEventFetchHelper:(id)arg3;
- (id)manager;
- (id)memoryCategorySubCategoryByQuestionMetricType;
- (id)metricsCache;
- (id)payload;
- (id)payloadForVerification;
- (id)photoLibrarySize;
- (unsigned long long)photosModelVersion;
- (unsigned short)questionMetricType;
- (id)questionTypeString;
- (unsigned long long)questionVersion;
- (void)setAlgorithmVersion:(unsigned long long)arg1;
- (void)setEvaluation:(id)arg1;
- (void)setGraphSchemaVersion:(unsigned long long)arg1;
- (void)setManager:(id)arg1;
- (void)setMetricsCache:(id)arg1;
- (void)setPhotosModelVersion:(unsigned long long)arg1;
- (void)setQuestionMetricType:(unsigned short)arg1;
- (void)setQuestionTypeString:(id)arg1;
- (void)setQuestionVersion:(unsigned long long)arg1;

@end
