/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@interface EKCalendarChooser : UIViewController <EKUIAccountRefresherDelegate> {
    _UIAccessDeniedView * _accessDeniedView;
    NSMutableDictionary * _accountErrorAnalyticsState;
    UIBarButtonItem * _addCalendarButton;
    bool  _allowsEdit;
    bool  _canShowIdentityChooser;
    NSIndexPath * _checkedRow;
    int  _chooserMode;
    EKUIAccountRefresher * _currentAccountRefresher;
    NSSet * _currentKnownCalendarIds;
    NSMutableDictionary * _customGroupMap;
    <EKCalendarChooserDelegate> * _delegate;
    NSArray * _delegateSources;
    bool  _disableCalendarEditing;
    long long  _displayStyle;
    unsigned long long  _entityType;
    EKEvent * _event;
    EKEventStore * _eventStore;
    int  _explanatoryTextMode;
    struct { 
        unsigned int listIsFlat : 1; 
        unsigned int showAll : 1; 
        unsigned int showColors : 1; 
        unsigned int allSelected : 1; 
        unsigned int allowsRotation : 1; 
        unsigned int showsDoneButton : 1; 
        unsigned int showsCancelButton : 1; 
        unsigned int showsWritableCalendarsOnly : 1; 
        unsigned int showsRefreshButton : 1; 
        unsigned int allowsPullToRefresh : 1; 
    }  _flags;
    NSMutableArray * _groups;
    long long  _lastAuthorizationStatus;
    EKSource * _limitedToSource;
    bool  _onlyShowUnmanagedAccounts;
    EKCalendarEditor * _presentedEditor;
    UIRefreshControl * _refreshControl;
    NSMutableSet * _selectedCalendars;
    bool  _showAccountStatus;
    UIBarButtonItem * _showAllButton;
    UITableViewCell * _showDeclinedEventsCell;
    bool  _showDelegateCalendarsCell;
    bool  _showDetailAccessories;
    bool  _showsDeclinedEventsSetting;
    NSMutableDictionary * _storeGroupMap;
    long long  _style;
    <EKStyleProvider> * _styleProvider;
    UITableView * _tableView;
    bool  _updatingHeaderHeight;
}

@property (nonatomic, retain) _UIAccessDeniedView *accessDeniedView;
@property (nonatomic) bool allowsEdit;
@property (nonatomic) bool allowsPullToRefresh;
@property (nonatomic) bool allowsRotation;
@property (nonatomic) bool canShowIdentityChooser;
@property (nonatomic, retain) NSIndexPath *checkedRow;
@property (nonatomic) int chooserMode;
@property (nonatomic, retain) NSMutableDictionary *customGroupMap;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <EKCalendarChooserDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableCalendarEditing;
@property (nonatomic) unsigned long long entityType;
@property (nonatomic, retain) EKEvent *event;
@property (nonatomic, retain) EKEventStore *eventStore;
@property (nonatomic) int explanatoryTextMode;
@property (nonatomic) struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; } flags;
@property (nonatomic, retain) NSMutableArray *groups;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long lastAuthorizationStatus;
@property (nonatomic, retain) EKSource *limitedToSource;
@property (nonatomic) bool onlyShowUnmanagedAccounts;
@property (nonatomic, retain) EKCalendarEditor *presentedEditor;
@property (nonatomic, retain) UIRefreshControl *refreshControl;
@property (nonatomic, retain) EKCalendar *selectedCalendar;
@property (nonatomic, retain) NSMutableSet *selectedCalendarSet;
@property (nonatomic, copy) NSSet *selectedCalendars;
@property (nonatomic) long long selectionStyle;
@property (nonatomic) bool showAccountStatus;
@property (nonatomic, retain) UIBarButtonItem *showAllButton;
@property (nonatomic) bool showDetailAccessories;
@property (nonatomic) bool showsCancelButton;
@property (nonatomic) bool showsDeclinedEventsSetting;
@property (nonatomic) bool showsDoneButton;
@property (nonatomic) bool showsRefreshButton;
@property (nonatomic, retain) NSMutableDictionary *storeGroupMap;
@property (nonatomic) <EKStyleProvider> *styleProvider;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITableView *tableView;

+ (id)_subscribedLocalizedString;
+ (id)delegatesString;
+ (bool)groups:(id)arg1 differStructurallyFromGroups:(id)arg2;
+ (id)hideAllString;
+ (id)showAllString;

- (void).cxx_destruct;
- (long long)_accountErrorActionIndexForGroup:(id)arg1;
- (id)_allCalendars;
- (bool)_applySelection;
- (bool)_calendarAvailableForEditing:(id)arg1;
- (long long)_calendarRowOffsetForGroup:(id)arg1;
- (id)_calendarSetToCalendarIdSet:(id)arg1;
- (id)_calendarsForSelectedSource;
- (id)_cellIdentifierWithSubtitle:(bool)arg1;
- (id)_contactForSource:(id)arg1;
- (id)_currentKnownCalendarIds;
- (void)_delegateSelectionDidChange:(bool)arg1;
- (void)_ensureWritableCalendarExists;
- (void)_eventStoreChanged:(id)arg1;
- (id)_filterCalendars:(id)arg1;
- (void)_finishRefreshing;
- (id)_groupForCustomGroupType:(unsigned long long)arg1;
- (id)_groupForSection:(long long)arg1;
- (id)_groupForSource:(id)arg1;
- (long long)_groupsOffset;
- (void)_ignoredErrorsChanged;
- (id)_indexPathForCalendar:(id)arg1;
- (void)_insertStoreIntoByGroupArray:(id)arg1;
- (bool)_isDeclinedEventsSwitchSection:(long long)arg1;
- (bool)_isDelegateCalendarsCellSection:(long long)arg1;
- (bool)_isIdentityChooserSection:(long long)arg1;
- (void)_layoutNavToolbarControls;
- (id)_loadCalendars;
- (int)_numSelectedGroups;
- (void)_populateGroupsForCalendars:(id)arg1 includingAccountsWithoutCalendars:(bool)arg2 footersChanged:(bool*)arg3;
- (id)_preferredAddressFromOwnerAddresses:(id)arg1;
- (void)_presentEditor:(id)arg1 withIndexPath:(id)arg2 barButtonItem:(id)arg3 permittedArrowDirections:(unsigned long long)arg4 animated:(bool)arg5;
- (void)_pulledToRefresh:(id)arg1;
- (void)_restoreSelection:(id)arg1 calendarsForSelectedSource:(id)arg2 allCalendars:(id)arg3;
- (id)_saveSelection;
- (void)_selectAllCalendarsAndStores:(bool)arg1;
- (void)_selectCalendar:(id)arg1 selected:(bool)arg2;
- (void)_selectGroup:(id)arg1 selected:(bool)arg2;
- (void)_sendAnalyticsEvent:(unsigned long long)arg1 forGroup:(id)arg2;
- (void)_setCalendars:(id)arg1 changedObjectsHint:(id)arg2;
- (void)_setGroup:(id)arg1 withSourceIdentifier:(id)arg2;
- (bool)_shouldShowDelegateCalendarsCellSection;
- (bool)_shouldShowGroupNameInSection:(long long)arg1;
- (bool)_shouldShowIdentityChooser;
- (id)_statusTextForGroup:(id)arg1;
- (id)_stringForSharedCalendar:(id)arg1;
- (id)_tableHeaderView;
- (long long)_tableSectionRow:(long long)arg1 toCalendarIndexInGroup:(id)arg2;
- (long long)_tableSectionRowToDelegateSourceIndex:(long long)arg1;
- (bool)_tableShouldDisplayAccountErrorActionCellForGroup:(id)arg1;
- (id)_toggleButtonTitleForGroup:(id)arg1;
- (void)_updateCurrentKnownCalendarIds;
- (void)_updateDelegateSources;
- (void)_updateShowDelegateCalendarsCell;
- (void)_updateViewControllerTitle;
- (id)_viewModeTitle;
- (id)accessDeniedView;
- (void)accountRefreshFinished:(id)arg1;
- (void)addCalendarButtonPressed:(id)arg1;
- (bool)allowsEdit;
- (bool)allowsPullToRefresh;
- (bool)allowsRotation;
- (void)calendarEditor:(id)arg1 didCompleteWithAction:(int)arg2;
- (bool)canShowIdentityChooser;
- (void)cancel:(id)arg1;
- (void)centerOnCalendar:(id)arg1;
- (id)centeredCalendar;
- (id)checkedRow;
- (int)chooserMode;
- (id)customGroupMap;
- (void)dealloc;
- (void)declinedEventsChanged;
- (id)delegate;
- (bool)disableCalendarEditing;
- (id)displayedEditor;
- (void)done:(id)arg1;
- (unsigned long long)entityType;
- (id)event;
- (id)eventStore;
- (int)explanatoryTextMode;
- (struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; })flags;
- (void)groupHeaderChangedHeight:(id)arg1;
- (void)groupShowAllTapped:(id)arg1;
- (id)groups;
- (bool)hasAccountThatCanCreateCalendars;
- (void)identityChanged:(id)arg1;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 entityType:(unsigned long long)arg3 forEvent:(id)arg4 eventStore:(id)arg5 limitedToSource:(id)arg6 showIdentityChooser:(bool)arg7 showAccountStatus:(bool)arg8;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 eventStore:(id)arg3;
- (long long)lastAuthorizationStatus;
- (id)limitedToSource;
- (void)loadView;
- (double)marginForTableView:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (bool)onlyShowUnmanagedAccounts;
- (void)populateGroupsForNonDelegateSources;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (void)presentAccountErrorAlertForGroup:(id)arg1;
- (id)presentedEditor;
- (void)redisplayEditor:(id)arg1;
- (void)refresh:(id)arg1;
- (id)refreshControl;
- (id)selectedCalendar;
- (id)selectedCalendarSet;
- (id)selectedCalendars;
- (long long)selectionStyle;
- (void)setAccessDeniedView:(id)arg1;
- (void)setAllSelected:(bool)arg1;
- (void)setAllowsEdit:(bool)arg1;
- (void)setAllowsPullToRefresh:(bool)arg1;
- (void)setAllowsRotation:(bool)arg1;
- (void)setCanShowIdentityChooser:(bool)arg1;
- (void)setCheckedRow:(id)arg1;
- (void)setChooserMode:(int)arg1;
- (void)setCustomGroupMap:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableCalendarEditing:(bool)arg1;
- (void)setEntityType:(unsigned long long)arg1;
- (void)setEvent:(id)arg1;
- (void)setEventStore:(id)arg1;
- (void)setExplanatoryTextMode:(int)arg1;
- (void)setFlags:(struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; })arg1;
- (void)setGroups:(id)arg1;
- (void)setLastAuthorizationStatus:(long long)arg1;
- (void)setLimitedToSource:(id)arg1;
- (void)setOnlyShowUnmanagedAccounts:(bool)arg1;
- (void)setPresentedEditor:(id)arg1;
- (void)setRefreshControl:(id)arg1;
- (void)setSelectedCalendar:(id)arg1;
- (void)setSelectedCalendarSet:(id)arg1;
- (void)setSelectedCalendars:(id)arg1;
- (void)setSelectionStyle:(long long)arg1;
- (void)setShowAccountStatus:(bool)arg1;
- (void)setShowAll:(bool)arg1;
- (void)setShowAllButton:(id)arg1;
- (void)setShowDetailAccessories:(bool)arg1;
- (void)setShowsCancelButton:(bool)arg1;
- (void)setShowsDeclinedEventsSetting:(bool)arg1;
- (void)setShowsDoneButton:(bool)arg1;
- (void)setShowsRefreshButton:(bool)arg1;
- (void)setShowsWritableCalendarsOnly:(bool)arg1;
- (void)setStoreGroupMap:(id)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)setTableView:(id)arg1;
- (bool)showAccountStatus;
- (id)showAllButton;
- (void)showAllButtonPressed;
- (bool)showDetailAccessories;
- (bool)showsCancelButton;
- (bool)showsDeclinedEventsSetting;
- (bool)showsDoneButton;
- (bool)showsRefreshButton;
- (bool)showsWritableCalendarsOnly;
- (id)sourceForSelectedIdentity;
- (id)storeGroupMap;
- (id)styleProvider;
- (unsigned long long)supportedInterfaceOrientations;
- (id)tableView;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateDeclinedEventsCell:(bool)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
