/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SetupKit.framework/SetupKit
 */

@interface SKSetupClient : NSObject <CUActivatable, CUAuthenticatableClient, CULabelable, CUMessaging> {
    bool  _activateCalled;
    id /* block */  _activateCompletion;
    id /* block */  _authCompletionHandler;
    id /* block */  _authPromptForPasswordHandler;
    unsigned int  _controlFlags;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    SKFlow * _flow;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id /* block */  _invalidationHandler;
    NSString * _label;
    CUNANEndpoint * _nanEndpoint;
    CUNANSubscriber * _nanSubscriber;
    id /* block */  _overallCompletionHandler;
    NSString * _password;
    SKDevice * _peerDevice;
    NSMutableDictionary * _registeredEvents;
    NSMutableDictionary * _registeredRequests;
    SKConnection * _skCnx;
    SKStepWiFiSetupClient * _stepWiFiSetup;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
}

@property (nonatomic, copy) id /* block */ authCompletionHandler;
@property (nonatomic, copy) id /* block */ authPromptForPasswordHandler;
@property (nonatomic) unsigned int controlFlags;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) id /* block */ overallCompletionHandler;
@property (nonatomic, copy) NSString *password;
@property (nonatomic, retain) SKDevice *peerDevice;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activateBLEWithCompletion:(id /* block */)arg1;
- (void)_activateNANContinueWithError:(id)arg1;
- (void)_activateNANWithCompletion:(id /* block */)arg1;
- (void)_activateWithCompletion:(id /* block */)arg1;
- (void)_invalidated;
- (void)_receivedEventID:(id)arg1 event:(id)arg2 options:(id)arg3;
- (void)_receivedRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(id /* block */)arg4;
- (void)_run;
- (void)activateWithCompletion:(id /* block */)arg1;
- (id /* block */)authCompletionHandler;
- (id /* block */)authPromptForPasswordHandler;
- (unsigned int)controlFlags;
- (void)dealloc;
- (void)deregisterEventID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)deregisterRequestID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (id)dispatchQueue;
- (id)init;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (id)label;
- (id /* block */)overallCompletionHandler;
- (id)password;
- (id)peerDevice;
- (void)registerEventID:(id)arg1 options:(id)arg2 eventHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)registerRequestID:(id)arg1 options:(id)arg2 requestHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)sendEventID:(id)arg1 eventMessage:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)sendRequestID:(id)arg1 requestMessage:(id)arg2 options:(id)arg3 responseHandler:(id /* block */)arg4;
- (void)setAuthCompletionHandler:(id /* block */)arg1;
- (void)setAuthPromptForPasswordHandler:(id /* block */)arg1;
- (void)setControlFlags:(unsigned int)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setLabel:(id)arg1;
- (void)setOverallCompletionHandler:(id /* block */)arg1;
- (void)setPassword:(id)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)tryPassword:(id)arg1;

@end
