/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals
 */

@interface PPLocalLocationStore : NSObject <PPFeedbackAccepting, PPFeedbackProcessing> {
    _PASLock * _cache;
    NSCache * _modelCache;
    PPLocationStorage * _storage;
    PPTrialWrapper * _trialWrapper;
    bool  _useScoreInterpreter;
}

@property (nonatomic, readonly) PPLocationStorage *storage;
@property (nonatomic, readonly) bool useScoreInterpreter;

+ (id)defaultStore;
+ (bool)isLocationRelevantDynamicNamedEntityCategory:(id)arg1;
+ (bool)isLocationRelevantNamedEntityCategory:(unsigned long long)arg1;
+ (id)locationFromMapItem:(id)arg1;
+ (id)locationFromMapItemDictionary:(id)arg1;
+ (id)locationNamedEntityToPPScoredLocation:(id)arg1;
+ (unsigned short)namedEntityCategoryToLocationCategory:(unsigned long long)arg1;
+ (unsigned short)poiCategoryToPPLocationCategory:(id)arg1;
+ (float)resolvedPerRecordDecayRateForFeatureProvider:(id)arg1 perRecordDecayRate:(float)arg2;
+ (float)resolvedPerRecordDecayRateForRecord:(id)arg1 perRecordDecayRate:(float)arg2;
+ (float)resolvedPerRecordDecayRateForSourceBundleId:(id)arg1 algorithm:(unsigned short)arg2 perRecordDecayRate:(float)arg3;
+ (unsigned short)routineLOITypeToLocationCategory:(long long)arg1;
+ (id)scoredLocationFromName:(id)arg1 category:(unsigned short)arg2 score:(double)arg3 sentimentScore:(double)arg4;
+ (void)sortAndTruncate:(id)arg1 queryLimit:(unsigned long long)arg2;

- (void).cxx_destruct;
- (bool)_extractDonationsForFeedback:(id)arg1 pbFeedbackLog:(id)arg2 location:(id)arg3 error:(id*)arg4;
- (id)_feedbackItemToLocationMapForFeedback:(id)arg1 error:(id*)arg2;
- (id)_feedbackItemsByItemString:(id)arg1;
- (id)_getScoredLocationFeaturesForCoreMLFromIdentifier:(id)arg1 scoringDate:(id)arg2 excludingSourceBundleId:(id)arg3 decayedFeedbackCounts:(id)arg4 featurizer:(id)arg5 error:(id*)arg6;
- (id)_getScoredLocationFeaturesForStreamingScorerWithIdentifier:(id)arg1 excludingSourceBundleId:(id)arg2 decayedFeedbackCounts:(id)arg3 error:(id*)arg4;
- (id)_init;
- (id)_loadScoreInterpreter;
- (id)_loadScoringMLModel;
- (id)_locationToMappedStringMatchingForLocations:(id)arg1 timestamp:(double)arg2 error:(id*)arg3;
- (void)_logDonationForLocations:(id)arg1 bundleId:(id)arg2 algorithm:(unsigned short)arg3 groupId:(id)arg4;
- (bool)_logFeedbackSessionsWithFeedback:(id)arg1 error:(id*)arg2;
- (void)_petLoggingForQuery:(id)arg1 resultCount:(unsigned long long)arg2 clientProcessName:(id)arg3 hasError:(bool)arg4;
- (bool)_shouldUseScoringMLModel;
- (id)_unlimitedLocationRecordsWithQuery:(id)arg1 error:(id*)arg2;
- (bool)clearWithError:(id*)arg1 deletedCount:(unsigned long long*)arg2;
- (bool)deleteAllLocationFeedbackCountsOlderThanDate:(id)arg1;
- (bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3;
- (bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
- (bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 olderThan:(id)arg3 deletedCount:(unsigned long long*)arg4 error:(id*)arg5;
- (bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
- (bool)deleteAllLocationsOlderThanDate:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3;
- (bool)donateLocations:(id)arg1 source:(id)arg2 contextualNamedEntities:(id)arg3 algorithm:(unsigned short)arg4 cloudSync:(bool)arg5 decayRate:(double)arg6 error:(id*)arg7;
- (double)finalScoreFromRecordsUsingHybrid:(id)arg1 streamingScorer:(id)arg2 mlModel:(id)arg3;
- (id)homeOrWorkAddresses;
- (id)init;
- (id)initWithStorage:(id)arg1 trialWrapper:(id)arg2;
- (bool)iterLocationRecordsWithQuery:(id)arg1 error:(id*)arg2 block:(id /* block */)arg3;
- (bool)iterRankedLocationsWithQuery:(id)arg1 error:(id*)arg2 block:(id /* block */)arg3;
- (id)locationForHome;
- (id)locationForWork;
- (id)locationRecordOfCategory:(unsigned short)arg1;
- (id)locationRecordsWithQuery:(id)arg1 error:(id*)arg2;
- (void)processfeedbackItems:(id)arg1 scoringDate:(id)arg2 clientIdentifier:(id)arg3 clientBundleId:(id)arg4 mappingId:(id)arg5;
- (bool)pruneOrphanedLocationFeedbackCountsWithLimit:(long long)arg1 rowOffset:(unsigned long long)arg2 deletedCount:(unsigned long long*)arg3 isComplete:(bool*)arg4;
- (id)rankedLocationsWithQuery:(id)arg1 clientProcessName:(id)arg2 error:(id*)arg3;
- (void)registerFeedback:(id)arg1 completion:(id /* block */)arg2;
- (id)scoreLocations:(id)arg1 scoringDate:(id)arg2 perRecordDecayRate:(float)arg3 decayRate:(float)arg4 sourceStats:(id)arg5 scoreInterpreter:(id)arg6 streamingScorer:(id*)arg7 mlModel:(id)arg8;
- (id)storage;
- (bool)useScoreInterpreter;

@end
