/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppPredictionInternal.framework/AppPredictionInternal
 */

@interface ATXBlendingLayerSessionLogger : NSObject {
    BPSPublisher * _blendingPublisher;
    BPSPublisher * _clientModelPublisher;
    BPSPublisher * _ermPublisher;
    ATXBlendingLayerHyperParameters * _hyperParameters;
    NSMutableDictionary * _mostRecentBlendingCacheUpdateByConsumerSubType;
    ATXPredictionContext * _mostRecentPredictionContext;
    ATXHomeScreenEvent * _mostRecentScreenLockEvent;
    NSDate * _now;
    BPSPublisher * _predictionContextPublisher;
    <ATXPETEventTracker2Protocol> * _tracker;
    BPSPublisher * _uiPublisher;
}

@property (nonatomic, retain) BPSPublisher *blendingPublisher;
@property (nonatomic, retain) BPSPublisher *clientModelPublisher;
@property (nonatomic, retain) BPSPublisher *ermPublisher;
@property (nonatomic, retain) NSDate *now;
@property (nonatomic, retain) BPSPublisher *predictionContextPublisher;
@property (nonatomic, retain) BPSPublisher *uiPublisher;

- (void).cxx_destruct;
- (id)blendingPublisher;
- (id)clientModelCacheUpdatesFromBlendingCacheUpdate:(id)arg1;
- (id)clientModelPublisher;
- (id)ermPublisher;
- (id)generateSessionLog;
- (id)init;
- (id)initWithTracker:(id)arg1 hyperParameters:(id)arg2;
- (int)locationTypeFromLocationOfInterest:(id)arg1;
- (bool)logCurrentSessionIfPossible;
- (void)logSessionLogToPET:(id)arg1;
- (id)now;
- (id)orderedMergeERMBlendingContextUIPublisher;
- (id)predictionContextPublisher;
- (id)sessionBlendingUpdateFromBlendingUICacheUpdate:(id)arg1 deviceContext:(id)arg2;
- (id)sessionClientModelUpdatesForUICacheUpdate:(id)arg1;
- (id)sessionDeviceContextFromPredictionContext:(id)arg1;
- (id)sessionERMEventFromERMEvent:(id)arg1;
- (id)sessionSuggestionFromProactiveSuggestion:(id)arg1;
- (id)sessionUICacheForUICacheUpdate:(id)arg1;
- (void)setBlendingPublisher:(id)arg1;
- (void)setClientModelPublisher:(id)arg1;
- (void)setErmPublisher:(id)arg1;
- (void)setNow:(id)arg1;
- (void)setPredictionContextPublisher:(id)arg1;
- (void)setUiPublisher:(id)arg1;
- (bool)shouldLogSession;
- (id)uiPublisher;

@end
