/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation
 */

@interface MNSimulationLocationProvider : NSObject <MNLocationProvider> {
    unsigned long long  _currentLegIndex;
    <MNLocationProviderDelegate> * _delegate;
    NSTimer * _locationUpdateTimer;
    MNLocation * _previousLocation;
    struct { 
        unsigned int index; 
        float offset; 
    }  _previousPolylineCoordinate;
    MNActiveRouteInfo * _routeInfo;
    long long  _simulationType;
    NSDate * _startWaitingDate;
    long long  _state;
}

@property (nonatomic, copy) id /* block */ authorizationRequestBlock;
@property (nonatomic, readonly) int authorizationStatus;
@property (nonatomic, readonly) bool coarseModeEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MNLocationProviderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) double distanceFilter;
@property (nonatomic, retain) NSBundle *effectiveBundle;
@property (nonatomic, copy) NSString *effectiveBundleIdentifier;
@property (nonatomic, readonly) double expectedGpsUpdateInterval;
@property (readonly) unsigned long long hash;
@property (nonatomic) int headingOrientation;
@property (nonatomic, readonly) bool isSimulation;
@property (nonatomic, readonly) bool isTracePlayer;
@property (getter=isLocationServicesPreferencesDialogEnabled, nonatomic) bool locationServicesPreferencesDialogEnabled;
@property (nonatomic) bool matchInfoEnabled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double timeScale;
@property (nonatomic, readonly) unsigned long long traceVersion;
@property (nonatomic, readonly) bool usesCLMapCorrection;

- (void).cxx_destruct;
- (double)_courseFromCoordinate:(struct { double x1; double x2; double x3; })arg1 toCoordinate:(struct { double x1; double x2; double x3; })arg2;
- (bool)_isCoordinate:(struct { unsigned int x1; float x2; })arg1 atEndOfLeg:(id)arg2;
- (id)_locationWithCoordinate:(struct { double x1; double x2; double x3; })arg1 course:(double)arg2 speed:(double)arg3;
- (double)_modifiedSpeedForSpeed:(double)arg1;
- (struct { double x1; double x2; double x3; })_projectedCoordinateOffRouteFrom:(struct { double x1; double x2; double x3; })arg1 toCoordinate:(struct { double x1; double x2; double x3; })arg2 overTimeDelta:(double)arg3 outCourse:(out double*)arg4 outSpeed:(out double*)arg5;
- (struct { unsigned int x1; float x2; })_projectedCoordinateOnRouteFrom:(struct { unsigned int x1; float x2; })arg1 overTimeDelta:(double)arg2 outSpeed:(out double*)arg3;
- (void)_sendLocationUpdate:(id)arg1;
- (struct { unsigned int x1; float x2; })_simulationStartRouteCoordinate;
- (id)_stringForState:(long long)arg1;
- (struct { double x1; double x2; double x3; })_updateForFollowingRouteOverTimeDelta:(double)arg1 outCourse:(out double*)arg2 outSpeed:(out double*)arg3;
- (struct { double x1; double x2; double x3; })_updateForProceedingToStartOfLegOverTimeDelta:(double)arg1 outCourse:(out double*)arg2 outSpeed:(out double*)arg3;
- (struct { double x1; double x2; double x3; })_updateForProceedingToWaypointOverTimeDelta:(double)arg1 outCourse:(out double*)arg2 outSpeed:(out double*)arg3;
- (struct { double x1; double x2; double x3; })_updateForWaitingAtWaypointOverTimeDelta:(double)arg1 outCourse:(out double*)arg2 outSpeed:(out double*)arg3;
- (id /* block */)authorizationRequestBlock;
- (int)authorizationStatus;
- (bool)coarseModeEnabled;
- (void)dealloc;
- (id)delegate;
- (double)desiredAccuracy;
- (double)distanceFilter;
- (id)effectiveBundle;
- (id)effectiveBundleIdentifier;
- (double)expectedGpsUpdateInterval;
- (int)headingOrientation;
- (id)initWithSimulationType:(long long)arg1 routeInfo:(id)arg2;
- (bool)isLocationServicesPreferencesDialogEnabled;
- (bool)isSimulation;
- (bool)isTracePlayer;
- (bool)matchInfoEnabled;
- (void)requestWhenInUseAuthorization;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (void)resetForActiveTileGroupChanged;
- (void)setAuthorizationRequestBlock:(id /* block */)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDesiredAccuracy:(double)arg1;
- (void)setDistanceFilter:(double)arg1;
- (void)setEffectiveBundle:(id)arg1;
- (void)setEffectiveBundleIdentifier:(id)arg1;
- (void)setHeadingOrientation:(int)arg1;
- (void)setLocationServicesPreferencesDialogEnabled:(bool)arg1;
- (void)setMatchInfoEnabled:(bool)arg1;
- (void)startUpdatingHeading;
- (void)startUpdatingLocation;
- (void)startUpdatingVehicleHeading;
- (void)startUpdatingVehicleSpeed;
- (void)stopUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)stopUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (double)timeScale;
- (unsigned long long)traceVersion;
- (void)updateWithRouteInfo:(id)arg1;
- (bool)usesCLMapCorrection;

@end
