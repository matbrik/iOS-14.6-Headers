/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface WFDialogTransformer : NSObject <WFActionParameterInputProvider, WFSequentialParameterInputProviderDelegate, WFUserInterfaceHost> {
    NSArray * _allowedParameterClasses;
    WFAction * _currentAction;
    <WFDialogPresenter> * _dialogPresenter;
    long long  _numberOfDialogsPresented;
    id /* block */  _parameterInputCompletionHandler;
    WFSequentialParameterInputProvider * _parameterInputProvider;
    NSString * _userInterfaceType;
    WFWorkflowReference * _workflow;
    WFWorkflowController * _workflowController;
    NSDate * _workflowStartTime;
}

@property (nonatomic, retain) NSArray *allowedParameterClasses;
@property (nonatomic, readonly) WFDialogAttribution *attribution;
@property (nonatomic, retain) WFAction *currentAction;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <WFDialogPresenter> *dialogPresenter;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long numberOfDialogsPresented;
@property (nonatomic, copy) id /* block */ parameterInputCompletionHandler;
@property (nonatomic, retain) WFSequentialParameterInputProvider *parameterInputProvider;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *userInterfaceType;
@property (nonatomic, retain) WFWorkflowReference *workflow;
@property (nonatomic) WFWorkflowController *workflowController;
@property (nonatomic, retain) NSDate *workflowStartTime;

- (void).cxx_destruct;
- (bool)action:(id)arg1 canProvideInputForParameter:(id)arg2;
- (void)action:(id)arg1 provideInputForParameters:(id)arg2 withDefaultStates:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)actionForAttribution;
- (id)allowedParameterClasses;
- (id)attribution;
- (id)attributionForMode:(unsigned long long)arg1;
- (void)cancel;
- (id)currentAction;
- (id)dialogPresenter;
- (id)dialogTransformer;
- (void)dismissPresentedContentWithCompletionHandler:(id /* block */)arg1;
- (void)handleAlertWithDatePicker:(id)arg1;
- (void)handleAlertWithMultipleButtons:(id)arg1;
- (void)handleAlertWithTextField:(id)arg1;
- (void)handleSimpleAlert:(id)arg1;
- (id)initWithWorkflow:(id)arg1 dialogPresenter:(id)arg2;
- (id)initWithWorkflow:(id)arg1 dialogPresenter:(id)arg2 userInterfaceType:(id)arg3;
- (long long)numberOfDialogsPresented;
- (bool)openURL:(id)arg1 withBundleIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (id /* block */)parameterInputCompletionHandler;
- (id)parameterInputProvider;
- (void)presentAlert:(id)arg1;
- (void)requestActionInterfacePresentationForActionClassName:(id)arg1 classNamesByType:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)sequentialParameterInputProvider:(id)arg1 didAdvanceToParameter:(id)arg2 action:(id)arg3 defaultState:(id)arg4 completion:(id /* block */)arg5;
- (void)sequentialParameterInputProvider:(id)arg1 didFinishWithInputtedStates:(id)arg2;
- (void)sequentialParameterInputProviderDidCancel:(id)arg1;
- (void)setAllowedParameterClasses:(id)arg1;
- (void)setCurrentAction:(id)arg1;
- (void)setDialogPresenter:(id)arg1;
- (void)setNumberOfDialogsPresented:(long long)arg1;
- (void)setParameterInputCompletionHandler:(id /* block */)arg1;
- (void)setParameterInputProvider:(id)arg1;
- (void)setWorkflow:(id)arg1;
- (void)setWorkflowController:(id)arg1;
- (void)setWorkflowStartTime:(id)arg1;
- (bool)shouldNotHandoff;
- (void)showAskParameterDialogForParameter:(id)arg1 action:(id)arg2 defaultState:(id)arg3 completion:(id /* block */)arg4;
- (void)showConfirmInteraction:(id)arg1 prompt:(id)arg2 requireAuthentication:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)showDialogRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)showHandleInteraction:(id)arg1 prompt:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)showPreviewForContentCollection:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)userInterfaceType;
- (bool)usesModalComponentStyleWhenAskingForParameter:(id)arg1;
- (id)workflow;
- (id)workflowController;
- (id)workflowStartTime;
- (void)workflowWillBegin;

@end
