/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MRUNowPlayingViewController : UIViewController <MRUEndpointMetadataControllerObserver, MRULockScreenMonitorDelegate, MRUMediaSuggestionsViewControllerDelegate, MRUNowPlayingQueueHandoffCoordinatorDelegate, MRUNowPlayingTransportControlsViewDelegate, MRUNowPlayingVolumeSliderDelegate, MRURoutingViewControllerDelegate, _MCStateDumpPropertyListTransformable> {
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentEdgeInsets;
    long long  _context;
    <MRUNowPlayingViewControllerDelegate> * _delegate;
    bool  _displayNowPlayingInfoAsSuggestion;
    MediaControlsEndpointController * _endpointController;
    MPVolumeGroupSliderCoordinator * _groupSliderCoordinator;
    <MediaControlsInvalidatable> * _hardwareVolumeControlAssertion;
    long long  _layout;
    MRULockScreenMonitor * _lockscreenMonitor;
    MPMediaControls * _mediaControls;
    MRUEndpointMetadataController * _metadataController;
    bool  _onScreen;
    <MPAVOutputDevicePlaybackDataSource> * _playbackDataSource;
    MRUNowPlayingQueueHandoffCoordinator * _queueHandoffCoordinator;
    long long  _routeControlsPresentation;
    MRURoutingViewController * _routingViewController;
    unsigned long long  _stateHandle;
    MRUVisualStylingProvider * _stylingProvider;
    MRUMediaSuggestionsViewController * _suggestionsViewController;
    bool  _supportsHorizontalLayout;
    MTVisualStylingProvider * _visualStylingProvider;
}

@property (nonatomic, readonly) MRUArtworkView *artworkView;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (nonatomic) long long context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MRUNowPlayingViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool displayNowPlayingInfoAsSuggestion;
@property (nonatomic, readonly) MediaControlsEndpointController *endpointController;
@property (nonatomic, retain) MPVolumeGroupSliderCoordinator *groupSliderCoordinator;
@property (nonatomic, retain) <MediaControlsInvalidatable> *hardwareVolumeControlAssertion;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long layout;
@property (nonatomic, retain) MRULockScreenMonitor *lockscreenMonitor;
@property (nonatomic, retain) MPMediaControls *mediaControls;
@property (nonatomic, readonly) MRUEndpointMetadataController *metadataController;
@property (getter=isOnScreen, nonatomic) bool onScreen;
@property (nonatomic) <MPAVOutputDevicePlaybackDataSource> *playbackDataSource;
@property (nonatomic, retain) MRUNowPlayingQueueHandoffCoordinator *queueHandoffCoordinator;
@property (nonatomic, readonly) long long routeControlsPresentation;
@property (nonatomic, readonly) MRURoutingViewController *routingViewController;
@property (nonatomic) unsigned long long stateHandle;
@property (nonatomic, retain) MRUVisualStylingProvider *stylingProvider;
@property (nonatomic, retain) MRUMediaSuggestionsViewController *suggestionsViewController;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsHorizontalLayout;
@property (nonatomic, copy) NSString *undiscoveredPlaceholderText;
@property (nonatomic, retain) MRUNowPlayingView *view;
@property (nonatomic, retain) MRUNowPlayingView *viewIfLoaded;
@property (nonatomic, retain) MTVisualStylingProvider *visualStylingProvider;

+ (id)coversheetViewController;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (id)_stateDumpObject;
- (id)artworkView;
- (bool)canShowRoutingControls;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (long long)context;
- (id)contextString;
- (void)createGroupSliderCoordinator;
- (void)createLockscreenMonitor;
- (void)createRoutingViewController;
- (void)createSuggestionsViewController;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)destination;
- (void)didSelectHeaderView:(id)arg1;
- (void)didSelectQuickActionButton:(id)arg1;
- (void)didSelectRoutingButton:(id)arg1;
- (bool)displayNowPlayingInfoAsSuggestion;
- (id)endpointController;
- (id)groupSliderCoordinator;
- (id)hardwareVolumeControlAssertion;
- (id)initWithEndpointController:(id)arg1 routeControlsPresentation:(long long)arg2;
- (id)initWithRouteUID:(id)arg1;
- (void)initiateQueueHandoffTansitionWithCoordinator:(id)arg1;
- (bool)isOnScreen;
- (long long)layout;
- (void)loadView;
- (long long)lockScreenInternalRoutePickerOverrideWithDefaultStyle:(long long)arg1;
- (bool)lockScreenPresentsOverrideRoutePicker;
- (id)lockscreenMonitor;
- (void)lockscreenMonitor:(id)arg1 didUpdateDeviceLocked:(bool)arg2;
- (id)mediaControls;
- (void)mediaSuggestionsViewController:(id)arg1 didChangeSuggestions:(id)arg2;
- (void)mediaSuggestionsViewController:(id)arg1 didSelectSuggestion:(id)arg2 completion:(id /* block */)arg3;
- (id)metadataController;
- (void)metadataController:(id)arg1 didLoadNewResponse:(id)arg2;
- (void)metadataController:(id)arg1 didUpdateApplicationIcon:(id)arg2;
- (void)metadataController:(id)arg1 didUpdateShowMediaSuggestions:(bool)arg2;
- (void)metadataControllerDidChangeState:(id)arg1;
- (void)metadataControllerDidUpdateRoutingAvailability:(id)arg1;
- (void)metadataControllerRouteDidUpdate:(id)arg1;
- (bool)metadataControllerShouldAutomaticallyUpdateReponse:(id)arg1;
- (void)nowPlayingQueueHandoffCoordinatorDidBeginTransition:(id)arg1;
- (void)nowPlayingQueueHandoffCoordinatorDidCompleteHandoff:(id)arg1;
- (void)nowPlayingQueueHandoffCoordinatorDidEndTransition:(id)arg1;
- (void)nowPlayingQueueHandoffCoordinatorSetupTransition:(id)arg1;
- (id)playbackDataSource;
- (void)presentExternalRoutingControlsFromSourceView:(id)arg1;
- (id)queueHandoffCoordinator;
- (long long)routeControlsPresentation;
- (id)routingViewController;
- (void)routingViewController:(id)arg1 didSelectRoutingViewItem:(id)arg2;
- (void)routingViewControllerDidUpdateItems:(id)arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setContext:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayNowPlayingInfoAsSuggestion:(bool)arg1;
- (void)setGroupSliderCoordinator:(id)arg1;
- (void)setHardwareVolumeControlAssertion:(id)arg1;
- (void)setLayout:(long long)arg1;
- (void)setLockscreenMonitor:(id)arg1;
- (void)setMediaControls:(id)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setPlaybackDataSource:(id)arg1;
- (void)setQueueHandoffCoordinator:(id)arg1;
- (void)setStateHandle:(unsigned long long)arg1;
- (void)setStylingProvider:(id)arg1;
- (void)setSuggestionsViewController:(id)arg1;
- (void)setSupportsHorizontalLayout:(bool)arg1;
- (void)setUndiscoveredPlaceholderText:(id)arg1;
- (void)setVisualStylingProvider:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldEnableSyncingForSlider:(id)arg1;
- (bool)shouldShowMediaSuggestions;
- (bool)slider:(id)arg1 shouldCancelSnapWithTouch:(id)arg2;
- (bool)slider:(id)arg1 syncStateWillChangeFromState:(long long)arg2 toState:(long long)arg3;
- (unsigned long long)stateHandle;
- (id)stylingProvider;
- (id)suggestionContext;
- (id)suggestionsViewController;
- (bool)supportsHorizontalLayout;
- (void)trackStartedShowingMediaSuggestions;
- (void)trackSuggestionSelected:(id)arg1 atIndex:(unsigned long long)arg2 error:(id)arg3;
- (void)trackSuggestionsDisplayed:(id)arg1;
- (void)transportControlsView:(id)arg1 presentActionSheetForItem:(id)arg2 sourceView:(id)arg3;
- (void)transportControlsView:(id)arg1 presentLanguageOptionsFromSourceView:(id)arg2;
- (void)transportControlsView:(id)arg1 presentTVRemoteFromSourceView:(id)arg2;
- (id)undiscoveredPlaceholderText;
- (void)updateContentAnimated:(id /* block */)arg1;
- (void)updateDiscoveryMode;
- (void)updateHardwareVolumeButtons;
- (void)updateLayout;
- (void)updateResponse;
- (void)updateRouteLabel;
- (void)updateRoutingButton;
- (void)updateRoutingViewControllerContentEdgeInsets;
- (void)updateSuggestionContext;
- (void)updateSuggestions;
- (void)updateVisibility;
- (void)updateVolume;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (id)visualStylingProvider;

@end
