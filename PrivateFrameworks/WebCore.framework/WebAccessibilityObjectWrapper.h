/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebAccessibilityObjectWrapper : WebAccessibilityObjectWrapperBase {
    unsigned long long  m_accessibilityTraitsFromAncestor;
    int  m_isAccessibilityElement;
}

- (bool)_accessibilityActivate;
- (id)_accessibilityArticleAncestor;
- (struct CGPoint { double x1; double x2; })_accessibilityConvertPointToViewSpace:(struct CGPoint { double x1; double x2; })arg1;
- (id)_accessibilityDescriptionListAncestor;
- (id)_accessibilityFieldsetAncestor;
- (id)_accessibilityFrameAncestor;
- (bool)_accessibilityHasTouchEventListener;
- (bool)_accessibilityIsInTableCell;
- (bool)_accessibilityIsLandmarkRole:(int)arg1;
- (bool)_accessibilityIsStrongPasswordField;
- (id)_accessibilityLandmarkAncestor;
- (id)_accessibilityListAncestor;
- (double)_accessibilityMaxValue;
- (double)_accessibilityMinValue;
- (id)_accessibilityNextElementsWithCount:(unsigned int)arg1;
- (id)_accessibilityParentForSubview:(id)arg1;
- (struct CGPath { }*)_accessibilityPath;
- (id)_accessibilityPreviousElementsWithCount:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityRelativeFrame;
- (id)_accessibilityResolvedEditingStyles;
- (struct CGPoint { double x1; double x2; })_accessibilityScrollPosition;
- (struct CGSize { double x1; double x2; })_accessibilityScrollSize;
- (bool)_accessibilityScrollToVisible;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityScrollVisibleRect;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_accessibilitySelectedTextRange;
- (void)_accessibilitySetFocus:(bool)arg1;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_accessibilitySetValue:(id)arg1;
- (id)_accessibilityTableAncestor;
- (unsigned long long)_accessibilityTextEntryTraits;
- (unsigned long long)_accessibilityTraitsFromAncestors;
- (id)_accessibilityTreeAncestor;
- (bool)_accessibilityValueIsAutofilled;
- (id)_accessibilityWebDocumentView;
- (id)_accessibilityWebRoleAsString;
- (bool)_addAccessibilityObject:(struct AccessibilityObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; unsigned long long x4; struct Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>> {} *x_5_1_1; unsigned int x_5_1_2; unsigned int x_5_1_3; } x5; bool x6; int x7; int x8; struct AccessibilityIsIgnoredFromParentData { struct AXCoreObject {} *x_9_1_1; bool x_9_1_2; bool x_9_1_3; bool x_9_1_4; } x9; bool x10; bool x11; }*)arg1 toTextMarkerArray:(id)arg2;
- (unsigned long long)_axAdjustableTrait;
- (unsigned long long)_axButtonTrait;
- (unsigned long long)_axContainedByFieldsetTrait;
- (unsigned long long)_axContainedByLandmarkTrait;
- (unsigned long long)_axContainedByListTrait;
- (unsigned long long)_axContainedByTableTrait;
- (unsigned long long)_axHasTextCursorTrait;
- (unsigned long long)_axHeaderTrait;
- (unsigned long long)_axImageTrait;
- (unsigned long long)_axLinkTrait;
- (unsigned long long)_axMenuItemTrait;
- (unsigned long long)_axNotEnabledTrait;
- (unsigned long long)_axPopupButtonTrait;
- (unsigned long long)_axRadioButtonTrait;
- (unsigned long long)_axSearchFieldTrait;
- (unsigned long long)_axSecureTextFieldTrait;
- (unsigned long long)_axSelectedTrait;
- (unsigned long long)_axStaticTextTrait;
- (unsigned long long)_axTabButtonTrait;
- (unsigned long long)_axTextAreaTrait;
- (unsigned long long)_axTextEntryTrait;
- (unsigned long long)_axTextOperationsAvailableTrait;
- (unsigned long long)_axToggleTrait;
- (unsigned long long)_axUpdatesFrequentlyTrait;
- (unsigned long long)_axVisitedTrait;
- (unsigned long long)_axWebContentTrait;
- (struct Optional<WebCore::SimpleRange> { bool x1; union storage_t<WebCore::SimpleRange> { unsigned char x_2_1_1; struct SimpleRange { struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_1_3_1; unsigned int x_1_3_2; } x_2_2_1; struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_2_1_2; } x2; })_convertToDOMRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_convertToNSRange:(const struct SimpleRange { struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_2_1; } x_1_1_1; unsigned int x_1_1_2; } x1; struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_2_1; } x_2_1_1; unsigned int x_2_1_2; } x2; }*)arg1;
- (bool)_prepareAccessibilityCall;
- (id)_stringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 attributed:(bool)arg2;
- (id)_stringFromStartMarker:(id)arg1 toEndMarker:(id)arg2 attributed:(bool)arg3;
- (unsigned long long)accessibilityARIAColumnCount;
- (unsigned long long)accessibilityARIAColumnIndex;
- (bool)accessibilityARIAIsBusy;
- (bool)accessibilityARIALiveRegionIsAtomic;
- (id)accessibilityARIALiveRegionStatus;
- (id)accessibilityARIARelevantStatus;
- (unsigned long long)accessibilityARIARowCount;
- (unsigned long long)accessibilityARIARowIndex;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (unsigned long long)accessibilityBlockquoteLevel;
- (id)accessibilityBrailleLabel;
- (id)accessibilityBrailleRoleDescription;
- (bool)accessibilityCanFuzzyHitTest;
- (bool)accessibilityCanSetValue;
- (struct CGPoint { double x1; double x2; })accessibilityClickPoint;
- (id)accessibilityColorStringValue;
- (unsigned long long)accessibilityColumnCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityColumnRange;
- (id)accessibilityContainer;
- (id)accessibilityCurrentState;
- (id)accessibilityDOMIdentifier;
- (id)accessibilityDatetimeValue;
- (void)accessibilityDecreaseSelection:(unsigned char)arg1;
- (void)accessibilityDecrement;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
- (id)accessibilityElementForRow:(long long)arg1 andColumn:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityElementRect;
- (id)accessibilityExpandedTextValue;
- (id)accessibilityFindMatchingObjects:(id)arg1;
- (id)accessibilityFlowToElements;
- (id)accessibilityFocusedUIElement;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (bool)accessibilityHasPopup;
- (id)accessibilityHeaderElements;
- (id)accessibilityHint;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)accessibilityIdentifier;
- (void)accessibilityIncreaseSelection:(unsigned char)arg1;
- (void)accessibilityIncrement;
- (bool)accessibilityInsertText:(id)arg1;
- (id)accessibilityInvalidStatus;
- (bool)accessibilityIsAttachmentElement;
- (bool)accessibilityIsComboBox;
- (bool)accessibilityIsDialog;
- (bool)accessibilityIsExpanded;
- (bool)accessibilityIsInDescriptionListDefinition;
- (bool)accessibilityIsInDescriptionListTerm;
- (bool)accessibilityIsIndeterminate;
- (bool)accessibilityIsMathTopObject;
- (bool)accessibilityIsMediaMuted;
- (bool)accessibilityIsMediaPlaying;
- (bool)accessibilityIsPressed;
- (bool)accessibilityIsShowingValidationMessage;
- (bool)accessibilityIsWebInteractiveVideo;
- (id)accessibilityLabel;
- (id)accessibilityLanguage;
- (id)accessibilityLinkRelationshipType;
- (id)accessibilityLinkedElement;
- (id)accessibilityMathBaseObject;
- (id)accessibilityMathDenominatorObject;
- (id)accessibilityMathFencedCloseString;
- (id)accessibilityMathFencedOpenString;
- (long long)accessibilityMathLineThickness;
- (id)accessibilityMathNumeratorObject;
- (id)accessibilityMathOverObject;
- (id)accessibilityMathPostscripts;
- (id)accessibilityMathPrescripts;
- (id)accessibilityMathRadicandObject;
- (id)accessibilityMathRootIndexObject;
- (id)accessibilityMathSubscriptObject;
- (id)accessibilityMathSuperscriptObject;
- (id)accessibilityMathType;
- (id)accessibilityMathUnderObject;
- (void)accessibilityModifySelection:(unsigned char)arg1 increase:(bool)arg2;
- (void)accessibilityMoveSelectionToMarker:(id)arg1;
- (id)accessibilityObjectForTextMarker:(id)arg1;
- (bool)accessibilityPerformEscape;
- (id)accessibilityPlaceholderValue;
- (id)accessibilityPlatformMathSubscriptKey;
- (id)accessibilityPlatformMathSuperscriptKey;
- (id)accessibilityPopupValue;
- (id)accessibilityPostProcessHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (bool)accessibilityReplaceRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withText:(id)arg2;
- (bool)accessibilityRequired;
- (id)accessibilityRoleDescription;
- (unsigned long long)accessibilityRowCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRowRange;
- (bool)accessibilityScroll:(long long)arg1;
- (id)accessibilitySortDirection;
- (id)accessibilitySpeechHint;
- (bool)accessibilitySupportsARIAExpanded;
- (bool)accessibilitySupportsARIAPressed;
- (id)accessibilityTextualContext;
- (id)accessibilityTitleElement;
- (void)accessibilityToggleMuteForMedia;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityURL;
- (id)accessibilityValue;
- (void)accessibilityVideoEnterFullscreen;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityVisibleContentRect;
- (id)arrayOfTextForTextMarkers:(id)arg1 attributed:(bool)arg2;
- (id)attachmentView;
- (id)attributedStringForElement;
- (id)attributedStringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)containsUnnaturallySegmentedChildren;
- (void)dealloc;
- (id)description;
- (void)detach;
- (struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)detailParentForObject:(struct AccessibilityObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; unsigned long long x4; struct Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>> {} *x_5_1_1; unsigned int x_5_1_2; unsigned int x_5_1_3; } x5; bool x6; int x7; int x8; struct AccessibilityIsIgnoredFromParentData { struct AXCoreObject {} *x_9_1_1; bool x_9_1_2; bool x_9_1_3; bool x_9_1_4; } x9; bool x10; bool x11; }*)arg1;
- (struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)detailParentForSummaryObject:(struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)arg1;
- (bool)determineIsAccessibilityElement;
- (void)disableAttributeCaching;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })elementTextRange;
- (id)elementsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)enableAttributeCaching;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForTextMarkers:(id)arg1;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)initWithAccessibilityObject:(struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)arg1;
- (id)interactiveVideoDescription;
- (bool)isAccessibilityElement;
- (bool)isAttachment;
- (bool)isSVGGroupElement;
- (long long)lengthForTextMarkers:(id)arg1;
- (id)lineEndMarkerForMarker:(id)arg1;
- (id)lineMarkersForMarker:(id)arg1;
- (id)lineStartMarkerForMarker:(id)arg1;
- (id)misspellingTextMarkerRange:(id)arg1 forward:(bool)arg2;
- (id)nextMarkerForCharacterOffset:(struct CharacterOffset { struct Node {} *x1; int x2; int x3; int x4; }*)arg1;
- (id)nextMarkerForMarker:(id)arg1;
- (long long)positionForTextMarker:(id)arg1;
- (void)postChildrenChangedNotification;
- (void)postCurrentStateChangedNotification;
- (void)postExpandedChangedNotification;
- (void)postFocusChangeNotification;
- (void)postInvalidStatusChangedNotification;
- (void)postLayoutChangeNotification;
- (void)postLiveRegionChangeNotification;
- (void)postLiveRegionCreatedNotification;
- (void)postLoadCompleteNotification;
- (void)postNotification:(id)arg1;
- (void)postScrollStatusChangeNotification;
- (void)postSelectedTextChangeNotification;
- (void)postValueChangedNotification;
- (id)previousMarkerForCharacterOffset:(struct CharacterOffset { struct Node {} *x1; int x2; int x3; int x4; }*)arg1;
- (id)previousMarkerForMarker:(id)arg1;
- (struct Optional<WebCore::SimpleRange> { bool x1; union storage_t<WebCore::SimpleRange> { unsigned char x_2_1_1; struct SimpleRange { struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_1_3_1; unsigned int x_1_3_2; } x_2_2_1; struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_2_1_2; } x2; })rangeForTextMarkers:(id)arg1;
- (struct Optional<WebCore::SimpleRange> { bool x1; union storage_t<WebCore::SimpleRange> { unsigned char x_2_1_1; struct SimpleRange { struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_1_3_1; unsigned int x_1_3_2; } x_2_2_1; struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_2_1_2; } x2; })rangeFromMarkers:(id)arg1 withText:(id)arg2;
- (id)selectedTextMarker;
- (id)selectionRangeString;
- (id)startOrEndTextMarkerForTextMarkers:(id)arg1 isStart:(bool)arg2;
- (id)stringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)stringForTextMarkers:(id)arg1;
- (bool)stringValueShouldBeUsedInLabel;
- (struct AccessibilityTableCell { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; unsigned long long x4; struct Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>> {} *x_5_1_1; unsigned int x_5_1_2; unsigned int x_5_1_3; } x5; bool x6; int x7; int x8; struct AccessibilityIsIgnoredFromParentData { struct AXCoreObject {} *x_9_1_1; bool x_9_1_2; bool x_9_1_3; bool x_9_1_4; } x9; bool x10; bool x11; int x12; int x13; struct Node {} *x14; struct WeakPtrFactory<WebCore::AccessibilityRenderObject, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { struct WeakPtrImpl<WTF::EmptyCounter> {} *x_1_2_1; } x_15_1_1; } x15; }*)tableCellParent;
- (struct AccessibilityTable { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; unsigned long long x4; struct Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::AXCoreObject, WTF::RawPtrTraits<WebCore::AXCoreObject>, WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>> {} *x_5_1_1; unsigned int x_5_1_2; unsigned int x_5_1_3; } x5; bool x6; int x7; int x8; struct AccessibilityIsIgnoredFromParentData { struct AXCoreObject {} *x_9_1_1; bool x_9_1_2; bool x_9_1_3; bool x_9_1_4; } x9; bool x10; bool x11; int x12; int x13; struct Node {} *x14; struct WeakPtrFactory<WebCore::AccessibilityRenderObject, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::RawPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<WTF::EmptyCounter>>> { struct WeakPtrImpl<WTF::EmptyCounter> {} *x_1_2_1; } x_15_1_1; } x15; }*)tableParent;
- (id)textMarkerForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)textMarkerForPosition:(long long)arg1;
- (id)textMarkerRange;
- (id)textMarkerRangeForMarkers:(id)arg1;
- (id)textMarkerRangeForSelection;
- (id)textMarkerRangeFromMarkers:(id)arg1 withText:(id)arg2;
- (id)textMarkersForRange:(const struct Optional<WebCore::SimpleRange> { bool x1; union storage_t<WebCore::SimpleRange> { unsigned char x_2_1_1; struct SimpleRange { struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_1_3_1; unsigned int x_1_3_2; } x_2_2_1; struct BoundaryPoint { struct Ref<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>> { struct Node {} *x_1_4_1; } x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_2_1_2; } x2; }*)arg1;
- (id)textRectsFromMarkers:(id)arg1 withText:(id)arg2;
- (struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)treeItemParentForObject:(struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_3_1_1; } x3; }*)arg1;

@end
