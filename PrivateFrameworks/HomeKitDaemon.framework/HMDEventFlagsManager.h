/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDEventFlagsManager : HMFObject {
    NSMutableDictionary * _definedEventPeriods;
    NSMutableDictionary * _eventFlags;
    NSDate * _lastSaveTime;
    HMFUnfairLock * _lock;
    HMDPersistentStore * _persistentStore;
    unsigned long long  _saveCount;
    bool  _saving;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) NSMutableDictionary *definedEventPeriods;
@property (nonatomic, retain) NSMutableDictionary *eventFlags;
@property (nonatomic, retain) NSDate *lastSaveTime;
@property (readonly) HMDPersistentStore *persistentStore;
@property (nonatomic) unsigned long long saveCount;
@property (getter=isSaving, nonatomic) bool saving;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)sharedEventFlagsManager;

- (void).cxx_destruct;
- (void)_defineEventPeriod:(double)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;
- (id)_fetchAllDefinedEventPeriods;
- (id)_fetchAllEventFlags;
- (unsigned long long)_fetchEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)_fetchEventFlagsForRequestGroup:(id)arg1;
- (void)_performOnUpdate;
- (void)_resetEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)_save;
- (void)_setEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)_shiftEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)archiveEventFlagsWithEventFlagsSnapshot:(id)arg1 definedEventPeriodsSnapshot:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)defineEventPeriod:(double)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;
- (void)defineEventPeriod:(double)arg1 forEventNames:(id)arg2 requestGroup:(id)arg3;
- (id)definedEventPeriods;
- (id)eventFlags;
- (id)fetchAllEventFlags;
- (id)fetchAllEventPeriodsDefinedForEventFlags;
- (unsigned long long)fetchEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)fetchEventFlagsForRequestGroup:(id)arg1;
- (void)forceSave;
- (id)init;
- (id)initWithPersistentStore:(id)arg1;
- (bool)isSaving;
- (id)lastSaveTime;
- (void)logDiskWriteState;
- (id)persistentStore;
- (void)resetEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)resetEventFlagsForRequestGroup:(id)arg1;
- (unsigned long long)saveCount;
- (void)setDefinedEventPeriods:(id)arg1;
- (void)setEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)setEventFlags:(id)arg1;
- (void)setEventFlagsForEventNames:(id)arg1 requestGroup:(id)arg2;
- (void)setLastSaveTime:(id)arg1;
- (void)setSaveCount:(unsigned long long)arg1;
- (void)setSaving:(bool)arg1;
- (void)shiftEventFlagForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)shiftEventFlagsForRequestGroup:(id)arg1;
- (id)unarchivedEventFlags;
- (id)workQueue;

@end
