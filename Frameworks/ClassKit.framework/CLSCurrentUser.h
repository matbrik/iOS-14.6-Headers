/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ClassKit.framework/ClassKit
 */

@interface CLSCurrentUser : NSObject <NSCopying, NSSecureCoding> {
    long long  _catalogEnvironment;
    NSString * _clientPersonaUniqueString;
    int  _devMode;
    int  _handoutServiceAuthenticationState;
    bool  _hasDataSeparatedAccount;
    bool  _hasEDUAccount;
    bool  _hasMatchingPersona;
    bool  _hasUbiquityEnabled;
    NSDictionary * _locationIDsByAXMRoleType;
    NSString * _organizationName;
    bool  _organizationProgressTrackingAllowed;
    CLSPerson * _person;
    NSString * _personaUniqueString;
    unsigned long long  _roles;
    int  _rosterServiceAuthenticationState;
}

@property (nonatomic) long long catalogEnvironment;
@property (nonatomic, copy) NSString *clientPersonaUniqueString;
@property (nonatomic) int devMode;
@property (nonatomic) int handoutServiceAuthenticationState;
@property (nonatomic) bool hasDataSeparatedAccount;
@property (nonatomic) bool hasEDUAccount;
@property (nonatomic) bool hasMatchingPersona;
@property (nonatomic) bool hasUbiquityEnabled;
@property (nonatomic, readonly) bool isAdministrator;
@property (nonatomic, readonly) bool isInstructor;
@property (nonatomic, readonly) bool isStudent;
@property (nonatomic, retain) NSDictionary *locationIDsByAXMRoleType;
@property (nonatomic, copy) NSString *organizationName;
@property (nonatomic) bool organizationProgressTrackingAllowed;
@property (nonatomic, retain) CLSPerson *person;
@property (nonatomic, copy) NSString *personaUniqueString;
@property (nonatomic) unsigned long long roles;
@property (nonatomic) int rosterServiceAuthenticationState;

+ (id)magicValue;
+ (bool)supportsSecureCoding;
+ (unsigned long long)userRolesFromUserLocationIDsByAXMRoleType:(id)arg1;

- (void).cxx_destruct;
- (bool)_hasRole:(unsigned long long)arg1;
- (id)_init;
- (unsigned long long)_useRoles;
- (long long)catalogEnvironment;
- (id)clientPersonaUniqueString;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (int)devMode;
- (void)encodeWithCoder:(id)arg1;
- (int)handoutServiceAuthenticationState;
- (bool)hasDataSeparatedAccount;
- (bool)hasEDUAccount;
- (bool)hasMatchingPersona;
- (bool)hasRole:(unsigned long long)arg1;
- (bool)hasUbiquityEnabled;
- (id)initWithCoder:(id)arg1;
- (bool)isAdministrator;
- (bool)isInstructor;
- (bool)isStudent;
- (id)locationIDsByAXMRoleType;
- (id)organizationName;
- (bool)organizationProgressTrackingAllowed;
- (id)person;
- (id)personaUniqueString;
- (unsigned long long)roles;
- (int)rosterServiceAuthenticationState;
- (void)setCatalogEnvironment:(long long)arg1;
- (void)setClientPersonaUniqueString:(id)arg1;
- (void)setDevMode:(int)arg1;
- (void)setHandoutServiceAuthenticationState:(int)arg1;
- (void)setHasDataSeparatedAccount:(bool)arg1;
- (void)setHasEDUAccount:(bool)arg1;
- (void)setHasMatchingPersona:(bool)arg1;
- (void)setHasUbiquityEnabled:(bool)arg1;
- (void)setLocationIDsByAXMRoleType:(id)arg1;
- (void)setOrganizationName:(id)arg1;
- (void)setOrganizationProgressTrackingAllowed:(bool)arg1;
- (void)setPerson:(id)arg1;
- (void)setPersonaUniqueString:(id)arg1;
- (void)setRoles:(unsigned long long)arg1;
- (void)setRosterServiceAuthenticationState:(int)arg1;

@end
