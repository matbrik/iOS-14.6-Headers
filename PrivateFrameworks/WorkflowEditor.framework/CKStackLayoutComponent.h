/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowEditor.framework/WorkflowEditor
 */

@interface CKStackLayoutComponent : CKComponent {
    struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> { 
        struct CKStackLayoutComponentChild {} *__begin_; 
        struct CKStackLayoutComponentChild {} *__end_; 
        struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> { 
            struct CKStackLayoutComponentChild {} *__value_; 
        } __end_cap_; 
    }  _children;
    struct CKStackLayoutComponentStyle { 
        unsigned long long direction; 
        double spacing; 
        unsigned long long justifyContent; 
        unsigned long long alignItems; 
    }  _style;
}

+ (id)newRTLCompatibleWithView:(const struct CKComponentViewConfiguration { struct shared_ptr<const CKComponentViewConfiguration::Repr> { struct Repr {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; }*)arg1 size:(const struct CKComponentSize { struct CKRelativeDimension { int x_1_1_1; double x_1_1_2; } x1; struct CKRelativeDimension { int x_2_1_1; double x_2_1_2; } x2; struct CKRelativeDimension { int x_3_1_1; double x_3_1_2; } x3; struct CKRelativeDimension { int x_4_1_1; double x_4_1_2; } x4; struct CKRelativeDimension { int x_5_1_1; double x_5_1_2; } x5; struct CKRelativeDimension { int x_6_1_1; double x_6_1_2; } x6; }*)arg2 style:(const struct CKStackLayoutComponentStyle { unsigned long long x1; double x2; unsigned long long x3; unsigned long long x4; }*)arg3 children:(const struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> { struct CKStackLayoutComponentChild {} *x1; struct CKStackLayoutComponentChild {} *x2; struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> { struct CKStackLayoutComponentChild {} *x_3_1_1; } x3; }*)arg4;
+ (id)newWithView:(const struct CKComponentViewConfiguration { struct shared_ptr<const CKComponentViewConfiguration::Repr> { struct Repr {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; }*)arg1 size:(const struct CKComponentSize { struct CKRelativeDimension { int x_1_1_1; double x_1_1_2; } x1; struct CKRelativeDimension { int x_2_1_1; double x_2_1_2; } x2; struct CKRelativeDimension { int x_3_1_1; double x_3_1_2; } x3; struct CKRelativeDimension { int x_4_1_1; double x_4_1_2; } x4; struct CKRelativeDimension { int x_5_1_1; double x_5_1_2; } x5; struct CKRelativeDimension { int x_6_1_1; double x_6_1_2; } x6; }*)arg2;
+ (id)newWithView:(const struct CKComponentViewConfiguration { struct shared_ptr<const CKComponentViewConfiguration::Repr> { struct Repr {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; }*)arg1 size:(const struct CKComponentSize { struct CKRelativeDimension { int x_1_1_1; double x_1_1_2; } x1; struct CKRelativeDimension { int x_2_1_1; double x_2_1_2; } x2; struct CKRelativeDimension { int x_3_1_1; double x_3_1_2; } x3; struct CKRelativeDimension { int x_4_1_1; double x_4_1_2; } x4; struct CKRelativeDimension { int x_5_1_1; double x_5_1_2; } x5; struct CKRelativeDimension { int x_6_1_1; double x_6_1_2; } x6; }*)arg2 style:(const struct CKStackLayoutComponentStyle { unsigned long long x1; double x2; unsigned long long x3; unsigned long long x4; }*)arg3 children:(const struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> { struct CKStackLayoutComponentChild {} *x1; struct CKStackLayoutComponentChild {} *x2; struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> { struct CKStackLayoutComponentChild {} *x_3_1_1; } x3; }*)arg4;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CKComponentLayout { id x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> { struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; })computeLayoutThatFits:(struct CKSizeRange { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

@end
