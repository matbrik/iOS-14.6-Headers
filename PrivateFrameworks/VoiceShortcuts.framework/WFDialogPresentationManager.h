/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts
 */

@interface WFDialogPresentationManager : NSObject <NSXPCListenerDelegate, WFDialogAlertPresenterDelegate, WFDialogXPCHostProtocol, WFScreenOnObserverDelegate> {
    NSXPCConnection * _activeConnection;
    id /* block */  _completePersistentModeBlockAwaitingRemoteAlertReactivation;
    id /* block */  _contentDismissalCompletionHandler;
    <WFDialogPresentationManagerDelegate> * _delegate;
    NSString * _dismissalReason;
    NSXPCListener * _listener;
    WFDialogNotificationManager * _notificationManager;
    NSMutableArray * _otherPresentationQueue;
    NSMutableArray * _persistentPresentationQueue;
    WFDialogAttribution * _persistentRunningAttribution;
    WFWorkflowRunningContext * _persistentRunningContext;
    WFPresentedDialog * _presentedDialog;
    NSObject<OS_dispatch_queue> * _queue;
    <WFDialogAlertPresenter> * _remoteAlertPresenter;
    WFScreenOnObserver * _screenOnObserver;
}

@property (nonatomic, retain) NSXPCConnection *activeConnection;
@property (nonatomic, copy) id /* block */ completePersistentModeBlockAwaitingRemoteAlertReactivation;
@property (nonatomic, copy) id /* block */ contentDismissalCompletionHandler;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WFDialogPresentationManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *dismissalReason;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSXPCListener *listener;
@property (nonatomic, readonly) WFDialogNotificationManager *notificationManager;
@property (nonatomic, readonly) NSMutableArray *otherPresentationQueue;
@property (nonatomic, readonly) NSMutableArray *persistentPresentationQueue;
@property (nonatomic, retain) WFDialogAttribution *persistentRunningAttribution;
@property (nonatomic, retain) WFWorkflowRunningContext *persistentRunningContext;
@property (nonatomic, retain) WFPresentedDialog *presentedDialog;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) <WFDialogAlertPresenter> *remoteAlertPresenter;
@property (nonatomic, readonly) WFScreenOnObserver *screenOnObserver;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WFUserNotificationManager *userNotificationManager;

- (void).cxx_destruct;
- (void)activateRemoteAlert;
- (void)activateRemoteAlertTiedToBundleIdentifier:(id)arg1;
- (id)activeConnection;
- (void)beginConnection;
- (void)beginPersistentModeWithRunningContext:(id)arg1 attribution:(id)arg2;
- (id /* block */)completePersistentModeBlockAwaitingRemoteAlertReactivation;
- (void)completePersistentModeWithSuccess:(bool)arg1 completion:(id /* block */)arg2;
- (id /* block */)contentDismissalCompletionHandler;
- (bool)contextAllowsPostingDialogNotifications:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)dialogAlertPresenterDidDeactivateAlert:(id)arg1;
- (void)dialogAlertPresenterDidInvalidateAlert:(id)arg1;
- (void)dismissPersistentChromeInDialog:(id)arg1 success:(bool)arg2 customAttribution:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)dismissPresentedContentWithCompletionHandler:(id /* block */)arg1;
- (id)dismissalReason;
- (bool)hasPersistentState;
- (id)initWithNotificationManager:(id)arg1 dialogAlertPresenter:(id)arg2 screenOnObserver:(id)arg3;
- (id)initWithUserNotificationManager:(id)arg1;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)logFinishDialogPresentationWithPresentedDialog:(id)arg1;
- (void)logFinishDialogPresentationWithRequest:(id)arg1 presentationMode:(unsigned long long)arg2 automationType:(id)arg3;
- (void)logStartDialogPresentationWithRequest:(id)arg1 presentationMode:(unsigned long long)arg2;
- (id)notificationManager;
- (id)otherPresentationQueue;
- (id)persistentPresentationQueue;
- (id)persistentRunningAttribution;
- (id)persistentRunningContext;
- (void)postNotificationWithRequest:(id)arg1 presentationMode:(unsigned long long)arg2 context:(id)arg3;
- (id)presentedDialog;
- (id)queue;
- (void)queue_clearPersistentModeStateIfNecessary;
- (id)queue_connectedDialog;
- (void)queue_connectedDialogDidDisconnect;
- (void)queue_deactivateRemoteAlertAndInvalidateConnection;
- (bool)queue_hasMoreDialogsToPresent;
- (void)queue_presentNextDialog;
- (id)remoteAlertPresenter;
- (void)removeStaleNotifications;
- (void)requestDismissalWithReason:(id)arg1;
- (id)screenOnObserver;
- (void)screenOnStateDidChange:(id)arg1;
- (void)setActiveConnection:(id)arg1;
- (void)setCompletePersistentModeBlockAwaitingRemoteAlertReactivation:(id /* block */)arg1;
- (void)setContentDismissalCompletionHandler:(id /* block */)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissalReason:(id)arg1;
- (void)setPersistentRunningAttribution:(id)arg1;
- (void)setPersistentRunningContext:(id)arg1;
- (void)setPresentedDialog:(id)arg1;
- (void)showDialogRequest:(id)arg1 fromWorkflowWithPresentationMode:(unsigned long long)arg2 runningContext:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)trackDialogEventWithKey:(id)arg1 request:(id)arg2 presentationMode:(unsigned long long)arg3 automationType:(id)arg4;
- (void)trackSuspendShortcutWithPresentedDialog:(id)arg1;
- (id)userNotificationManager;
- (id)xpcListenerEndpointForDialogAlertPresenter:(id)arg1;

@end
