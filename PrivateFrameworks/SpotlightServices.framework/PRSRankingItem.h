/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpotlightServices.framework/SpotlightServices
 */

@interface PRSRankingItem : NSObject <SSDataCollectible> {
    PRSL2FeatureVector * _L2FeatureVector;
    struct { long long x1; unsigned long long x2[2]; /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x3; void*x4; void *x5[0]; } * _attributes;
    unsigned int  _bundleIDType;
    double  _closestUpComingDate;
    NSString * _contentType;
    NSString * _displayNameInitials;
    bool  _displayNameInitialsFirstWordAndMoreMatchOnly;
    bool  _displayNameInitialsPrefixMatchOnly;
    bool  _eligibleForDemotion;
    NSArray * _emailAddresses;
    NSString * _exactMatchedKeyword;
    float  _feedbackScore;
    NSString * _firstMatchedAltName;
    bool  _hasPolicyMultipleTermsPhraseMatch;
    bool  _hasShortCut;
    NSString * _identifier;
    unsigned long long  _importantPropertiesPrefixMatched;
    unsigned long long  _importantPropertiesWordMatched;
    /* Warning: Unrecognized filer type: 'T' using 'void*' */ void* _indexScore;
    /* Warning: Unrecognized filer type: 'T' using 'void*' */ void* _inputToModelScore;
    bool  _isBundleDemotedForBullseyeCommittedSearch;
    bool  _isInternal;
    bool  _isKeywordMatch;
    bool  _isNotExecutable;
    bool  _isPrepared;
    bool  _isSafariTopHit;
    NSData * _localSuggestionsData;
    bool  _matchedQueryTerms;
    NSMutableArray * _matchedRecipients;
    NSMutableArray * _matchedSenders;
    NSMutableArray * _matchedVipSenders;
    double  _mostRecentUsedDate;
    float  _rawScore;
    bool  _recentForAboveThresholdTopHit;
    bool  _recentForTopHit;
    float  _score;
    NSString * _sectionBundleIdentifier;
    NSData * _serverFeaturesJSON;
    NSData * _serverSuggestionsData;
    bool  _shouldHideUnderShowMore;
    bool  _shouldHideUnderShowMoreIfNotTophit;
    PRSRankingSpanCalculator * _spanCalculator;
    double  _suggestionScore;
    int  _topHitReason;
    bool  _vendorNameIsDisplayNamePrefix;
    float  _withinBundleScore;
    bool  _wordMatchedKeyword;
}

@property (nonatomic, retain) PRSL2FeatureVector *L2FeatureVector;
@property (nonatomic) struct { long long x1; unsigned long long x2[2]; /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x3; void*x4; void *x5[0]; }*attributes;
@property (nonatomic) double closestUpComingDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *displayNameInitials;
@property (nonatomic) bool displayNameInitialsFirstWordAndMoreMatchOnly;
@property (nonatomic) bool displayNameInitialsPrefixMatchOnly;
@property (nonatomic) bool eligibleForDemotion;
@property (nonatomic, retain) NSString *exactMatchedKeyword;
@property (nonatomic) float feedbackScore;
@property (nonatomic, retain) NSString *firstMatchedAltName;
@property (nonatomic) bool hasPolicyMultipleTermsPhraseMatch;
@property (nonatomic) bool hasShortCut;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, readonly) NSDate *interestingDate;
@property (nonatomic) bool isBundleDemotedForBullseyeCommittedSearch;
@property (nonatomic) bool isKeywordMatch;
@property (nonatomic) bool isNotExecutable;
@property (nonatomic) bool isSafariTopHit;
@property (nonatomic, retain) NSData *localSuggestionsData;
@property (nonatomic) bool matchedQueryTerms;
@property (nonatomic) double mostRecentUsedDate;
@property (nonatomic) float rawScore;
@property (nonatomic) bool recentForAboveThresholdTopHit;
@property (nonatomic) bool recentForTopHit;
@property (nonatomic) float score;
@property (nonatomic, retain) NSString *sectionBundleIdentifier;
@property (nonatomic, retain) NSData *serverFeaturesJSON;
@property (nonatomic, retain) NSData *serverSuggestionsData;
@property (nonatomic) bool shouldHideUnderShowMore;
@property (nonatomic) bool shouldHideUnderShowMoreIfNotTophit;
@property (nonatomic) double suggestionScore;
@property (readonly) Class superclass;
@property (nonatomic) /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*test_indexScore;
@property (nonatomic) /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*test_inputToModelScore;
@property (nonatomic) int topHitReason;
@property (nonatomic) bool vendorNameIsDisplayNamePrefix;
@property (nonatomic) float withinBundleScore;
@property (nonatomic) bool wordMatchedKeyword;

+ (unsigned short)featureFromVirtualIdx:(unsigned long long)arg1;
+ (void)initialize;
+ (id)rankingDescriptorForBundleFeature:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)L2FeatureVector;
- (struct { long long x1; unsigned long long x2[2]; /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x3; void*x4; void *x5[0]; }*)attributes;
- (double)closestUpComingDate;
- (long long)compare:(id)arg1 currentTime:(double)arg2;
- (id)dataCollectionBundle;
- (void)dealloc;
- (id)description;
- (bool)didMatchRankingDescriptor:(id)arg1;
- (id)displayName;
- (id)displayNameInitials;
- (bool)displayNameInitialsFirstWordAndMoreMatchOnly;
- (bool)displayNameInitialsPrefixMatchOnly;
- (id)dueDate;
- (bool)eligibleForDemotion;
- (id)exactMatchedKeyword;
- (float)feedbackScore;
- (id)firstMatchedAltName;
- (id)getBundleSpecificValue:(id)arg1 forPropertyName:(id)arg2 withQueryString:(id)arg3 isCJK:(bool)arg4 isBullseyeSearch:(bool)arg5 withEvaluator:(id)arg6;
- (bool)hasPolicyMultipleTermsPhraseMatch;
- (bool)hasShortCut;
- (id)identifier;
- (void)inferDateBinsFromDates:(id)arg1 intoBins:(int*)arg2;
- (id)initForParsecResultWithBundleID:(id)arg1;
- (id)initWithAttrs:(struct { long long x1; unsigned long long x2[2]; /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x3; void*x4; void *x5[0]; }*)arg1;
- (id)interestingDate;
- (bool)isBundleDemotedForBullseyeCommittedSearch;
- (bool)isKeywordMatch;
- (bool)isNotExecutable;
- (bool)isSafariTopHit;
- (id)likelyDisplayTitle;
- (id)localSuggestionsData;
- (bool)matchedQueryTerms;
- (id)moreRecentDateFromDate1:(id)arg1 date2:(id)arg2;
- (double)mostRecentUsedDate;
- (void)populateBundleSpecificFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2;
- (void)populateContactFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2;
- (void)populateCrossAttributeDerivedFeaturesWithContext:(struct prs_feature_population_ctx_t { struct __CFArray {} *x1; struct __CFArray {} *x2; struct __CFArray {} *x3; unsigned char x4; float x5[28]; float x6; float x7; float x8; float x9; unsigned int x10; unsigned long long x11; unsigned long long x12; long long x13; unsigned long long x14; }*)arg1 featureScoreInfo:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg2;
- (void)populateMailFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1;
- (void)populateOtherFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 withEvaluator:(id)arg2 currentTime:(double)arg3;
- (void)populateParsecAlbumFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecAnyFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecAppFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecBundleSpecificFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecEPubBookFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecMovieFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecPodcastFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecProfileFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecRemainingFeatures;
- (void)populateParsecRoundTripFeatures:(id)arg1 forParsecResult:(id)arg2;
- (void)populateParsecSongFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecTvShowFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateParsecWebVideoFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1 currentTime:(double)arg2 forParsecResult:(id)arg3;
- (void)populateRemainingFeaturesWithRanker:(id)arg1;
- (void)populateSMSFeatures:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg1;
- (void)populateTextFeatureValuesForProperty:(id)arg1 updatingBundleFeatureValues:(float*)arg2 propertyIndex:(unsigned long long)arg3 withEvaluator:(id)arg4 withContext:(struct prs_feature_population_ctx_t { struct __CFArray {} *x1; struct __CFArray {} *x2; struct __CFArray {} *x3; unsigned char x4; float x5[28]; float x6; float x7; float x8; float x9; unsigned int x10; unsigned long long x11; unsigned long long x12; long long x13; unsigned long long x14; }*)arg5 featureScoreInfo:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg6 propertyCanFuzzyMatch:(bool)arg7 keyboardLanguage:(id)arg8 isCJK:(bool)arg9 featureList:(const unsigned short*)arg10 propertyName:(id)arg11;
- (void)populateTextFeatureValuesForProperty:(id)arg1 updatingBundleFeatureValues:(float*)arg2 propertyIndex:(unsigned long long)arg3 withEvaluator:(id)arg4 withContext:(struct prs_feature_population_ctx_t { struct __CFArray {} *x1; struct __CFArray {} *x2; struct __CFArray {} *x3; unsigned char x4; float x5[28]; float x6; float x7; float x8; float x9; unsigned int x10; unsigned long long x11; unsigned long long x12; long long x13; unsigned long long x14; }*)arg5 featureScoreInfo:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg6 propertyCanFuzzyMatch:(bool)arg7 keyboardLanguage:(id)arg8 isCJK:(bool)arg9 propertyName:(id)arg10;
- (float)rawScore;
- (bool)recentForAboveThresholdTopHit;
- (bool)recentForTopHit;
- (float)score;
- (id)sectionBundleIdentifier;
- (bool)serializeToJSON:(void*)arg1 valuesOnly:(bool)arg2;
- (id)serverFeaturesJSON;
- (id)serverSuggestionsData;
- (void)setAttributes:(struct { long long x1; unsigned long long x2[2]; /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x3; void*x4; void *x5[0]; }*)arg1;
- (void)setClosestUpComingDate:(double)arg1;
- (void)setDisplayNameInitials:(id)arg1;
- (void)setDisplayNameInitialsFirstWordAndMoreMatchOnly:(bool)arg1;
- (void)setDisplayNameInitialsPrefixMatchOnly:(bool)arg1;
- (void)setEligibleForDemotion:(bool)arg1;
- (void)setExactMatchedKeyword:(id)arg1;
- (void)setFeedbackScore:(float)arg1;
- (void)setFirstMatchedAltName:(id)arg1;
- (void)setHasPolicyMultipleTermsPhraseMatch:(bool)arg1;
- (void)setHasShortCut:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsBundleDemotedForBullseyeCommittedSearch:(bool)arg1;
- (void)setIsKeywordMatch:(bool)arg1;
- (void)setIsNotExecutable:(bool)arg1;
- (void)setIsSafariTopHit:(bool)arg1;
- (void)setL2FeatureVector:(id)arg1;
- (void)setLocalSuggestionsData:(id)arg1;
- (void)setMatchedQueryTerms:(bool)arg1;
- (void)setMostRecentUsedDate:(double)arg1;
- (void)setRawScore:(float)arg1;
- (void)setRecentForAboveThresholdTopHit:(bool)arg1;
- (void)setRecentForTopHit:(bool)arg1;
- (void)setScore:(float)arg1;
- (void)setSectionBundleIdentifier:(id)arg1;
- (void)setServerFeaturesJSON:(id)arg1;
- (void)setServerSuggestionsData:(id)arg1;
- (void)setShouldHideUnderShowMore:(bool)arg1;
- (void)setShouldHideUnderShowMoreIfNotTophit:(bool)arg1;
- (void)setSuggestionBundleIDType;
- (void)setSuggestionScore:(double)arg1;
- (void)setTest_indexScore:(/* Warning: Unrecognized filer type: 'T' using 'void*' */ void*)arg1;
- (void)setTest_inputToModelScore:(/* Warning: Unrecognized filer type: 'T' using 'void*' */ void*)arg1;
- (void)setTopHitReason:(int)arg1;
- (void)setVendorNameIsDisplayNamePrefix:(bool)arg1;
- (void)setWithinBundleScore:(float)arg1;
- (void)setWordMatchedKeyword:(bool)arg1;
- (bool)shouldHideUnderShowMore;
- (bool)shouldHideUnderShowMoreIfNotTophit;
- (double)suggestionScore;
- (/* Warning: Unrecognized filer type: 'T' using 'void*' */ void*)test_indexScore;
- (/* Warning: Unrecognized filer type: 'T' using 'void*' */ void*)test_inputToModelScore;
- (int)topHitReason;
- (void)updateAccumulatedBundleFeatures:(float*)arg1 values:(float*)arg2 feature:(unsigned long long)arg3;
- (void)updateBundleFeatures:(float*)arg1 withArrValues:(float*)arg2 featureScoreInfo:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg3;
- (void)updateNumScoreDescriptorBundleFeatures:(float*)arg1 feature:(unsigned long long)arg2 featureScoreInfo:(struct PRSL2FeatureScoreInfo { unsigned short *x1; float *x2; unsigned long long x3; unsigned long long x4; }*)arg3;
- (void)updateScoreDescriptorBundleFeatures:(float*)arg1 feature:(unsigned long long)arg2;
- (bool)vendorNameIsDisplayNamePrefix;
- (float)withinBundleScore;
- (bool)wordMatchedKeyword;

@end
