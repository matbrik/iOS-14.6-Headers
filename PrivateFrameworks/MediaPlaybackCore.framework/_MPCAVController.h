/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface _MPCAVController : MPAVController <MPCPlaybackEngineImplementation> {
    long long  _actionAtQueueEnd;
    NSMutableSet * _failedItemsIdentifiers;
    NSString * _firstPlaybackItemIdentifier;
    bool  _hasPlayedSuccessfully;
    MPCPlaybackEngine * _playbackEngine;
    AVPlayerLayer * _playerLayer;
}

@property (nonatomic) long long actionAtQueueEnd;
@property (nonatomic) bool autoPlayWhenLikelyToKeepUp;
@property (nonatomic, readonly) MPAVItem *currentItem;
@property (nonatomic, readonly) float currentRate;
@property (nonatomic) double currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *failedItemsIdentifiers;
@property (nonatomic, copy) NSString *firstPlaybackItemIdentifier;
@property (nonatomic) bool hasPlayedSuccessfully;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MPCPlaybackEngine *playbackEngine;
@property (nonatomic, readonly) AVPlayerLayer *playerLayer;
@property (nonatomic, retain) <MPAVQueueController> *queueController;
@property (nonatomic, readonly) MPQueuePlayer *queuePlayer;
@property (getter=isReloadingPlaybackContext, nonatomic, readonly) bool reloadingPlaybackContext;
@property (nonatomic, readonly) long long state;
@property (nonatomic, readonly) long long stateBeforeInterruption;
@property (readonly) Class superclass;

+ (bool)prefersApplicationAudioSession;

- (void).cxx_destruct;
- (void)_configureAudioSession;
- (void)_connectAVPlayer;
- (void)_connectAVPlayerDeferringItemLoading:(bool)arg1;
- (void)_contentsChanged;
- (void)_enforcingPolicy:(bool)arg1;
- (id)_expectedAssetTypesForPlaybackMode:(long long)arg1;
- (void)_itemDidChange:(id)arg1;
- (void)_itemDidSignificantlyChangeElapsedTime:(double)arg1 rate:(float)arg2;
- (void)_itemFailedToPlayToEnd:(id)arg1;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)_itemWillChange:(id)arg1;
- (void)_networkPolicyItemCellularRestrictedNotification:(id)arg1;
- (void)_playbackUserDefaultsEQPresetDidChangeNotification:(id)arg1;
- (void)_queueDidEndWithReason:(id)arg1 lastItem:(id)arg2;
- (void)_setQueueController:(id)arg1 deferItemLoading:(bool)arg2;
- (void)_setState:(long long)arg1;
- (void)_streamBufferFull:(id)arg1;
- (void)_streamLikelyToKeepUp:(id)arg1;
- (void)_streamRanDry:(id)arg1;
- (void)_streamUnlikelyToKeepUp:(id)arg1;
- (void)_updateStateForPlaybackPrevention;
- (long long)actionAtQueueEnd;
- (bool)becomeActiveWithError:(id*)arg1;
- (float)currentRate;
- (void)endPlayback;
- (id)failedItemsIdentifiers;
- (id)firstPlaybackItemIdentifier;
- (void)handlePlaybackErrorWithUserInfo:(id)arg1;
- (bool)hasPlayedSuccessfully;
- (id)initWithPlaybackEngine:(id)arg1;
- (bool)isReloadingPlaybackContext;
- (void)loadSessionWithQueueController:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)playWithOptions:(unsigned long long)arg1;
- (id)playbackEngine;
- (void)playbackHasStartedForItem:(id)arg1;
- (id)playerLayer;
- (void)queueController:(id)arg1 didChangeActionAtQueueEnd:(long long)arg2;
- (void)queueController:(id)arg1 didChangeRepeatType:(long long)arg2;
- (void)queueController:(id)arg1 didChangeShuffleType:(long long)arg2;
- (void)queueController:(id)arg1 didIncrementVersionForSegment:(id)arg2;
- (void)reloadWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)replaceCurrentItemWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setActionAtQueueEnd:(long long)arg1;
- (void)setFailedItemsIdentifiers:(id)arg1;
- (void)setFirstPlaybackItemIdentifier:(id)arg1;
- (void)setHasPlayedSuccessfully:(bool)arg1;
- (void)togglePlaybackWithOptions:(unsigned long long)arg1;
- (void)updateAudioSession;

@end
